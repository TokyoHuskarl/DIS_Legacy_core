<<<<<<< HEAD
cev .id(91), .name("effect:arrow"), {
/* "https://dixq.net/g/s_01.html
Ox = 330
Oy = 331
DirX = 332
DirY = 333
TargX = 334
TargY = 335
FrameCounter1 = 336
FrameCounter**2 = 337
NeedFrame =338
X = 339
Y = 340
PreX = 341
PreY = 342"*/
@if s[141] .isOn() {
    @loop v[1017] .dst v[320] {
        v[242] %= v[1017]
        v[301] = v[242] * 100 + v[1018]
        @if v[v[301]] <= 1 {
            // "まず清掃"
            v[1301].copy v[v[301]], 100
            // "ポインタセット開始"
            v[300] = v[301] + 3
            v[296] = v[301] + 10
            v[295] = v[301] + 99
            v[330] = v[301] + 17
            v[331] = v[301] + 18
            v[334] = v[301] + 23
            v[335] = v[301] + 24
            v[332] = v[301] + 20
            v[333] = v[301] + 21
            v[336] = v[301] + 9
            v[338] = v[301] + 2
            v[339] = v[301] + 6
            v[340] = v[301] + 7
            v[341] = v[301] + 8
            v[342] = v[301] + 22
            // "イベント番号設定"
            v[v[300]] = 91
            // "描画終了時イベント番号設定"
            v[v[296]] = 31
            // "親Obj・子Obj"
            v[v[341]] = v[609]
            v[v[342]] = v[623]
            v[v[301] + 36] = v[637]
            // "#代入"
            v[v[301]] = 2
            v[v[295]] = v[700]
            v[v[338]] = v[603]
            v[v[330]] = v[607]
            v[v[331]] = v[608]
            v[v[334]] = v[624]
            v[v[335]] = v[625]
            v[v[334]] += rnd(-3, 3)
            v[v[335]] += rnd(-3, 3)
            v[v[332]] = v[v[330]] + v[v[334]]
            v[v[333]] = v[v[331]] + v[v[335]]
            v[v[332]] /= 2
            v[v[333]] /= 2
            v[v[333]] -= rnd(48, 64)
            v[v[339]] = v[v[330]]
            v[v[340]] = v[v[331]]
            // "#Arrow Swoosh Time"
            v[v[301] + 50] = v[700] / 2
            // "画像"
            v[310] = v[242] + v[1220]
            @pic[v[310]].show {
                "arrows\arrow"
                .pos v[361], v[362] .center
                .scrollWithMap
                .chromakey 1
                .scale 100
                .trans 100
                .rgbs 100, 100, 100, 100
                .mapLayer 7
                .eraseWhenTransfer
                .affectedByTint
                .affectedByFlash
                .affectedByShake
            }
            // "発射音"
            // "仕上げに登録消す"
            v[242..243] += 1
            @if `s[v[609] + 500] {
                @if v[182] < 2 {
                    v[182] += 1
                    // "#########################"
                    v[471] = 11550
                    v[472] = divmul(40, 100, v[2216])
                    v[473] = rnd(90, 100)
                    v[474] = divmul(v[361] + v[1001], v[1281], 50)
                    // "#########################"
                    @cmd v[471], "bow_shoot_01", .args v[472], 3
                    
                }
                v[13] = v[v[295]]
                v[330] = v[301] + 17
                v[334] = v[301] + 23
                v[v[330]].copy v[14], 2
                v[v[334]].copy v[16], 2
                v[18] = v[242]
                // "###################"
                // "v1=amount"
                // "v2=direction -1=right 0=cent 1=left"
                // "v3=timer"
                // "v4=parent"
                @loop v[1017] .dst v[320] {
                    v[244] %= v[1199]
                    v[351] = v[244] * 50 + v[1198]
                    @if v[v[351]] <= 1 {
                        // "まず清掃"
                        v[1301].copy v[v[351]], 50
                        // "ポインタセット開始"
                        // "設定"
                        v[v[351]] = 2
                        // "Timer"
                        v[v[351] + 49] = v[13]
                        // "Set itself"
                        v[v[351] + 3] = 120
                        // "Set Amount"
                        v[v[351] + 1] = v[11]
                        // "Set Dire"
                        v[v[351] + 27] = v[12]
                        // "Set Pare"
                        v[v[351] + 9] = v[18]
                        // "XY set"
                        v[357] = v[351] + 6
                        v[361].copy v[v[357]], 2
                        // "Access14 = x"
                        v[345] = v[351] + 4
                        v[361].copy v[v[345]], 2
                        v[v[345]..v[345] + 1] *= 10000
                        // ""
                        v[345] = v[351] + 17
                        v[14].copy v[v[345]], 2
                        v[345] = v[351] + 23
                        v[16].copy v[v[345]], 2
                        // "v"
                        v[345] = v[351] + 11
                        v[16].copy v[v[345]], 2
                        v[v[345]] .sub v[14], 2
                        v[v[345]].copy v[314], 2
                        v[v[345]] = muldiv(v[v[345]], 10000, v[13])
                        v[345] += 1
                        v[v[345]] = muldiv(v[v[345]], 10000, v[13])
                        // "Angle"
                        v[345] = atan2(v[315], v[314], 1000)
                        v[345] += v[345] <= 0 ? 360000 : 0
                        v[v[351] + 27] = v[345]
                        // "仕上げに登録消す"
                        v[244] += 1
                        @break
                        
                    }
                    v[244] += 1
                    
                }
                
                
            }
            @break
            
        }
        v[242] += 1
        
    }
    
    s[141].off
    
} .else bl {
    v[330] = v[301] + 17
    v[331] = v[301] + 18
    v[334] = v[301] + 23
    v[335] = v[301] + 24
    v[332] = v[301] + 20
    v[333] = v[301] + 21
    v[336] = v[301] + 9
    v[339] = v[301] + 6
    v[340] = v[301] + 7
    v[300] = v[301] + 3
    v[338] = v[301] + 2
    v[v[330]] .add v[53], 2
    v[v[332]] .add v[53], 2
    v[v[334]] .add v[53], 2
    v[295] = v[301] + 99
    // "#処理開始"
    @if v[v[338]] < v[v[300]] {
        // "微分より直前の座標をもとめたほうがはやいね"
        v[v[339]].copy v[341], 2
        v[337] = pow(v[v[336]], 2)
        // "321~323 = ([Frame] - t)"
        v[320] = v[v[338]] - v[v[336]]
        // "X"
        // "#まず第1項から"
        v[321] = pow(v[320], 2)
        v[321] *= v[v[330]]
        // "#まず第2項から"
        v[322] = v[320] * 2
        v[322] *= v[v[332]] * v[v[336]]
        // "#まず第3項から"
        v[323] = v[337] * v[v[334]]
        // "DrawX"
        v[v[339]] = (v[321]+v[322] + v[323]) / pow(v[v[338]], 2)
        v[361] = v[v[339]]
        // "Y"
        // "#まず第1項から"
        v[321] = pow(v[320], 2) * v[v[331]]
        // "#第2項"
        v[322] = v[320] * 2 * v[v[333]] * v[v[336]]
        // "#第3項"
        v[323] = v[337] * v[v[335]]
        // "DrawX"
        v[v[340]] = v[321]
        v[v[340]] += v[322] + v[323]
        v[v[340]] /= pow(v[v[338]], 2)
        v[362] = v[v[340]]
        // "進行角度だす"
        v[314] = v[v[339]] - v[341]
        // "V Save"
        v[v[301] + 11] = v[314]
        // ""
        v[315] = v[v[340]] - v[342]
        v[314] = atan2(v[315], v[314], 1000) + (v[314] <= 0 ? 360000 : 0)
        // "Angle Save"
        v[v[301] + 27] = v[314]
        // "Draw"
        v[310] = v[241] + v[1220]
        @pic[v[310]].show {
            "arrows\arrow"
            .pos v[361], v[362] .center
            .scrollWithMap
            .chromakey 1
            .scale 100
            .trans 0
            .rgbs 100, 100, 100, 100
            .angle v[314], 1000
            .mapLayer 7
            .eraseWhenTransfer
            .affectedByTint
            .affectedByFlash
            .affectedByShake
        }
        v[v[336]] += 1
        // "タイマー切れのときの処理"
        @if v[v[295]] == 0 {
            v[422] = 1
            v[362] += 11
            v[361].copy v[11], 2
            @call .cev 2010
            // "WATER"
            @if `v[v[4505] + v[23]] & 1 {
                @pic[v[310]].erase
                // "Bubble Particle"
                @loop v[1017] .dst v[320] {
                    v[244] %= v[1199]
                    v[351] = v[244] * 50 + v[1198]
                    @if v[v[351]] <= 1 {
                        // "init"
                        v[1301].copy v[v[351]], 50
                        v[v[351]] = 1
                        // "timer"
                        v[v[351] + 49] = 3
                        // "Set itself"
                        v[v[351] + 3] = 133
                        // "set pos"
                        v[341] = v[351] + 6
                        v[607].copy v[v[341]], 2
                        v[244] += 1
                        @break
                        
                    }
                    v[244] += 1
                    
                }
                
                
            } .else bl {
                v[314] = v[v[339]] - v[341]
                v[314] = atan2(v[315] + 8, v[314], 1000)
                v[314] += v[314] <= 0 ? 360000 : 0
                @pic[v[310]].show {
                    "arrows\arrow_g"
                    .pos v[361], v[362] .center
                    .scrollWithMap
                    .chromakey 1
                    .scale 100
                    .trans 0
                    .rgbs 70, 70, 70, 70
                    .angle v[314], 1000
                    .mapLayer 3
                    .eraseWhenTransfer
                    .affectedByTint
                    .affectedByFlash
                    .affectedByShake
                }
		//__if DEBUG_BUILD ==0{v[v[301]]=1}
                v[v[301] + 10] = 89
                
            }
            
        }
        
    }
    
}
}
=======
def Const_cos10 = 984  //0.9848077
def Const_Arrow_Check_Height = 17000 //start hit check if Z <17000
def Zero_Angle = 8000000
def arrow_base_hit = 24

__fn macro_parabolic_projectile_cal_angle $v $l {
	/*TT1 = $l //pix
	TT1 = pow($l,2)
	TT1 *= g_perFPS // avoid overflow (pix*1000)/f
	TT2= $v / 10//pix*1000/10f
	TT1 = divmul(TT1,pow(TT2,2),5000) //
	//TT2 = muldiv($l,10000,TT1) // (*10000)
	TT2 = muldiv($l,100000,TT1) // (*100)
	//TT3 = 1
	TT4 = divmul(TT2,4,TT2)
	TT4 -= 100
	TT5 = sqrt(TT4,1)//root *10^4 ->?*10^*/
	//TT2 *= 1000//set digit the same
	//TT1 = $l //pix
	TT1 = muldiv($l, $l, 1000) //(pix*10)
	TT1 *= 20//g_perFPS/100 // (pix*10000)
	TT2= $v //pix*1000/10f
	TT2 = muldiv($l,1000,divmul(TT1,pow(TT2,2),20)) //(pix*1000)/(pix*1000)*1000
	//TT3 = 1
	TT4 = TT2/1000 //prepare for sqrt
	TT4 = muldiv(TT4,TT4,4)
	TT4 -= 1
	TT5 = sqrt(TT4,10000)//root *10^4 ->?*10
	@if TT4 > 0 {
		//return 
		TT6 = TT2 / -2 * 10 //* 100// -2 /// / -2 --digit*100
		TT7 = TT6 + TT5
		TT8 = TT6 - TT5

		//TT6 =  360000000 + TT8
		//TT6 = TT5 - TT2 
		func_math_pseud_arctan(TT8)
		reg1 += 90000000
		reg2 = 1
	}.else bl{
		//cannot reach the goal with given parameters!
		reg2 = -1
	}
	func_devlog("cal proc: v1:\TT1 v2:\TT2  v4:\TT4 v5:\TT5 v6 chosen:\TT6, (\TT7,\TT8)")



}

__fn func_effect_arrow_init $selfid {

	    // clean up 
	    zeroArray100.copy v[effect_set_ptr], EffectArraySize
	    zeroArray100.copy effect_EffectType, EffectArraySize


	    // set effect type
	    effect_EffectType = EffectType_Has_LinkedFunc_Registered // ignore the first frame 
	    // set event id
	    effect_CallEffFunc = $selfid
	    // "描画終了時イベント番号設定"
	    effect_LinkedFunc = cevid_func_erase_effect
	    // set parents and targets - these vars handed down from ranged_shoot function
	    effect_ParentObject = Ptr19//Ptr19
	    effect_TargetObject = Ptr20//Ptr20
	    effect_DirWhenShot = agent_Direction//v[637]
	    
	    effect_Timer = 400 //Arrows can exist only for 400 frames... just in case if the gravity won't work well
	    //Set base Positions... 
	    agent_RelativeX.copy effect_RelativeX,2
	    //effect_RelativeX.add v[53], 2

	    effect_RelativeX.copy effect_SavedPositionX,2
	    effect_RelativeX.copy effect_milX,2
	    v[__id(effect_milX)..__id(effect_milY)] *= 1000

	    //v[624..625] set in agent ranged shoot process
	    v[624].copy effect_TargetObjectX,2
	    TT1 = rnd(-4,4)
	    effect_TargetObjectX += TT1 //= v[624] + TT1
	    TT1 = rnd(-4,4)
	    effect_TargetObjectY += TT1 //= v[625] + TT1
	    //Cal Distance
	    effect_TargetObjectX.copy TT1, 2
	    //TT1.add v[53], 2
	    TT1.sub effect_RelativeX, 2
	    TT1.copy effect_milPixVx,2
	    TT1.mul TT1, 2
	    effect_Distance_to_goal = TT1 + TT2
	    effect_Distance_to_goal = sqrt(effect_distance_to_goal,1000)
	    //Set XY velo
	    effect_milPixVab = agent_AAvelocity

	    //Then start caluclation
	    macro_parabolic_projectile_cal_angle(effect_milPixVab effect_Distance_to_goal)
	    effect_Angle = max(reg1, Zero_Angle)//zero-distance shooting(almost)
	    effect_milVz = muldiv(effect_milPixVab,sin(effect_Angle,1000000,1000),1000)
	    @if reg1 < 20000000{ //Close Quarter shooting!
	    	effect_milZ = 13000 //give 13pix height if the angle is too low - below 20 degree
		effect_milVz += g_perFPS
		effect_ArrowCheckHeight = 21500 //almost check every frame when zero distance shoot
		effect_HitBonus = effect_Distance_to_goal> agent_BaseRange_max / 3 ?arrow_base_hit+5:(effect_Distance_to_goal>agent_BaseRange_max / 5?(arrow_base_hit/2):-10)//Enemy too close!
	    }.else bl{
		effect_ArrowCheckHeight = Const_Arrow_Check_Height
		effect_HitBonus = arrow_base_hit
	    }
	    effect_Distance_to_goal /=1000 
	    func_devlog("cal return: Distance: \v[4020]pix Angle: \reg1mildegree vz:\v[4042]")

	    effect_2DAngle = atan2(effect_milPixVy,effect_milPixVx,1000)
	    TT2 = muldiv(effect_milPixVab,cos(effect_Angle,1000000,1000),1000)
	    effect_milPixVx = muldiv(TT2,cos(effect_2DAngle,1000,1000),1000)
	    effect_milPixVy = muldiv(TT2,sin(effect_2DAngle,1000,1000),1000)
	    func_devlog("XY 2d vector: v0:\v[4014] vx:\v[4012] vy:\v[4013] angle:\TT1")

	    effect_EffectType.copy v[Temp1], EffectArraySize
}

__fn func_effect_arrow_proc $arrowPictString {


    v[Temp1].copy effect_EffectType, EffectArraySize
    effect_RelativeX.copy effect_SavedPositionX,2
    @if effect_Timer > 1 {

	    effect_milX.add effect_milPixVx,2
	    v[53].copy TT1, 2
	    v[341..342] *= 1000
	    effect_milX.add TT1,2


	    effect_milX.copy effect_RelativeX,2
	    v[__id(effect_RelativeX)..__id(effect_RelativeY)] /= 1000
	    effect_milVz -= g_perFPS 
	    effect_milZ += effect_milVz
	    effect_RelativeX.copy effect_ArrowHitX,2
	    effect_RelativeY -= effect_milZ/1024

	    effect_RelativeX.copy TT1,2
	    TT1.sub effect_SavedPositionX,2
	    TT1.sub v[53],2 //angle  cal without cam diff 
	    effect_Angle = atan2(TT2, TT1, 1000) +360000



	    @if effect_milZ <= effect_ArrowCheckHeight{
		@if `!(effect_Flag&Arrow_Flag_Checked){
			effect_Flag|=Arrow_Flag_Check_Hit
		}
	    }
	    @if effect_milZ <= 100 {//Fall into the Ground
		effect_Timer=1
	    }
    }.else  bl{
	    v[53].copy TT1, 2
	    v[341..342] *= 1000
	    effect_milX.add TT1,2
	    effect_milX.copy effect_RelativeX,2
	    v[__id(effect_RelativeX)..__id(effect_RelativeY)] /= 1000
    }

    effect_EffectType.copy v[Temp1], EffectArraySize
	// "Draw"
	Temp10 = v[241] + v[1220]
	@pic[Temp10].show {
	    $arrowPictString
	    .pos effect_RelativeX, effect_RelativeY .center
	    .scrollWithMap
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .angle effect_Angle, 1000
	    .mapLayer 7
	    .eraseWhenTransfer
	    .affectedByTint
	    .affectedByFlash
	    .affectedByShake
	}


}



__fn func_effect_arrow_hit $WeaponType {

	// "Leave Arrow Picture"
	//v[Temp1] = 1
	// "エフェクト処理から呼び出される"
	//TT1 = Temp1 + 8
	//TT2 = Temp1 + 22
	/* "Access19 = AttackerObjectID	Access20 = TargetObjectID Access18 = TargetObjTypeチェックPtr"*/
	Ptr20 = effect_TargetObject
	Ptr10 = Ptr20*300
	Ptr18 = Ptr10 + 4701
	// "TargetObjが存在している"
	@if v[Ptr18] >= 1 {
	    // "処理開始"
	    // "#着弾点ゲット"
	    //ignore Z
	    effect_ArrowHitX.copy v[607], 2

	    // "#対象のx,y,width,heightゲット"
	    Temp10 = Ptr18 + 6
	    v[Temp10].copy TT1, 2
	    TT1.copy TT3, 2
	    Temp12 = Ptr18 + 9
	    v[Temp12].copy TT5, 2
	    TT1.sub TT5,2
	    TT3.add TT5,2

	    // "#当たり判定チェック"
	    //`between(v[607], TT1, TT3) && between(v[608], TT2, TT4)
	    @if v[607]>=TT1{ @if v[607]<=TT3{ @if v[608]>=TT2{ @if v[608]<=TT4{ //just box check. This looks awful but faster in RM proc 
		Ptr19 = effect_ParentObject
		Ptr9 = Ptr19 * 300
		s[167].off
		@if `v[Ptr10 + 4701] == UNIT_CLASS_STATIC {
		    s[167].on
		    
		}
		//set EffFlag
		TT1 = Temp1 + 69
		v[TT1] |= Arrow_Flag_Checked
		v[TT1] &= -2//~Arrow_Flag_Check_Hit

		v[Ptr10 + 4780] = v[1240] * v[4571]
		// "Get difference of elevationTemp20"
		Temp20 = v[Ptr9 + 4757] - v[Ptr18 + 56]
		var1 = Ptr19
		// "Get Dir"
		@if s[167] .isOff() {
		    //9.3.23

		    //get effect_DirectionWhenShoot
		    var3 = Temp1 + 36
		    var3 = v[var3]
		    //get effect_HitBonus
		    var4 = Temp1 + 97
		    var4 = v[var4]
		    //@call .cev 43
		    func_bs_ranged_hit_check(Ptr19 Ptr20 var3 bs_hitcheck_FLAG_ArrowMode var4)
		    v[607] = Ptr10 + 4707
		    v[v[607]].copy v[607],2
		} .else bl {
		    reg1 = 1
		    
		}
		@if reg1 == 1 {
		    Var_bs_WeaponType = $WeaponType //arrow
		    // "Hit!"
		    // "#CheckCrit"
		    // "Var1 = Obj 1~V[421] = ダメージ倍率"
		    @if s[167] .isOff() {
			var1 = Ptr19
			var5 = Ptr10 + 4700
			// "#Crit率ゲット"
			// "#3-CritReduction"
			TT2 = v[var1 * 300 + 4815] + 2 - v[var5 + 239]
			TT1 = rnd(0, 99)
			// "#CritDamageReduction#(450-[Reduction])%"
			TT3 = 450 - v[var5 + 240]
			// "#[Crit]%でフラグ"
			v[421] = TT2 >= TT1 ? TT3 : 100
			
		    } .else bl {
			v[421] = 100
			
		    }
		    // "#Elevation Bonus"
		    v[421] += 10 * Temp20
		    /* "＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
	ここそのうち用意した関数に置き換える
	＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃"*/
		    // "ADを取得"
		    /*var1 = Ptr19
		    var2 = 1
		    @call .cev 2004*/
		    macro_get_agent_slot_to_r1(Ptr19 SLOT_CURRENT_AD)
		    Temp1 = reg1
		    // "ARかMRか取得"
		    v[722] = Ptr9
		    v[722] += 4822
		    Temp2 = v[v[722]]
		    // "射撃属性"
		    Temp3 = 1
		    // "AABits"
		    var9 = v[722] + 2
		    var9 = v[var9]
		    //@call .cev 40
		    func_damage_calculation()
		    // "############"
		    // "Effect"
		    // "#あたったので演出チェック"
		    @if `s[Ptr20 + 500] == 1 {
			@if reg1 == reg2 {
			    // "Red Flash"
			    v[376] += v[182] < 5 ? 1 : 0
			    @if v[376] >= 2 {
				v[182] += 1
				v[329] = rnd(0, 2)
				// "#########################"
				v[472] = divmul(60, 100, v[2216])
				v[473] = rnd(90, 110)
				v[474] = divmul(v[607] + v[1001], v[1281], 50)
				inputstr .asg "arrow_hit_body_"
				inputstr .cat v[329]
				TT1 = 510
				// "Strings = t[TT1]"
				@cmd 11550, t[TT1], .args v[472], 3
				// "#########################"
				// "Get MaxHP of the victim"
                   		TT3 = v[TT2 = Ptr10 + 4805] / 10
				TT2 = rnd(0, 9)
				// "if the damage amount is higher than 10% of max HP of the victim more likely bleed effect happens"
				TT2 += TT3 < reg2 ? 3 : 0
				TT2 *= v[243] < v[1124] ? 1 : 0
				@if TT2 >= 8 {
				    v[711] = Ptr10
				    v[607] = v[711] + 4707
				    v[v[607]].copy v[607], 2
				    //s[141].on
				    v[372] = v[Ptr10 + 4840] & 4096 ? 1 : 0
				    //@call .cev 111
				    var4 = reg2 >= mini_blood_damage_threshold ? 0 : 1
				    func_call_mini_blood_f_effect(v[361] v[362] v[372] var4)
				    
				}
				
			    }
			    
			} .else bl {
			    // "#########################"
			    v[472] = divmul(45, 100, v[2216])
			    v[473] = rnd(80, 95)
			    v[474] = divmul(v[607] + v[1001], v[1281], 50)
			    @cmd 11550, "arrow_hit_armor", .args v[472], 3
			    // "#########################"
			    
			}
			
		    }
		    // "Remove Arrow Picture"
		    //Temp10 = v[241] + v[1220]
		    //@pic[Temp10].erase
		    var1 = v[241] + 1
		    func_erase_effect(var1)
		    // "#試作#Functionを呼ぶ"
		    Ptr15 = Ptr9
		    Ptr15 += 4700
		    v[730] = Ptr15 + 130
		    @if v[v[730]] >= 1200 {
			TT1 = Ptr15 + 7
			v[TT1].copy v[590], 2
			@call .cev v[v[730]]
			
		    }
		    
		} .else bl {
		    // "Miss!"
		    v[607].copy v[221], 2
		    @if `s[Ptr20 + 500] == 1 {
			@if reg2 == 1 {
			    // "Shield Blocked!"
			    // "#########################"
			    v[472] = divmul(60, 100, v[2216])
			    v[473] = rnd(115, 120)
			    v[474] = divmul(v[607] + v[1001], v[1281], 50)
			    @cmd 11550, "重いパンチ2", .args v[472], 3
			    // "#########################"

			    @if s[307] .isOff() {
						TT2 = Ptr10 + 4984
						@if v[TT2] < 1 { 
							@if `v[183] < v[4572] / 2 {
									// "#描画範囲内か？"
									v[220] = ((v[220] + 1) % 30) + 1201
									//9.3.23
									//v[220] += 1201
									//v[220] += 1
									v[223] = v[220]
									v[221] += rnd(-6, 6)
									v[222] += rnd(-3, 3)
									v[222] += s[162] == 1 ? 10 : 0
									// "#サイズは最低100%"
									v[225] = 100
									// "AR"
									TT1 = v[1204] - 10
									@pic[v[223]].show {
										PATH_pic_numdir_block
										.pos v[221], v[222] .center
										.scrollWithMap
										.chromakey 1
										.scale v[225]
										.trans TT1
										.rgbs 100, 100, 100, 100
										.mapLayer 7
										.eraseWhenTransfer
										.affectedByFlash
										.affectedByShake
									}
									v[222] = v[608] - 24
									v[222] += s[162] == 1 ? 10 : 0
									@pic[v[223]].move {
										.pos v[221], v[222] .center
										.scale v[225]
										.trans 100
										.time 12
										.rgbs 100, 100, 100, 100
									}
									v[183] += v[184] >= v[1128] ? 2 : 1
									
							}
						}
			    }

			    // "Call Shield"
			    TT2 = Ptr10 + 4952
			    // "NOT siege ram"
			    @if `v[TT2 - 123] != 100 {
						v[TT2 + 32] = v[TT2] > 0 ? 4 : 0 // shield flash!
						// "#Shield Motion"
						TT2 = Ptr10 
						TT2 += 4943
						@if v[TT2] != 1 {
								v[TT2] = 2
								TT2 -= 215
								v[TT2] += v[TT2] < 300 ? 900 : 0
								
						}
				
			    }
			    // "Remove Arrow Picture"
		    	var1 = v[241] + 1
			    func_erase_effect(var1)
			    
			} .else bl {
			    @if s[307] .isOff() {
				@if `v[183] < v[4572] / 2 {
				    // "#描画範囲内か？"
				    v[220] %= 30
				    v[220] += 1201
				    v[220] += 1
				    v[223] = v[220]
				    v[221] += rnd(-6, 6)
				    v[222] += rnd(-3, 3)
				    v[222] += s[162] == 1 ? 10 : 0
				    // "#サイズは最低100%"
				    v[225] = 100
				    // "AR"
				    TT1 = v[1204] - 10
				    @pic[v[223]].show {
					PATH_pic_numdir_miss
					.pos v[221], v[222] .center
					.scrollWithMap
					.chromakey 1
					.scale v[225]
					.trans TT1
					.rgbs 100, 100, 100, 100
					.mapLayer 7
					.eraseWhenTransfer
					.affectedByFlash
					.affectedByShake
				    }
				    v[222] = v[608] - 24
				    v[222] += s[162] == 1 ? 10 : 0
				    @pic[v[223]].move {
					.pos v[221], v[222] .center
					.scale v[225]
					.trans 100
					.time 12
					.rgbs 100, 100, 100, 100
				    }
				    v[183] += v[184] >= v[1128] ? 2 : 1
				    
				}
				
			    }
			    
			}
			
		    }
		    
		}
		
	    }}}}
	    
	}.else bl{ // Target Obj is already dood
		TT1 = Temp1 + 69
		v[TT1] |= Arrow_Flag_Checked
		v[TT1] &= -2//~Arrow_Flag_Check_Hit
	}
	s[141].off



}


__fn func_effect_arrow_on_ground $ground_picture $WeaponType {

	@if effect_Timer == 0 {
	    //v[422] = 1
	    v[362] += 11
	    effect_RelativeX.copy var1, 2
	    @call .cev 2010
	    // "WATER"
	    @if `v[v[4505] + reg3] & 1 {
		@pic[Temp10].erase
		// "Bubble Particle"
		@loop v[1017] .dst Temp20 {
		    v[244] %= v[1199]
		    TT11 = v[244] * 50 + v[1198]
		    @if v[TT11] <= 1 {
			// "init"
			v[1301].copy v[TT11], 50
			v[TT11] = 1
			// "timer"
			v[TT11 + 49] = 3
			// "Set itself"
			v[TT11 + 3] = 133
			// "set pos"
			TT1 = TT11 + 6
			v[607].copy v[TT1], 2
			v[244] += 1
			@break
			
		    }
		    v[244] += 1
		    
		}
		
		
	    } .else bl {
		Temp14 = effect_milPixVy+24000
		Temp14 = atan2(Temp14, effect_milPixVx, 1000)
		//Temp14 += effect_milPixVy <= 0 ? 90000 : 0
		//Temp14 += 90000
		//Temp14 *= Temp14 <= 0 ? -1 : 1
		@pic[Temp10].show {
		    $ground_picture
		    .pos effect_RelativeX, effect_RelativeY .center
		    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 70, 70, 70, 70
		    .angle Temp14, 1000
		    .mapLayer 3
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		//__if DEBUG_BUILD ==0{v[Temp1]=1}
		//func_devlog("ground angle\Temp14")
		v[Temp1]=1
		
	    }

	}.elif `effect_Flag&Arrow_Flag_Check_Hit {func_effect_arrow_hit($WeaponType)}

}

cev .id(cevid_eff_arrow), .name("effect:arrow"), {
@if s[141] .isOn() {
    @loop v[1017] .dst Temp20 {
	macro_effect_array_increment_ptr(cevid_eff_arrow)
	@if v[effect_set_ptr] <= 1 {
	    func_effect_arrow_init(cevid_eff_arrow)
	    // "ポインタセット開始"
	    // "画像"
	    Temp10 = v[242] + v[1220]
	    @pic[Temp10].show {
		"arrows\arrow"
		.pos v[361], v[362] .center
		.scrollWithMap
		.chromakey 1
		.scale 100
		.trans 100
		.rgbs 100, 100, 100, 100
		.mapLayer 7
		.eraseWhenTransfer
		.affectedByTint
		.affectedByFlash
		.affectedByShake
	    }
	    // "発射音"
	    // "仕上げに登録消す"
	    v[242..243] += 1
	    @if `s[Ptr19 + 500] == 1 {
		@if v[182] < 2 {
		    v[182] += 1
		    // "#########################"
		    v[471] = 11550
		    v[472] = divmul(40, 100, v[2216])
		    v[473] = rnd(90, 100)
		    v[474] = divmul(v[361] + v[1001], v[1281], 50)
		    // "#########################"
		    @cmd v[471], "bow_shoot_01", .args v[472], 3
		    
		}
		var3 = v[Ptr15]
		v[330] = Temp1 + 17
		v[334] = Temp1 + 23
		v[v[330]].copy var4, 2
		v[v[334]].copy var6, 2
		//var8 = v[242]


		//Arrow Particle SET
		// "###################"
		// "v1=amount"
		// "v2=direction -1=right 0=cent 1=left"
		// "v3=timer"
		// "v4=parent"
		@loop v[1017] .dst Temp20 {
		    v[244] %= v[1199]
		    TT11 = v[244] * 50 
		    TT11 += v[1198]
		    @if v[TT11] <= 1 {
			// "まず清掃"
			v[1301].copy v[TT11], ParticleArraySize
			v[1301].copy emitter_ParticleType, ParticleArraySize
			// "ポインタセット開始"
			// "設定"
			emitter_ParticleType = 1002 // ignore first frame
			// "Timer"
			emitter_Timer = var3
			// "Set itself"
			emitter_CallPartFunc = 171 //new arrow shade!
			// "Set Amount"
			//emitter_ParticleAmount = var1
			// "Set Dire"
			emitter_Angle = effect_2DAngle
			// "Set Pare"
			emitter_ParentEffect = v[242]
			// "XY set"
			effect_milX.copy emitter_MilX, 4
			effect_milPixVx.copy emitter_milMilPixVx,6
			// ""
			emitter_ParticleType.copy v[TT11], ParticleArraySize

			v[244] += 1
			@break
			
		    }
		    v[244] += 1
		    
		}
		
		
	    }
	    @break
	    
	}
	v[242] += 1
	
    }
    
    s[141].off
    
} .else bl {

	func_effect_arrow_proc("arrows\arrow")
	// "タイマー切れのときの処理	
	func_effect_arrow_on_ground("arrows\arrow_g" WeaponType_Arrow)
		    

}
	   




}
>>>>>>> 88b5194136650670640ef002a8086e2b5f7f7357
