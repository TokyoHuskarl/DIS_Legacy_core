def Const_cos10 = 984  //0.9848077
def Const_Arrow_Check_Height = 17000 //start hit check if Z <17000
def Zero_Angle = 8000000
def arrow_base_hit = 24

__fn macro_parabolic_projectile_cal_angle $v $l {
	/*TT1 = $l //pix
	TT1 = pow($l,2)
	TT1 *= g_perFPS // avoid overflow (pix*1000)/f
	TT2= $v / 10//pix*1000/10f
	TT1 = divmul(TT1,pow(TT2,2),5000) //
	//TT2 = muldiv($l,10000,TT1) // (*10000)
	TT2 = muldiv($l,100000,TT1) // (*100)
	//TT3 = 1
	TT4 = divmul(TT2,4,TT2)
	TT4 -= 100
	TT5 = sqrt(TT4,1)//root *10^4 ->?*10^*/
	//TT2 *= 1000//set digit the same
	//TT1 = $l //pix
	TT1 = muldiv($l, $l, 1000) //(pix*10)
	TT1 *= 20//g_perFPS/100 // (pix*10000)
	TT2= $v //pix*1000/10f
	TT2 = muldiv($l,1000,divmul(TT1,pow(TT2,2),20)) //(pix*1000)/(pix*1000)*1000
	//TT3 = 1
	TT4 = TT2/1000 //prepare for sqrt
	TT4 = muldiv(TT4,TT4,4)
	TT4 -= 1
	TT5 = sqrt(TT4,10000)//root *10^4 ->?*10
	@if TT4 > 0 {
		//return 
		TT6 = TT2 / -2 * 10 //* 100// -2 /// / -2 --digit*100
		TT7 = TT6 + TT5
		TT8 = TT6 - TT5

		//TT6 =  360000000 + v[348]
		//TT6 = TT5 - TT2 
		func_math_pseud_arctan(TT8)
		reg1 += 90000000
		reg2 = 1
	}.else bl{
		//cannot reach the goal with given parameters!
		reg2 = -1
	}
	func_devlog("cal proc: v1:\v[341] v2:\v[342]  v4:\v[344] v5:\v[345] v6 chosen:\v[346], (\v[347],\v[348])")



}

__fn func_effect_arrow_init $selfid {

	    // clean up 
	    zeroArray100.copy v[effect_set_ptr], EffectArraySize
	    zeroArray100.copy effect_EffectType, EffectArraySize


	    // set effect type
	    effect_EffectType = EffectType_Has_LinkedFunc_Registered // ignore the first frame 
	    // set event id
	    effect_CallEffFunc = $selfid
	    // "描画終了時イベント番号設定"
	    effect_LinkedFunc = cevid_func_erase_effect
	    // set parents and targets - these vars handed down from ranged_shoot function
	    effect_ParentObject = Ptr19//v[299]
	    effect_TargetObject = Ptr20//v[300]
	    effect_DirWhenShot = agent_Direction//v[637]
	    
	    effect_Timer = 400 //Arrows can exist only for 400 frames... just in case if the gravity won't work well
	    //Set base Positions... 
	    agent_RelativeX.copy effect_RelativeX,2
	    //effect_RelativeX.add v[53], 2

	    effect_RelativeX.copy effect_SavedPositionX,2
	    effect_RelativeX.copy effect_milX,2
	    v[__id(effect_milX)..__id(effect_milY)] *= 1000

	    //v[624..625] set in agent ranged shoot process
	    v[624].copy effect_TargetObjectX,2
	    TT1 = rnd(-4,4)
	    effect_TargetObjectX += TT1 //= v[624] + TT1
	    TT1 = rnd(-4,4)
	    effect_TargetObjectY += TT1 //= v[625] + TT1
	    //Cal Distance
	    effect_TargetObjectX.copy TT1, 2
	    //TT1.add v[53], 2
	    TT1.sub effect_RelativeX, 2
	    TT1.copy effect_milPixVx,2
	    TT1.mul TT1, 2
	    effect_Distance_to_goal = TT1 + TT2
	    effect_Distance_to_goal = sqrt(effect_distance_to_goal,1000)
	    //Set XY velo
	    effect_milPixVab = agent_AAvelocity

	    //Then start caluclation
	    macro_parabolic_projectile_cal_angle(effect_milPixVab effect_Distance_to_goal)
	    effect_Angle = max(reg1, Zero_Angle)//zero-distance shooting(almost)
	    effect_milVz = muldiv(effect_milPixVab,sin(effect_Angle,1000000,1000),1000)
	    @if reg1 < 20000000{ //Close Quarter shooting!
	    	effect_milZ = 13000 //give 13pix height if the angle is too low - below 20 degree
		effect_milVz += g_perFPS
		effect_ArrowCheckHeight = 21500 //almost check every frame when zero distance shoot
		effect_HitBonus = effect_Distance_to_goal> agent_BaseRange_max / 3 ?arrow_base_hit+5:(effect_Distance_to_goal>agent_BaseRange_max / 5?(arrow_base_hit/2):-10)//Enemy too close!
	    }.else bl{
		effect_ArrowCheckHeight = Const_Arrow_Check_Height
		effect_HitBonus = arrow_base_hit
	    }
	    effect_Distance_to_goal /=1000 
	    func_devlog("cal return: Distance: \v[4020]pix Angle: \v[21]mildegree vz:\v[4042]")

	    effect_2DAngle = atan2(effect_milPixVy,effect_milPixVx,1000)
	    TT2 = muldiv(effect_milPixVab,cos(effect_Angle,1000000,1000),1000)
	    effect_milPixVx = muldiv(TT2,cos(effect_2DAngle,1000,1000),1000)
	    effect_milPixVy = muldiv(TT2,sin(effect_2DAngle,1000,1000),1000)
	    func_devlog("XY 2d vector: v0:\v[4014] vx:\v[4012] vy:\v[4013] angle:\v[341]")

	    effect_EffectType.copy v[v[301]], EffectArraySize
}

__fn func_effect_arrow_proc $arrowPictString {


    v[v[301]].copy effect_EffectType, EffectArraySize
    effect_RelativeX.copy effect_SavedPositionX,2
    @if effect_Timer > 1 {

	    effect_milX.add effect_milPixVx,2
	    v[53].copy TT1, 2
	    v[341..342] *= 1000
	    effect_milX.add TT1,2


	    effect_milX.copy effect_RelativeX,2
	    v[__id(effect_RelativeX)..__id(effect_RelativeY)] /= 1000
	    effect_milVz -= g_perFPS 
	    effect_milZ += effect_milVz
	    effect_RelativeX.copy effect_ArrowHitX,2
	    effect_RelativeY -= effect_milZ/1024

	    effect_RelativeX.copy TT1,2
	    TT1.sub effect_SavedPositionX,2
	    TT1.sub v[53],2 //angle  cal without cam diff 
	    effect_Angle = atan2(v[342], v[341], 1000) +360000



	    @if effect_milZ <= effect_ArrowCheckHeight{
		@if `!(effect_Flag&Arrow_Flag_Checked){
			effect_Flag|=Arrow_Flag_Check_Hit
		}
	    }
	    @if effect_milZ <= 100 {//Fall into the Ground
		effect_Timer=1
	    }
    }.else  bl{
	    v[53].copy TT1, 2
	    v[341..342] *= 1000
	    effect_milX.add TT1,2
	    effect_milX.copy effect_RelativeX,2
	    v[__id(effect_RelativeX)..__id(effect_RelativeY)] /= 1000
    }

    effect_EffectType.copy v[v[301]], EffectArraySize
	// "Draw"
	v[310] = v[241] + v[1220]
	@pic[v[310]].show {
	    $arrowPictString
	    .pos effect_RelativeX, effect_RelativeY .center
	    .scrollWithMap
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .angle effect_Angle, 1000
	    .mapLayer 7
	    .eraseWhenTransfer
	    .affectedByTint
	    .affectedByFlash
	    .affectedByShake
	}


}



__fn func_effect_arrow_hit $WeaponType {

	// "Leave Arrow Picture"
	//v[v[301]] = 1
	// "エフェクト処理から呼び出される"
	//v[341] = v[301] + 8
	//v[342] = v[301] + 22
	/* "Access19 = AttackerObjectID	Access20 = TargetObjectID Access18 = TargetObjTypeチェックPtr"*/
	Ptr20 = effect_TargetObject
	Ptr10 = Ptr20*300
	v[298] = Ptr10 + 4701
	// "TargetObjが存在している"
	@if v[v[298]] >= 1 {
	    // "処理開始"
	    // "#着弾点ゲット"
	    //ignore Z
	    effect_ArrowHitX.copy v[607], 2

	    // "#対象のx,y,width,heightゲット"
	    v[310] = v[298] + 6
	    v[v[310]].copy TT1, 2
	    TT1.copy TT3, 2
	    v[312] = v[298] + 9
	    v[v[312]].copy TT5, 2
	    TT1.sub TT5,2
	    TT3.add TT5,2

	    // "#当たり判定チェック"
	    //`between(v[607], TT1, TT3) && between(v[608], TT2, TT4)
	    @if v[607]>=TT1{ @if v[607]<=TT3{ @if v[608]>=TT2{ @if v[608]<=TT4{//just box check
		Ptr19 = effect_ParentObject
		Ptr9 = Ptr19*300
		s[167].off
		@if `v[Ptr10 + 4701] == UNIT_CLASS_STATIC {
		    s[167].on
		    
		}
		//set EffFlag
		TT1 = v[301]+69
		v[TT1] |= Arrow_Flag_Checked
		v[TT1] &= -2//~Arrow_Flag_Check_Hit

		v[Ptr10 + 4780] = v[1240] * v[4571]
		// "Get difference of elevationTemp20"
		v[320] = v[Ptr9 + 4757] - v[v[298] + 56]
		v[11] = v[299]
		// "Get Dir"
		@if s[167] .isOff() {
		    //9.3.23

		    //get effect_DirectionWhenShoot
		    var3 = v[301] + 36
		    var3 = v[var3]
		    //get effect_HitBonus
		    var4 = v[301] + 97
		    var4 = v[var4]
		    //@call .cev 43
		    func_bs_ranged_hit_check(v[299] v[300] var3 bs_hitcheck_FLAG_ArrowMode var4)
		    v[607] = Ptr10 + 4707
		    v[v[607]].copy v[607],2
		} .else bl {
		    v[21] = 1
		    
		}
		@if v[21] == 1 {
		    Var_bs_WeaponType = $WeaponType //arrow
		    // "Hit!"
		    // "#CheckCrit"
		    // "Var1 = Obj 1~V[421] = ダメージ倍率"
		    @if s[167] .isOff() {
			v[11] = v[299]
			v[15] = Ptr10 + 4700
			// "#Crit率ゲット"
			// "#3-CritReduction"
			v[342] = v[v[11] * 300 + 4815] + 2 - v[v[15] + 239]
			v[341] = rnd(0, 99)
			// "#CritDamageReduction#(450-[Reduction])%"
			v[343] = 450 - v[v[15] + 240]
			// "#[Crit]%でフラグ"
			v[421] = v[342] >= v[341] ? v[343] : 100
			
		    } .else bl {
			v[421] = 100
			
		    }
		    // "#Elevation Bonus"
		    v[421] += 10 * v[320]
		    /* "＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
	ここそのうち用意した関数に置き換える
	＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃"*/
		    // "ADを取得"
		    /*v[11] = v[299]
		    v[12] = 1
		    @call .cev 2004*/
		    macro_get_agent_slot_to_r1(v[299] SLOT_CURRENT_AD)
		    v[301] = v[21]
		    // "ARかMRか取得"
		    v[722] = Ptr9
		    v[722] += 4822
		    v[302] = v[v[722]]
		    // "射撃属性"
		    v[303] = 1
		    // "AABits"
		    v[19] = v[722] + 2
		    v[19] = v[v[19]]
		    //@call .cev 40
		    func_damage_calculation()
		    // "############"
		    // "Effect"
		    // "#あたったので演出チェック"
		    @if `s[v[300] + 500] == 1 {
			@if v[21] == v[22] {
			    // "Red Flash"
			    v[376] += v[182] < 5 ? 1 : 0
			    @if v[376] >= 2 {
				v[182] += 1
				v[329] = rnd(0, 2)
				// "#########################"
				v[472] = divmul(60, 100, v[2216])
				v[473] = rnd(90, 110)
				v[474] = divmul(v[607] + v[1001], v[1281], 50)
				t[510] .asg "arrow_hit_body_"
				t[510] .cat v[329]
				v[341] = 510
				// "Strings = t[v[341]]"
				@cmd 11550, t[v[341]], .args v[472], 3
				// "#########################"
				// "Get MaxHP of the victim"
                   		v[343] = v[v[342] = Ptr10 + 4805] / 10
				v[342] = rnd(0, 9)
				// "if the damage amount is higher than 10% of max HP of the victim more likely bleed effect happens"
				v[342] += v[343] < v[22] ? 3 : 0
				v[342] *= v[243] < v[1124] ? 1 : 0
				@if v[342] >= 8 {
				    v[711] = Ptr10
				    v[607] = v[711] + 4707
				    v[v[607]].copy v[607], 2
				    //s[141].on
				    v[372] = v[Ptr10 + 4840] & 4096 ? 1 : 0
				    //@call .cev 111
				    v[14] = v[22] >= mini_blood_damage_threshold ? 0 : 1
				    func_call_mini_blood_f_effect(v[361] v[362] v[372] v[14])
				    
				}
				
			    }
			    
			} .else bl {
			    // "#########################"
			    v[472] = divmul(45, 100, v[2216])
			    v[473] = rnd(80, 95)
			    v[474] = divmul(v[607] + v[1001], v[1281], 50)
			    @cmd 11550, "arrow_hit_armor", .args v[472], 3
			    // "#########################"
			    
			}
			
		    }
		    // "Remove Arrow Picture"
		    //v[310] = v[241] + v[1220]
		    //@pic[v[310]].erase
		    var1 = v[241] + 1
		    func_erase_effect(var1)
		    // "#試作#Functionを呼ぶ"
		    v[295] = Ptr9
		    v[295] += 4700
		    v[730] = v[295] + 130
		    @if v[v[730]] >= 1200 {
			v[341] = v[295] + 7
			v[v[341]].copy v[590], 2
			@call .cev v[v[730]]
			
		    }
		    
		} .else bl {
		    // "Miss!"
		    v[607].copy v[221], 2
		    @if `s[v[300] + 500] == 1 {
			@if v[22] == 1 {
			    // "Shield Blocked!"
			    // "#########################"
			    v[472] = divmul(60, 100, v[2216])
			    v[473] = rnd(115, 120)
			    v[474] = divmul(v[607] + v[1001], v[1281], 50)
			    @cmd 11550, "重いパンチ2", .args v[472], 3
			    // "#########################"
			    // "Call Shield"
			    v[342] = Ptr10 + 4952
			    // "NOT siege ram"
			    @if `v[v[342] - 123] != 100 {
				v[v[342] + 32] = v[v[342]] > 0 ? 4 : 0
				// "#Shield Motion"
				v[342] = Ptr10 
				v[342] += 4943
				@if v[v[342]] != 1 {
				    v[v[342]] = 2
				    v[342] -= 215
				    v[v[342]] += v[v[342]] < 300 ? 900 : 0
				    
				}
				
			    }
			    @if s[307] .isOff() {
				@if `v[183] < v[4572] / 2 {
				    // "#描画範囲内か？"
				    v[220] = ((v[220]+1)%30)+1201
				    //9.3.23
				    //v[220] += 1201
				    //v[220] += 1
				    v[223] = v[220]
				    v[221] += rnd(-6, 6)
				    v[222] += rnd(-3, 3)
				    v[222] += s[162] == 1 ? 10 : 0
				    // "#サイズは最低100%"
				    v[225] = 100
				    // "AR"
				    v[341] = v[1204] - 10
				    @pic[v[223]].show {
					"num\num_block"
					.pos v[221], v[222] .center
					.scrollWithMap
					.chromakey 1
					.scale v[225]
					.trans v[341]
					.rgbs 100, 100, 100, 100
					.mapLayer 7
					.eraseWhenTransfer
					.affectedByFlash
					.affectedByShake
				    }
				    v[222] = v[608] - 24
				    v[222] += s[162] == 1 ? 10 : 0
				    @pic[v[223]].move {
					.pos v[221], v[222] .center
					.scale v[225]
					.trans 100
					.time 12
					.rgbs 100, 100, 100, 100
				    }
				    v[183] += v[184] >= v[1128] ? 2 : 1
				    
				}
				
			    }
			    // "Remove Arrow Picture"
		    	    var1 = v[241] + 1
			    func_erase_effect(var1)
			    
			} .else bl {
			    @if s[307] .isOff() {
				@if `v[183] < v[4572] / 2 {
				    // "#描画範囲内か？"
				    v[220] %= 30
				    v[220] += 1201
				    v[220] += 1
				    v[223] = v[220]
				    v[221] += rnd(-6, 6)
				    v[222] += rnd(-3, 3)
				    v[222] += s[162] == 1 ? 10 : 0
				    // "#サイズは最低100%"
				    v[225] = 100
				    // "AR"
				    v[341] = v[1204] - 10
				    @pic[v[223]].show {
					"num\num_miss"
					.pos v[221], v[222] .center
					.scrollWithMap
					.chromakey 1
					.scale v[225]
					.trans v[341]
					.rgbs 100, 100, 100, 100
					.mapLayer 7
					.eraseWhenTransfer
					.affectedByFlash
					.affectedByShake
				    }
				    v[222] = v[608] - 24
				    v[222] += s[162] == 1 ? 10 : 0
				    @pic[v[223]].move {
					.pos v[221], v[222] .center
					.scale v[225]
					.trans 100
					.time 12
					.rgbs 100, 100, 100, 100
				    }
				    v[183] += v[184] >= v[1128] ? 2 : 1
				    
				}
				
			    }
			    
			}
			
		    }
		    
		}
		
	    }}}}
	    
	}.else bl{ // Target Obj is already dood
		TT1 = v[301]+69
		v[TT1] |= Arrow_Flag_Checked
		v[TT1] &= -2//~Arrow_Flag_Check_Hit
	}
	s[141].off



}


__fn func_effect_arrow_on_ground $ground_picture $WeaponType {

	@if effect_Timer == 0 {
	    //v[422] = 1
	    v[362] += 11
	    effect_RelativeX.copy v[11], 2
	    @call .cev 2010
	    // "WATER"
	    @if `v[v[4505] + v[23]] & 1 {
		@pic[v[310]].erase
		// "Bubble Particle"
		@loop v[1017] .dst v[320] {
		    v[244] %= v[1199]
		    v[351] = v[244] * 50 + v[1198]
		    @if v[v[351]] <= 1 {
			// "init"
			v[1301].copy v[v[351]], 50
			v[v[351]] = 1
			// "timer"
			v[v[351] + 49] = 3
			// "Set itself"
			v[v[351] + 3] = 133
			// "set pos"
			v[341] = v[351] + 6
			v[607].copy v[v[341]], 2
			v[244] += 1
			@break
			
		    }
		    v[244] += 1
		    
		}
		
		
	    } .else bl {
		v[314] = effect_milPixVy+24000
		v[314] = atan2(v[314], effect_milPixVx, 1000)
		//v[314] += effect_milPixVy <= 0 ? 90000 : 0
		//v[314] += 90000
		//v[314] *= v[314] <= 0 ? -1 : 1
		@pic[v[310]].show {
		    $ground_picture
		    .pos effect_RelativeX, effect_RelativeY .center
		    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 70, 70, 70, 70
		    .angle v[314], 1000
		    .mapLayer 3
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		//__if DEBUG_BUILD ==0{v[v[301]]=1}
		//func_devlog("ground angle\v[314]")
		v[v[301]]=1
		
	    }

	}.elif `effect_Flag&Arrow_Flag_Check_Hit {func_effect_arrow_hit($WeaponType)}

}

cev .id(cevid_eff_arrow), .name("effect:arrow"), {
@if s[141] .isOn() {
    @loop v[1017] .dst v[320] {
	macro_effect_array_increment_ptr(cevid_eff_arrow)
	@if v[effect_set_ptr] <= 1 {
	    func_effect_arrow_init(cevid_eff_arrow)
	    // "ポインタセット開始"
	    // "画像"
	    v[310] = v[242] + v[1220]
	    @pic[v[310]].show {
		"arrows\arrow"
		.pos v[361], v[362] .center
		.scrollWithMap
		.chromakey 1
		.scale 100
		.trans 100
		.rgbs 100, 100, 100, 100
		.mapLayer 7
		.eraseWhenTransfer
		.affectedByTint
		.affectedByFlash
		.affectedByShake
	    }
	    // "発射音"
	    // "仕上げに登録消す"
	    v[242..243] += 1
	    @if `s[Ptr19 + 500] == 1 {
		@if v[182] < 2 {
		    v[182] += 1
		    // "#########################"
		    v[471] = 11550
		    v[472] = divmul(40, 100, v[2216])
		    v[473] = rnd(90, 100)
		    v[474] = divmul(v[361] + v[1001], v[1281], 50)
		    // "#########################"
		    @cmd v[471], "bow_shoot_01", .args v[472], 3
		    
		}
		v[13] = v[v[295]]
		v[330] = v[301] + 17
		v[334] = v[301] + 23
		v[v[330]].copy v[14], 2
		v[v[334]].copy v[16], 2
		//v[18] = v[242]


		//Arrow Particle SET
		// "###################"
		// "v1=amount"
		// "v2=direction -1=right 0=cent 1=left"
		// "v3=timer"
		// "v4=parent"
		@loop v[1017] .dst v[320] {
		    v[244] %= v[1199]
		    v[351] = v[244] * 50 
		    v[351] += v[1198]
		    @if v[v[351]] <= 1 {
			// "まず清掃"
			v[1301].copy v[v[351]], ParticleArraySize
			v[1301].copy emitter_ParticleType, ParticleArraySize
			// "ポインタセット開始"
			// "設定"
			emitter_ParticleType = 1002 // ignore first frame
			// "Timer"
			emitter_Timer = v[13]
			// "Set itself"
			emitter_CallPartFunc = 171 //new arrow shade!
			// "Set Amount"
			//emitter_ParticleAmount = v[11]
			// "Set Dire"
			emitter_Angle = effect_2DAngle
			// "Set Pare"
			emitter_ParentEffect = v[242]
			// "XY set"
			effect_milX.copy emitter_MilX, 4
			effect_milPixVx.copy emitter_milMilPixVx,6
			// ""
			emitter_ParticleType.copy v[v[351]], ParticleArraySize

			v[244] += 1
			@break
			
		    }
		    v[244] += 1
		    
		}
		
		
	    }
	    @break
	    
	}
	v[242] += 1
	
    }
    
    s[141].off
    
} .else bl {

	func_effect_arrow_proc("arrows\arrow")
	// "タイマー切れのときの処理	
	func_effect_arrow_on_ground("arrows\arrow_g" WeaponType_Arrow)
		    

}
	   




}
