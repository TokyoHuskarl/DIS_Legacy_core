cev .id(1825), .name("cev1825"), {
@loop 1 {
    @comment "cond_ck_team_cp_lower_than(team,var)"
    @if t[510] .contains "_ck_team_cp_lower_than(" {
        t[510] .split "(", t[3000], v[341]
        t[3001] .split ",", t[3000], v[341]
        t[3000] .toNum v[11]
        @if v[11] == 0 {
            v[2812] = 0
            @comment "Check P Team List"
            @doWhile v[v[300]] >= 1 .dst v[301] {
                @comment "Check P Team List"
                v[300] = v[301] + v[1145]
                @if v[v[300]] >= 1 {
                    v[299] = v[v[300]] * 300
                    v[299] += 4701
                    @comment "死体はリストから外れていることを信じて……！"
                    @if v[v[299]] <= 10 {
                        v[11] = v[v[300]]
                        @call .cev 2009
                        v[2812] += v[21]
                        
                    }
                    
                }
                
            }
            
            v[11] = v[2812]
            
        } .else bl {
            v[2813] = 0
            @comment "Check Enemy Team List"
            @doWhile v[v[300]] >= 1 .dst v[301] {
                @comment "Check Enemy Team List"
                v[300] = v[301] + v[1146]
                @if v[v[300]] >= 1 {
                    v[299] = v[v[300]] * 300
                    v[299] += 4701
                    @comment "except Cohort 10 "
                    @if `v[v[299]] <= 10 {
                        v[11] = v[v[300]]
                        @call .cev 2009
                        v[2813] += v[21]
                        
                    }
                    
                }
                
            }
            
            v[11] = v[2813]
            
        }
        t[3001] .toNum v[12]
        v[0] = v[11] <= v[12] ? 0 : (s[291] = 1)
        @break
        
    }
    @comment "cond_chance(chance)"
    @if t[510] .contains "_chance(" {
        t[510] .split "(", t[3000], v[341]
        t[3001] .split ")", t[3000], v[341]
        t[3000] .toNum v[11]
        v[0] = v[11] >= rnd(1, 100) ? (s[291] = 1) : 0
        @break
        
    }
    @if t[510] .contains "_obj_" {
        @comment "Underconstruction"
        @comment "cond_obj_in_area(num,x1,y1,x2,y2)"
        @if t[510] .contains "_in_area(" {
            t[510] .split "(", t[3000], v[341]
            t[3001] .split ")", t[3000], v[341]
            @if t[3000] .contains "MV:" {
                t[3000] .split "MV:", t[2999], v[341]
                t[3000] .toNum v[11]
                v[11] = v[v[11] + 2000]
                
            } .else bl {
                t[3000] .toNum v[11]
                
            }
            v[0] = v[21] != 1 ? (s[291] = 1) : 0
            @break
            
        }
        @comment "cond_obj_in_area_any(team,x1,y1,x2,y2)"
        @if t[510] .contains "_in_area_any(" {
            t[510] .split "(", t[3000], v[341]
            t[3001] .split ")", t[3000], v[341]
            t[3000] .split ",", t[3000], v[341]
            t[3000] .toNum v[11]
            t[3001] .toNum v[12]
            t[3002] .toNum v[13]
            t[3003] .toNum v[14]
            t[3004] .toNum v[15]
            @comment "v1=UnitID
v2=Team, 0/1
v3=ifStatic 0/1"
            v[21] = 0
            @loop v[1012] .dst v[301] {
                @comment "Check Team List"
                v[300] = v[301] + v[1145 + v[11] % 3]
                @if v[v[300]] >= 1 {
                    v[299] = v[v[300]] * 300
                    v[299] += 4726
                    v[v[299]].copy v[626], 2
                    @comment "has same id"
                    @if `between(v[626], v[12], v[14]) {
                        @if `between(v[627], v[13], v[15]) {
                            v[21] = 1
                            @break
                            
                        }
                        
                    }
                    
                } .else bl {
                    @break
                    
                }
                
            }
            
            v[0] = v[21] != 1 ? (s[291] = 1) : 0
            @break
            
        }
        @comment "cond_obj_destroyed(num)"
        @if t[510] .contains "_destroyed(" {
            t[510] .split "(", t[3000], v[341]
            t[3001] .split ")", t[3000], v[341]
            @if t[3000] .contains "MV:" {
                t[3000] .split "MV:", t[2999], v[341]
                t[3000] .toNum v[11]
                v[11] = v[v[11] + 2000]
                
            } .else bl {
                t[3000] .toNum v[11]
                
            }
            @call .cev 1919
            v[0] = v[21] != 1 ? (s[291] = 1) : 0
            @break
            
        }
        
    }
    @if t[510] .contains "_switch_" {
        @comment "cond_switch_on(v1)"
        @if t[510] .contains "on(" {
            t[510] .split "(", t[3000], v[341]
            t[3001] .split ")", t[3000], v[341]
            t[3000] .split ",", t[3000], v[341]
            t[3000] .toNum v[11]
            v[0] = s[291] = s[v[11]] == 0
            @pic[50].strpic {
                "\v[11]
\t[510]"
                .pos 160, 120 .center
                .size 0, 0                .chromakey 1
                .scale 100
                .trans 0
                .rgbs 100, 100, 100, 100
                .font "", 12
                .spacing 0, 4
                .skin "" .stretch
                .mapLayer 7
                .eraseWhenTransfer
                .affectedByFlash
                .affectedByShake
            }
            @break
            
        }
        @comment "cond_switch_off(v1)"
        @if t[510] .contains "off(" {
            t[510] .split "(", t[3000], v[341]
            t[3001] .split ")", t[3000], v[341]
            t[3000] .split ",", t[3000], v[341]
            t[3000] .toNum v[11]
            v[0] = s[291] = s[v[11]] == 1
            @break
            
        }
        @break
        
    }
    @if t[510] .contains "_cf(" {
        @loop 1 {
            @comment "cond_cf(v1?v2)"
            @if t[510] .contains "==" {
                t[510] .split "(", t[3000], v[341]
                t[3001] .split ")", t[3000], v[341]
                t[3000] .split "==", t[3000], v[341]
                t[3000] .toNum v[11]
                t[3001] .toNum v[12]
                v[0] = v[11] == v[12] ? 0 : (s[291] = 1)
                @break
                
            }
            @if t[510] .contains ">=" {
                t[510] .split "(", t[3000], v[341]
                t[3001] .split ")", t[3000], v[341]
                t[3000] .split ">=", t[3000], v[341]
                t[3000] .toNum v[11]
                t[3001] .toNum v[12]
                v[0] = v[11] >= v[12] ? 0 : (s[291] = 1)
                @break
                
            }
            @if t[510] .contains ">" {
                t[510] .split "(", t[3000], v[341]
                t[3001] .split ")", t[3000], v[341]
                t[3000] .split ">", t[3000], v[341]
                t[3000] .toNum v[11]
                t[3001] .toNum v[12]
                v[0] = v[11] > v[12] ? 0 : (s[291] = 1)
                @break
                
            }
            @if t[510] .contains "<=" {
                t[510] .split "(", t[3000], v[341]
                t[3001] .split ")", t[3000], v[341]
                t[3000] .split "<=", t[3000], v[341]
                t[3000] .toNum v[11]
                t[3001] .toNum v[12]
                v[0] = v[11] <= v[12] ? 0 : (s[291] = 1)
                @break
                
            }
            @if t[510] .contains "<" {
                t[510] .split "(", t[3000], v[341]
                t[3001] .split ")", t[3000], v[341]
                t[3000] .split "<", t[3000], v[341]
                t[3000] .toNum v[11]
                t[3001] .toNum v[12]
                v[0] = v[11] < v[12] ? 0 : (s[291] = 1)
                @break
                
            }
            
        }
        
        @break
        
    }
    
}

}