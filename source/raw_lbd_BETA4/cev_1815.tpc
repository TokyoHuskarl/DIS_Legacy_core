cev .id(1815), .name("cev1815"), {
@loop .inf() {
    v[509] = v[1219]
    t[v[509]] .inStr t[525], 282,  .beg v[v[281]]
    @if v[282] == -1 {
        @break
        
    }
    v[343] = v[282] - v[v[281]]
    t[510] .asg  .subs t[v[509]], v[v[281]], v[343]
    @if v[510] > 0 {
        @if t[510] .contains "}" {
            @break
            
        }
        
    }
    t[501] .asg  .subs t[510], 0, 3
    @if t[501] .eq "[N:" {
        v[4750] += 1
        t[510] .inStr "{", 282,  .beg 0
        t[501] .asg  .subs t[510], 0, v[282]
        @if t[501] .contains "if" {
            v[341] = 0
            t[510] .inStr "(", 341,  .beg 0
            v[341] += 1
            v[282] -= 1
            s[291].off
            t[510] .asg  .subs t[510], v[341], v[282], .extract
            @call .cev 1825
            v[21] = s[291] == 1 ? 0 : 1
            s[291].off
            @if v[21] == 1 {
                v[510] += 1
                v[739348 + v[510]] = v[v[281]] + v[343] + 1
                v[281] = 739348 + v[510]
                v[12] = 114514
                @call .cev 1815
                v[510] -= 1
                
            } .else bl {
                
            }
            v[281] = 739348 + v[510]
            v[341] = v[v[281]] + 3
            t[v[509]].exMatch {
                ".*\]"
                t[501]
                v[282]
                .beg v[341]
            }
            t[501] .toNum v[282]
            v[v[281]] += v[282] + 1
            v[343] = v[v[281]]
            s[291].off
            
        }
        
    } .else bl {
        v[v[281]] = v[282] + 1
        @call .cev 1821
        t[3000..3300] .asg ""
        
    }
    @if s[291] .isOn() {
        @break
        
    }
    
}

}