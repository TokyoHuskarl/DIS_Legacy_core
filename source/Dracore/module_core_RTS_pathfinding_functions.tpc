__fn func_pathfinding_move(){
	// "移動指示	Center(x.y)=(wheretox,wheretoy)"
	v[2878] = v[1212]
	v[390] = 0
	@if v[2875] >= 1 {
	    // "WPをとおる"
	    v[2863].copy v[2861], 2
	    v[2865].copy v[2863], 2
	    v[2867].copy v[2865], 2
	    v[2869].copy v[2867], 2
	    v[2871].copy v[2869], 2
	    v[2873].copy v[2871], 2
	    // "#Set 移動するX"
	    // "#Set 移動するY"
	    v[2851].copy v[2873], 2
	    
	}
	@loop .inf() {
	    @if v[v[2878]] == 0 {
		// "とぎれた"
		@break
		
	    }
	    // "配列ゲット"
	    v[301] = v[v[2878]] * 300 
	    v[301] += 4700
	    v[300] = v[301] + 242
	    v[299] = v[301] + 41
	    v[298] = v[301] + 42
	    v[297] = v[301] + 18
	    v[295] = v[301] + 241
	    v[294] = v[301] + 55
	    v[629] = v[301] + 29
	    @if v[v[297]] > 0 {
		// "if you have obj"
		@if v[v[295]] == 2 {
		    v[v[300]] = 2
		    
		} .else bl {
		    v[v[300]] = 3
		    @if `v[v[301] + 3] & 33554432 {
			
		    } .else bl {
			v[v[301] + 3] &= -16777217//~16777216
			
		    }
		    
		}
		@if `!(v[v[301] + 3] & 4194304) {
		    @if v[2875] == 0 {
			v[v[300]] = 2
			
		    }
		    
		}
		
	    }
	    @if s[279] .isOn() {
		v[v[300]] = 1
		v[v[301] + 3] &= -16777217//~16777216
		@if `v[v[301] + 3] & 33554432 {
		    v[v[301] + 3] |= 8388608
		    v[v[301] + 34] |= 8388608
		    
		}
		
	    }
	    @if v[2875] >= 1 {
		v[293] = 2873
		v[293] -= v[2875] * 2
		@loop v[2875] {
		    v[v[293]].copy v[v[299]], 2
		    v[293] += 2
		    v[299] += 2
		    
		}
		
		v[v[293]].copy v[v[299]], 2
		// "#Set 現在目指してるWPと総WP数"
		v[v[294]] = v[2875]
		v[2873] .add v[2855], 2
		
	    } .else bl {
		// "#Set 移動するX"
		v[v[299]] = v[2851]
		// "#Set 移動するY"
		v[v[298]] = v[2852]
		// "#Set 現在目指してるWPと総WP数"
		v[v[294]] = -1
		v[2851] .add v[2855], 2
		
	    }
	    v[293] = v[301] + 245
	    v[v[293]] = 0
	    // "Make 2nd line"
	    v[390] += 1
	    v[390] %= v[2859]
	    @if v[390] == 0 {
		@if v[2875] >= 1 {
		    v[2853].copy v[2873], 2
		    v[2873] .add v[2857], 2
		    
		} .else bl {
		    v[2853].copy v[2851], 2
		    v[2851] .add v[2857], 2
		    
		}
		v[2851].copy v[2853], 2
		
	    }
	    @if `v[v[301] + 1] <= 8 {
		v[v[301] + 3] = v[v[301] + 241] <= 4 ? [v[v[301] + 3] | 1048576, v[v[301] + 3] | 1048576, v[v[301] + 3] & ~1048576, v[v[301] + 3] | 1048576, v[v[301] + 3] & ~1048576][v[v[301] + 241]] : v[v[301] + 3]
		
	    }
	    v[2878] += 1
	    
	}

	v[2861..2875] = 0
	v[2875] = 0
}

__fn func_pathfinding_open_Node(){
	// "check"
	v[380] = 0
	v[310] = v[4582]
	v[309] = v[4568]
	v[310] += v[309]
	@loop v[4582] .dst v[310] {
	    v[311] = v[4568] + v[310]
	    @if v[v[311]] == v[19] {
		v[380] = 1
		v[311] += 40000
		// "compare cost"
		@if v[v[311]] > v[20] {
		    v[v[311]] = v[20]
		    v[v[4600] + v[19] - 1] = v[4590]
		    
		}
		@break
		
	    }
	    
	}

	/*
	@if s[1] .isOn() {
	    @while v[309] <= v[310] {
		//opt 28.4.23
		//v[311] = (v[309] + v[310]) / 2
		v[311] = (v[309] + v[310]) 
		v[311] /= 2
		@if v[v[311]] == v[19] {
		    v[380] = 1
		    v[311] += 40000
		    // "compare cost"
		    @if v[v[311]] > v[20] {
			v[v[311]] = v[20]
			
		    }
		    @break
		    
		} .else bl {
		    @if v[v[311]] < v[19] {
			v[309] = v[311] + 1
			
		    } .else bl {
			v[310] = v[311] - 1
			
		    }
		    
		}
		
	    }
	    
	    
	}
	*/

	v[310] = v[4583]
	v[309] = v[4567]
	v[310] += v[309]
	@while v[309] <= v[310] {
	    //opt 28.4.23
	    //v[311] = (v[309] + v[310]) / 2
	    v[311] = (v[309] + v[310]) 
	    v[311] /= 2
	    @if v[v[311]] == v[19] {
		v[380] = 1
		@break
		
	    } .else bl {
		@if v[v[311]] < v[19] {
		    v[310] = v[311] - 1
		    
		} .else bl {
		    v[309] = v[311] + 1
		    
		}
		
	    }
	    
	}

	@if v[380] == 0 {
	    v[v[4568] + v[4582]] = v[19]
	    v[v[4555] + v[4582]] = v[20]
	    v[v[4600] + v[19] - 1] = v[4590]
	    v[4582] += 1
	    
	}
}

__fn func_pathfinding_remove_OpenNode(){
	v[310] = v[4582]
	v[309] = v[4568]
	v[310] += v[309]
	@while v[309] <= v[310] {
	    //opt 28.4.23
	    //v[311] = (v[309] + v[310]) / 2
	    v[311] = (v[309] + v[310]) 
	    v[311] /= 2
	    @if v[v[311]] == v[19] {
		v[0] = v[v[311]..v[4568] + v[4582]] = v[v[311] + 1..v[4568] + v[4582] + 1]
		v[0] = v[v[311] + 200..v[4555] + v[4582]] = v[v[311] + 201..v[4555] + v[4582] + 1]
		v[4582] -= 1
		@break
		
	    } .else bl {
		@if v[v[311]] < v[19] {
		    v[310] = v[311] - 1
		    
		} .else bl {
		    v[309] = v[311] + 1
		    
		}
		
	    }
	    
	}
}

//LEGACY cev setting
cev .id(1771), .name("PathfindingFunc:Move") , {   
	func_pathfinding_move()
}
cev .id(1772), .name("PathfindingFunc:Open Node") , {   
	func_pathfinding_open_Node()
}
cev .id(1773), .name("PathfindingFunc:Remove Opened Node") , {   
	func_pathfinding_remove_OpenNode()
}
