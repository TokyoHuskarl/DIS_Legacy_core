defv{
Var_mapedit1=2101

}


__fn func_draw_elevation $MapX $MapY $ptr {

		v[341] = $MapX + v[69]
		v[342] = $MapY + v[70]
		v[343] = v[$ptr] / 100000000
		v[345] = $MapX * 16
		v[346] = $MapY * 16
		var10 = Var_MouseMode == MODE_Elevation ? 21 : 20//mapid
		@comment "check up tile height diff"
		@if $MapY > 0 {
		    v[344] = v[343] - v[$ptr - v[2061]] / 100000000
		    @if v[344] <= -1 {
			v[344] = 30 + v[344] * -1
			@pic[PicID_elevation_multi].drawTile {
			    .xywh v[345], v[346], 1, 1
			    .single v[344]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}
			
		    }
		    
		}
		@comment "check down tile height diff"
		@if $MapY < v[2062] {
		    v[344] = v[343] - v[$ptr + v[2061]] / 100000000
		    @if v[344] <= -1 {
			v[344] = 53 + v[344] * -1
			@pic[PicID_elevation_multi].drawTile {
			    .xywh v[345], v[346], 1, 1
			    .single v[344]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}
			
		    }
		    
		}
		@comment "check left tile height diff"
		@if $MapX > 0 {
		    v[344] = v[343] - v[$ptr- 1] / 100000000
		    @if v[344] <= -1 {
			v[344] = 42 + v[344] * -1
			v[347] = v[345] - 16
			@pic[PicID_elevation_multi].drawTile {
			    .xywh v[347], v[346], 1, 1
			    .single v[344]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}
			
		    }
		    
		}
		@comment "check right tile height diff"
		@if $MapX < v[2061] {
		    v[344] = v[343] - v[$ptr + 1] / 100000000
		    @if v[344] <= -1 {
			v[344] = 41 + v[344] * -1
			@pic[PicID_elevation_multi].drawTile {
			    .xywh v[345], v[346], 1, 1
			    .single v[344]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}
			
		    }
		    
		}
		@if v[343] >= 1 {
		    @if v[343] < 3 {
			v[344] = 29 - v[343]
			v[347] = v[346] + 4
			@pic[PicID_elevation_multi].drawTile {
			    .xywh v[345], v[347], 1, 1
			    .single v[344]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}

			/*v[347]= 3 - v[343]
			v[347]+=v[346]
			@sys.getInfo .tiles v[341], v[342], 1, 1 .lower .dst v[30]
			@pic[PicID_Map_base].drawTile {
			    .xywh v[345], v[347], 1, 1
			    .single v[30]
			    .lower
			    .tilesetId v[2060]
			    .pattern 0
			}*/
			
		    }
		    @if v[343] > 3 {
			v[343] += 15
			@pic[PicID_elevation_add].drawTile {
			    .xywh v[345], v[346], 1, 1
			    .single v[343]
			    .lower
			    .tilesetId var10
			    .pattern 0
	}
			/*v[347]= 18 - v[343]
			v[347]+=v[346]
			@sys.getInfo .tiles v[341], v[342], 1, 1 .lower .dst v[30]
			@pic[PicID_Map_base].drawTile {
			    .xywh v[345], v[347], 1, 1
			    .single v[30]
			    .lower
			    .tilesetId v[2060]
			    .pattern 0
			}*/
			
		    }.elif v[343] == 3{
		    	@if var10==21 {

				@pic[PicID_elevation_add].drawTile {
				    .xywh v[345], v[346], 1, 1
				    .single 18
				    .lower
				    .tilesetId var10
				    .pattern 0
				}
			}

		    }
		    
		}
		

}

__fn func_change_elevation $X $Y $Elevation {
	var1 = $X - v[69]
	var2 = $Y - v[70]
	reg1 = v[1182] + var1 + var2 * v[2061]

	@if `v[reg1]/100000000!=$Elevation{
		v[reg1] %= 100000000
		v[reg1] += $Elevation*100000000
		func_draw_elevation(var1 var2 reg1)
	}
}


__fn func_generate_elevation_map {

	v[v[1068]..v[1068] + 500 * 500] = 0
	v[341] = ev[3].scrx
	v[342] = ev[3].scry
	v[341..342] -= 8
	v[342] -= 10
	v[343] = ev[4].scrx - ev[3].scrx
	v[344] = ev[4].scry - ev[3].scry
	@pic[PicID_elevation_add].strpic {
	    ""
	    .pos v[341], v[342] .topLeft
	    .size v[343], v[344]    .scrollWithMap
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .font "", 12 .noShadow
	    .spacing 0, 4
	    .skin "" .nobg .noframe .noGradation .noPadding
	    .add
	    .mapLayer 4
	    .eraseWhenTransfer
	    .affectedByTint
	    .affectedByFlash
	    .affectedByShake
	}
	@pic[PicID_elevation_multi].strpic {
	    ""
	    .pos v[341], v[342] .topLeft
	    .size v[343], v[344]    .scrollWithMap
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .font "", 12 .noShadow
	    .spacing 0, 4
	    .skin "" .nobg .noframe .noGradation .noPadding
	    .multi
	    .mapLayer 4
	    .eraseWhenTransfer
	    .affectedByTint
	    .affectedByFlash
	    .affectedByShake
	}
	v[2063] = v[2061] * v[2062]
	v[2061].copy v[321], 2
	@map.tileset 20
	@loop v[322] .dst v[2064] {
	    v[286] = v[2061] * v[2064] + v[4529]
	    v[287] = v[2061] * v[2064] + v[1182]
	    @loop v[321] .dst v[2065] {
	        func_draw_elevation(v[2065] v[2064] v[287] )
		v[286..287] += 1
		
	    }
	    
	    
	}

	@map.tileset v[2060]
}


