

//#####################
// Agent Extra Array Buffer(AEAB) funcs
//#####################

// AEAB simply just holds agent's additional parameters that are not very frequently called
// maybe making it have complicated function is not good for any term I suppose

// generation function -> @Mission Init in module_core_RTS_mission_general.tpc

// agentid here are expected in a range from 1 to Agents_Limit

__fn set_AEAB_element $agentid $setadd $slot {
	set_picture_pixel($setadd,PicID_AgentExBuffer,$slot,$agentid)
}

// set_AEAB_array(int agentid, *var setadd, int startslot, int range)
__fn set_AEAB_array $agentid $setadd $startslot $range {
	set_picture_horizontal_line($setadd,PicID_AgentExBuffer,$startslot,$agentid,$range)
}

__fn get_AEAB_element $agentid $getadd $slot {
	get_picture_pixel($getadd,PicID_AgentExBuffer,$slot,$agentid)
}

__fn get_AEAB_array $agentid $getadd $startslot $range {
	get_picture_horizontal_line($getadd,PicID_AgentExBuffer,$startslot,$agentid,$range)
}

__fn init_AEAB_array $agentid {
	// fill selected array with 0
	set_picture_horizontal_line(_id(ptr_null), PicID_AgentExBuffer,0,$agentid,AgentExtraBuffer_ArraySize)
}


//

__fn func_extract_skill_data_from_agent_slot $agent $skillno $flags {
	__if $flags & EXTRACT_FLAG_Data_extracted {
		reg1 = $skillno * skill_Array_size
		reg1 += __id(agent_AACost)	
		v[reg1].copy skill_ID,skill_Array_size
	}.else bl{
		reg1 = $agent * 300
		reg1 += $skillno * skill_Array_size
		reg1 += 4821
		v[reg1].copy skill_ID,skill_Array_size
	}

}

//reg1 = 0:melee 1:ranged 2:magic... idk 
__fn func_get_AA_usage $agent $flags {
	__if $flags & EXTRACT_FLAG_Data_extracted {
		@if agent_AAType == 0 {//melee
			reg1 = 0
		}.elif agent_AAType == 2{
			reg1 = 1
		}.elif agent_AAType == 4{
			reg1 = agent_AA_ARorMR==0?1:2 
		}
		
	}.else bl{
		func_errlog("the function func_get_AA_usage not defined...")
	}
}
