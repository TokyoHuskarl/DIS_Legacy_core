

//#####################
// Agent Extra Buffer(AEB) funcs
//#####################

// AEB simply just holds agent's additional parameters that are not very frequently called
// maybe making it have complicated function is not good for any term I suppose

// generation function -> @Mission Init in module_core_RTS_mission_general.tpc

// agentid here are expected in a range from 1 to Agents_Limit



// 8.8.2023
// The fact that kern commands of the AEB system have fatal bug in the processes where a MP user cannot touch nor deal with, so all AEAB system is gonna be abandoned.

def AEAB_abandon = {
	__if DIS_EXPERIMENTAL != -1 {
		func_errlog("AEAB function detected, these functions must be removed from DIS source code.")
	}

}
__fn set_AEB_element $agentid $setadd $slot {
	set_picture_pixel($setadd,PicID_AgentExBuffer,$slot,$agentid)
}

// set_AEB_array(int agentid, *var setadd, int startslot, int range)
__fn set_AEB_array $agentid $setadd $startslot $range {
	set_picture_horizontal_line($setadd,PicID_AgentExBuffer,$startslot,$agentid,$range)
}

__fn get_AEB_element $agentid $getadd $slot {
	get_picture_pixel($getadd,PicID_AgentExBuffer,$slot,$agentid)
}

__fn get_AEB_element_wo_ptr $agentid $getadd $slot {
	@pic.getInfo[PicID_AgentExBuffer] .pixel($slot, $agentid, 1, 1) .dst(v[$getadd])
}

__fn get_AEB_array $agentid $getadd $startslot $range {
	get_picture_horizontal_line($getadd,PicID_AgentExBuffer,$startslot,$agentid,$range)
}

__fn init_AEB_array $agentid {
	// fill selected array with 0
	set_picture_horizontal_line(__id(ptr_null), PicID_AgentExBuffer,0,$agentid,AgentExtraBuffer_ArraySize)
}




/**
 * cannot be used for static unit 
 * This function deploys agent data to victim array
 * 
 * @param {int} $agentid - 
 * @param {int} $unitid - 
 */
__fn func_make_agent_transform_into_unit $agentid $unitid {

	// deploy agent data to victim array
	__if $flags & EXTRACT_FLAG_Data_extracted {
		agent_ObjectType.copy victim_ObjectType agent_Basic_Array_size
	}.else bl{
		var1 = $agentid * agent_Basic_Array_size
		var1 += 4701
		v[var1].copy victim_ObjectType agent_Basic_Array_size
	}	
	
	// and?
	
	/*
	  brought unit parameters from database
	*/

	/*
	  adjustment
	*/

	/*
	  rewrite data
	*/

}


__fn func_extract_skill_data_from_agent_slot $agent $skillno $flags {
	__if $flags & EXTRACT_FLAG_Data_extracted {
		reg1 = $skillno * skill_Array_size
		reg1 += __id(agent_AACost)	
		v[reg1].copy skill_ID,skill_Array_size
	}.else bl{
		reg1 = $agent * 300
		reg1 += $skillno * skill_Array_size
		reg1 += 4821
		v[reg1].copy skill_ID,skill_Array_size
	}
}

//reg1 = 0:melee 1:ranged 2:magic... idk 
__fn func_get_AA_usage $agent $flags {
	__if $flags & EXTRACT_FLAG_Data_extracted {
		@if agent_AAType == 0 {//melee
			reg1 = 0
		}.elif agent_AAType == 2 {
			reg1 = 1
		}.elif agent_AAType == 4 {
			reg1 = agent_AA_ARorMR == 0 ? 1 : 2 
		}
		
	}.else bl{
		func_errlog("the function func_get_AA_usage not defined...")
	}
}





