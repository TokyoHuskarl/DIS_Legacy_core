// actual functions for scale script commands of DIS:Legacy here 
// it's bit weird since header/header_rmsh_scalescript.tpc refers this meanwhile this is in /module/ Directory


def {
	CTYP_MAP = 1
	CTYP_SND = 2 // should be integrateed into Game
	CTYP_MISSION = 3
	CTYP_GAME = 4
	CTYP_AGENT = 5
	CTYP_PLAYER = 6
	CTYP_GROUP = 7
	CTYP_UI = 8
	
	CTYP_END
}

def {
// RM var types
	RMvar = 1
	RMswitch = 2
	RMstring = 3
	RMpicture = 4
	RMarray = 5
}

deft {
	str_link_Cmd_map = 771
	str_link_Cmd_snd
	str_link_Cmd_mission
	str_link_Cmd_game
	str_link_Cmd_agent
	str_link_Cmd_player
	str_link_Cmd_group
	str_link_Cmd_ui

}

def WAIT_FOR_JSCMD_EXECUTION = {
	@loop bl { // wait until Command is executed
		@if BOOL_CMD_RUN.isOff(){@break}
		@wait 0
	}
}

// DIS JS functions
__fn boot_DIS_js_system {
	execute_js("DIS_js_system_main.js")
}

__fn reboot_DIS_js_system { // called after RMsavedata load
	execute_js(PATH_js_bootconfig) // load boot config
	boot_DIS_js_system()
	// and?
}

def CEV_JS_MANAGER_RESTORE = "
RTS.restore();
"
__fn reboot_DIS_js_RTS_system {
	reboot_DIS_js_system()
	eval_js(CEV_JS_MANAGER_RESTORE) 
	
}

__fn save_DIS_js_RTS_system {
	@js .run "RTS.save()" // call 

}

// Open DIS js scene
/*
__fn open_js_scene $scenename {
	execute_js("DIS_js_system_main.js")
}
*/



// Package Tree - only for calling Cmd.obj.method on RPG_RT.exe, you need init process for each of Cmd Packages before you use this function. 
__fn DIS_Cmd_callPackageTree $counter $CmdStr {

	// Split given Str before calling Package
	macro_demiliterset
	str1.asg t[$CmdStr] 
	t[$CmdStr] .split($delimiter, SS_CmdObjType, SSnargs)

	// check which object is called by js
	SS_CmdObjType.toNum TT1

	DIS_Cmd_PackTree(TT1,SScmd_Mode_Exec,SScmdDynCounter,0,0)

}


// ---------------------------------------------
// Scale Script Command Package Tree
// ---------------------------------------------




// attention to that linkstr cmd containers of each of the packages are fixed for DIS project. 
__fn DIS_Cmd_PackTree $chosenobj $md $counter $given_v_or_str $flags {

	@if $chosenobj == CTYP_MAP { // Cmd.map
		DIS_Cmd_map(str_link_Cmd_map,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_SND { // Cmd.snd
		DIS_Cmd_snd(str_link_Cmd_snd,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_MISSION { // Cmd.mission
		DIS_Cmd_mission(str_link_Cmd_mission,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_GAME { // Cmd.game
		DIS_Cmd_game(str_link_Cmd_game,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_AGENT { // Cmd.agent
		DIS_Cmd_agent(str_link_Cmd_agent,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_PLAYER { // Cmd.player
		DIS_Cmd_player(str_link_Cmd_player,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_GROUP { // Cmd.group
		DIS_Cmd_group(str_link_Cmd_group,$md,$counter,$given_v_or_str,$flags)

	}.elif $chosenobj == CTYP_UI { // Cmd.ui
		DIS_Cmd_ui(str_link_Cmd_ui,$md,$counter,$given_v_or_str,$flags)

	}

}


// ---------------------------------------------
// Scale Script Command Packages
// ---------------------------------------------


__fn DIS_Cmd_map $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("mp",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_map_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_snd $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("sn",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_snd_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_mission $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("mi",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_mission_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_game $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("ga",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_game_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_agent $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("ag",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_agent_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_player $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("pl",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_player_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_group $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("gr",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_group_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

__fn DIS_Cmd_ui $LINKstr $md $counter $given_v_or_str $flags {
	SScmdPackage_Build("ui",$LINKstr, $md, $counter, $given_v_or_str, $flags, {
		DIS_ui_methods($LINKstr $md $counter $given_v_or_str $flags)
	})
}

// ---------------------------------------------
// Scale Script Command libraries
// ---------------------------------------------


// Cmd.map
__fn DIS_map_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("map", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		// let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "spnAg",{cmd_spawn_agent(SSargs0,SSargs1,SSargs2,SSargs3,SSargs4,SSargs5,SSargs6)})}, // map.spawnAgent
		{NsCmd($LINKstr, $md, $i, "spnSt",{cmd_spawnStatic(SSargs0,SSargs1,SSargs2,SSargs3,SSargs4)})}, // map.spawnStatic
		{NsCmd($LINKstr, $md, $i, "spawnPalisade",{cmd_spawnPalisade(SSargs0,SSargs1,SSargs2,SSargs3,SSargs4)})}, // spawnPalisade
		{NsCmd($LINKstr, $md, $i, "spawnWall",{cmd_spawnWall(SSargs0,SSargs1,SSargs2,SSargs3,SSargs4)})}, // spawnWall
		{NsCmd($LINKstr, $md, $i, "genHeightmap",{cmd_genHeightmap()})}, // genHeightmap
		

	])
}

// Cmd.snd
__fn DIS_snd_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("snd", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		// let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "pGSE",{cmd_play_global_sound(SSargs0,SSargs1,SSargs2,SSargs3)})}, // snd.playGlobalSE
		{NsCmd($LINKstr, $md, $i, "pBGM",{cmd_play_global_music(SSargs0,SSargs1,SSargs2,SSargs3)})}, // snd.playBGM
		

	])
}

// Cmd.mission
__fn DIS_mission_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("msn", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "endGame",{cmd_player_prepare_endgame(0,SSargs0)})}, // victory or defeat

	])
}

__fn DIS_game_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("game", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "exec",{execute_js(SSargs0)})}, // <- NsLib_js
		{NsCmd($LINKstr, $md, $i, "wait",{@wait (SSargs0)})},
		{NsCmd($LINKstr, $md, $i, "eval",{@js .run SSargs0})},
		{NsCmd($LINKstr, $md, $i, "gotoRMmap",{
			t2v(SSargs0,var1)
			t2v(SSargs1,var2)
			t2v(SSargs2,var3)
			@map[var1].setPlayerPos .pos var2, var3
		})},
		{NsCmd($LINKstr, $md, $i, "msg",{func_show_msg(SSargs0)})},

		// pic series
		{NsCmd($LINKstr, $md, $i, "loadPic",{cmd_pic_simpleload(SSargs0,SSargs1)})},
		{NsCmd($LINKstr, $md, $i, "removePic",{
			t2v(SSargs0,var1)
			@pic.erase [var1]
		})},

		// export text
		{NsCmd($LINKstr, $md, $i, "exportText",{
			t2v(SSargs0,var1)
			t[var1].toFile SSargs1, .utf8
		})},
		
    

	])
}

__fn DIS_agent_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("ag", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "setName",{
			execute_js(SSargs0)
			})}, // uncinoketafs!!!!IT'S OVER!!!!!!!!

	])
}

__fn DIS_player_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("plyr", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "rvMap",{cmd_reveal_map()})}, // revealMap
		{NsCmd($LINKstr, $md, $i, "mvCam",{cmd_player_change_view(SSargs0,SSargs1,SSargs2)})}, // moveCamera 
		{NsCmd($LINKstr, $md, $i, "tgPaus",{
			@if SSargs0.eq "1" {s[2].on}.else bl{s[2].off}})
		}, // togglePause
		{NsCmd($LINKstr, $md, $i, "giveRs",{cmd_team_give_resource(SSargs0,SSargs1,SSargs2)})}, // Rs 
		{NsCmd($LINKstr, $md, $i, "giveTech",{cmd_team_give_tech_flag(SSargs0,SSargs1,SSargs2)})}, // js incomplete 


	])
}

__fn DIS_group_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("grp", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "setCgrp",{cmd_grp_setCgrp()})},
		{NsCmd($LINKstr, $md, $i, "registerCohort",{})},
		
	])
}

__fn DIS_ui_methods $LINKstr $md $i $given_v_or_str $flags {
	SScmdLib_Build("ui", $LINKstr, $md, $i, $given_v_or_str,$flags, [

		//let javascript interpreter execute what is written in file
		{NsCmd($LINKstr, $md, $i, "pushDialogQueue",{cmd_pushDialogQ(str1)})},
		{NsCmd($LINKstr, $md, $i, "forceSkipDialog",{cmd_forceSkipDialog(SSargs0)})},
		{NsCmd($LINKstr, $md, $i, "clearDialogQueue",{cmd_clearDialogQueue()})},
		{NsCmd($LINKstr, $md, $i, "getPictureInfo",{cmd_getPictureInfo()})},


	])
}

// ---------------------------------------------
// DIS command functions 
// ---------------------------------------------

//all args of functions below are string type since these commands called via SS command

//##########################
//fundamental system commands
//##########################

// "cmd_play_global_sound(soundfilename,v1,v2,v3)"
// no reg
__fn cmd_play_global_sound $filename $volume $tempo $balance {
    /*var1 = $volume
    var2 = $tempo
    var3 = $balance*/
		t2v($volume,var1)
		t2v($tempo,var2)
		t2v($balance,var3)
    @cmd 11550, $filename, .args var1, 3
    
}

// "#play_global_music(soundfilename,v1,v2,v3)"
// no reg
__fn cmd_play_global_music $filename $volume $tempo $balance {
		t2v($volume,var1)
		t2v($tempo,var2)
		t2v($balance,var3)
    var1 = divmul(var1, 100, LEGV_Global_BGM_Volume)
    @bgm.play $filename .opt 0, var1, $tempo, $balance
    Current_BGMFile .asg $filename
}



//##########################
//spawn commands
//##########################


//


// spawn_Unit(var TroopID,var TileX,var TileY,var TeamID,var CohortID,bool Direction,var Stance)
__fn cmd_spawn_agent $troop_id $TileX $TileY $TeamID $CohortID $Dir $Stance {
	t[__id($troop_id)] .toNum spawnSet_TroopID
	t[__id($TileX)] .toNum TT1
	t[__id($TileY)] .toNum TT2
	t[__id($TeamID)] .toNum spawnSet_Team
	t[__id($CohortID)] .toNum spawnSet_Cohort
	//lmao retarded
	bool_Gen_CohortSet.off
	@if spawnSet_Cohort >= 1 {
		bool_Gen_CohortSet.on
	}
	t[__id($Dir)] .toNum spawnSet_Direction
	t[__id($Stance)] .toNum spawnSet_Stance
	//@call .cev 2001
	macro_convert_maptileXY_into_relativeXY(TT1,TT2,spawnSet_x,spawnSet_y)
	//reg2.copy spawnSet_x, 2

	bool_SpawnSystemLegacy.on
	//call fn
	@call .cev 300

	@if spawnSet_Team == 0 {
		//Was?
		@if bool_Gen_CohortSet .isOn() {
		    @call .cev 1906 // -> cohort_general.tpc
		    
		}

	}

}

// koreha hidoi
__fn cmd_spawnStatic $staticID $x $y $team $cohort {
	t[__id($staticID)] .toNum spawnSet_TroopID
	spawnSet_TroopID += 800
	s[177..180].off
	s[151].on
	@call .cev spawnSet_TroopID
	s[151].off
	@if s[179] .isOn() {
		t[__id($x)] .toNum TT11
		t[__id($y)] .toNum TT12
		TT11.copy TT13, 2
		TT11.copy TT1, 2
		TT11 += Map_LimitCoordX_min % 2
		TT12 += Map_LimitCoordY_min % 2
		TT13 += Map_LimitCoordX_min % 2
		TT14 += Map_LimitCoordY_min % 2
		v[351..354] /= 2
		v[351..354] *= 2
		TT15 = (TT11 + TT13 + Map_LimitCoordX_min % 2) / 2
		TT16 = (TT12 + TT14 + Map_LimitCoordY_min % 2) / 2
		@call .cev 2001
		reg2.copy spawnSet_x, 2
		TT13.copy TT1, 2
		@call .cev 2001
		// "############"
		v[11..12] = 0
		var1 .add TT11, 2
		var1 .sub TT13, 2
		v[11..12] *= 16
		@if var1 == var2 {
				var1 *= 2
				var2 *= 2
				
		} .else bl {
				@if var1 > var2 {
			var1 *= 2
			
				} .else bl {
			var2 *= 2
			
				}
				
		}
		var1 = abs(var1)
		var2 = abs(var2)
		v[11..12] += 16
		v[11..12] += 16
		// "############"
		TT15.copy TT1, 2
		@call .cev 2001
		reg2 += 8 - 16 * (Map_LimitCoordX_min % 2)
		reg3 += 8 - 16 * (Map_LimitCoordY_min % 2)
		@if s[177] .isOn() {
				reg2 -= 16
				
		}
		@if s[178] .isOn() {
				reg3 -= 16
				
		}
		reg2.copy spawnSet_x, 2
		t[__id($team)] .toNum spawnSet_Team
		t[__id($cohort)] .toNum spawnSet_Cohort
		s[177..180].off
	
	} .else bl {
		t[__id($x)] .toNum TT1
		t[__id($y)] .toNum TT2
		@call .cev 2001
		reg3 += 8
		reg2.copy spawnSet_x, 2
		t[__id($team)] .toNum spawnSet_Team
		t[__id($cohort)] .toNum spawnSet_Cohort
		
		}
	t[__id($staticID)] .toNum spawnSet_TroopID
	spawnSet_TroopID += 800
	@call .cev spawnSet_TroopID
		
}

__fn cmd_spawnPalisade $begX $begY $endX $endY $team {
	generateWall_preparation($begX,$begY,$endX,$endY,$team)
	@call .cev 835
	
}
__fn cmd_spawnWall $begX $begY $endX $endY $team {
	generateWall_preparation($begX,$begY,$endX,$endY,$team)
	@call .cev 834
	
}

//##########################
//map and sight system functions
//##########################


//cmd_reveal_map()
// just reveal map, no reg 
__fn cmd_reveal_map { // ko koreha hidoi
	//v[562447..572446] ^= 2
	v[LEGV_Ptr2FoW_FlagsArray..LEGV_Ptr2FoW_FlagsArray + 999] ^= 2 //?
	LEGS_MapPreRevealed.on //?
}

//cmd_map_randomise_height_legacy(int xmin,int ymin,int xmax,int ymax,int Tryamount)
// shitty pseudo randomising of map elevaion
__fn cmd_map_randomise_height_legacy $tileXmin $tileYmin $tileXmax $tileYmax $amount {
	@loop $amount {
	    var1 = $tileXmin
	    var2 = $tileYmin
	    var3 = $tileXmax
	    var4 = $tileYmax
	    var1 = rnd(var1, var3)
	    var2 = rnd(var2, var4)
	    var3 = var1 + rnd(12, 18)
	    var4 = var2 + rnd(10, 16)
	    @call .cev 1802
	}
}




//##########################
//Dialogs and messages
//##########################
__fn cmd_pushDialogQ $string {
	dialogQueue.cat $string
	dialogQueue.cat ";"
	RUN_Radio_Dialog.on
}

__fn cmd_forceSkipDialog $i {
	//?
}

__fn cmd_clearDialogQueue {
	dialogQueue.asg "" // erase
	cmd_forceSkipDialog()
}



__fn cmd_getPictureInfo {
	t2v(SSargs0,var1)
	@pic.getInfo[var1] .currentRect(reg1, reg2, reg3, reg4)
	def RETURN_ARRAY_GETPICINFO = __str("[","\v[",__id(reg1),"],","\v[",__id(reg2),"],","\v[", __id(reg3), "],","\v[",__id(reg4), "],","]")
	def JS_SENDBACK_GETPICINFO = __str("Cmd.sendback(",RETURN_ARRAY_GETPICINFO,",\t[",__id(SSargs1),"],",RMarray,")") // send RM array
	eval_js(JS_SENDBACK_GETPICINFO) // sending back to js.
}



__fn cmd_ui_dialog_set_legacy {

	RadioDialogTimer = 235
	TT1 = v[1115]
	TT2 = 3
	@pic[PicID_Radio_Dialog_Back].strpic {
			""
			.pos TT1, TT2 .top
			.size 240, 64    .chromakey 1
			.scale 100
			.trans 50
			.rgbs 100, 100, 100, 100
			.font "", 12
			.spacing 0, 4
			.skin "system5" .stretch
			.mapLayer 9
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
	}
	TT1 -= 118
	TT2 += 2
	@pic[PicID_Radio_Dialog_Text].strpic {
			t[3000]
			.pos TT1, TT2 .topLeft
			.size 0, 0    .chromakey 1
			.scale 100
			.trans 0
			.rgbs 100, 100, 100, 100
			.font Font_Common, v[4510]
			.spacing 0, 4
			.skin "" .nobg .noframe .noPadding
			.mapLayer 9
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
	}

	RUN_Radio_Dialog.on

}



//#########################
// picture commands
//##########################


__fn cmd_pic_simpleload $pic_name $picid {
	t2v($picid,var1)
	@pic[var1].show {
			$pic_name
			.pos 0, 0 .topLeft
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.mapLayer DIS_gui_Layer
			.affectedByShake
	}
}

__fn cmd_pic_simplemove $picid {

}
//#########################
// AI commands
//##########################




//##########################
// Team commands
//##########################


// ACHTUNG!
// You obviously have to clean up this function
// reg1 = schwerepunktX reg2 = schwerepunktY
__fn cmd_team_get_schwerepunkt $teamID {

	v[2881] = $teamID
	v[2806..2808] = 0
	reg3 = 0
	@loop v[1012] .dst Temp1 {
	    //@comment "Check Player Team List"
	    //@comment "Check AllyTeam List"
	    v[2821] = Temp1 + v[1145 + v[2881] % 3]
	    @if v[v[2821]] >= 1 {
		v[2822] = v[v[2821]] * 300
		v[2822] += 4701
		@if v[v[2822]] <= 9 {
		    @if `v[v[2822] + 99] == v[2881] {
			var1 = v[v[2821]]
			@call .cev 2009
			@if reg1 >= 1 {
			    reg3 += 1
			    
			}
			v[2808] += reg1
			v[v[2822]].copy v[601], 9
			v[607..608] *= reg1
			v[2806] .add v[607], 2
			
		    }
		    
		}
		
	    } .else bl {
		@break
		
	    }
	}
	
	v[2812 + v[2881] % 3] = v[2808]
	v[2806..2807] /= v[2808]
	v[2806].copy v[2853], 2
	v[2806].copy reg1, 2

}

__fn cmd_team_set_pop_limit $teamID $limit {
	v[LEGV_Ptr2PopLimitArray + $teamID] = $limit

}

//cmd_team_set_faction
__fn cmd_team_set_faction $teamID $factionID {
	v[Const_Team_Address_FactionID_Array_Head + $teamID] = $factionID

}


//cmd_team_give_resource
// reg1 = resource amount after this cmd
// reg2 = ptr to the resource indicated in this cmd
__fn cmd_team_give_resource {
	t2v(SSargs0,var1)
	t2v(SSargs1,var2)
	t2v(SSargs2,var3)
	var1 = max(var1, 0)
	var1 = min(var1, 4)
	reg2 = LEGV_Team_Address_Resource_Array_Start + min(var2, 4) + Team_Variables_Array_Size * var1
	reg1 = max(v[reg2] + var2, 0)
	v[reg2] = reg1

}

//cmd
def {
	cmd_FLAG_Use_hex_argv = 0x10

}

__fn cmd_team_give_tech_flag $teamID $tech_group $tech_flag {
	t2v(SSargs0,var1) // teamID
	t2v(SSargs1,var2) // tech slot
	SSargs2.toNum var3 .hex

	// this might seem retarded kek
	var1 = max(var1, 0)
	var1 = min(var1, 3)
	var2 = max(var2, 1)
	var2 = min(var2, 3)
	var2 -= 1

	v[Const_Team_Address_Tech_Array_Head + var1 + Team_Tech_Array_Size * var2] |= var3

}



//##########################
// Player commands
//##########################

//$playerid is for future possible multiplayer expantion - 0 = singleplay

def {
	DIS_playerid_singleplay = 0

}


__fn cmd_player_change_view $playerid $tileX $tileY {
	t[__id($tileX)].toNum var1 
	t[__id($tileY)].toNum var2 
	@map[LEGV_MAPID].setVehiclePos .boat .pos var1, var2 .retain
	LEGV_CamWarpx = boat.x
	LEGV_CamWarpy = boat.y
	LEGS_Call_CameraWarp.on
}




//$vic_or_def 1 = def, 2 = vic 
__fn cmd_player_prepare_endgame $playerid $vic_or_def { // Cmd.mission.endMission
	t2v($vic_or_def,var1)
	@if var1 == 1 { // victory
		v[2820] = var1
		@call .cev 2135 //wut?
	}.elif var1 == 2 { // defeat
		v[2820] = var1
		@call .cev 2135 
	}.else bl {
		func_errlog("player_prepare_endgame: End game condition seems illegal or undefined")
		
	}

}


// you can quit mission by pressing [TAB] after this function executed
__fn cmd_mission_set_end_flag { //Cmd.mission.allowToQuit
	@pic[PicID_VicDef].move {
	    .pos LEGV_ConstScreenCenterY, LEGV_ConstScreenCenterY .center
	    .scale 100
	    .trans 100
	    .time 15
	    .rgbs 100, 100, 100, 100
	}
	LEGS_SkipBriefing.on //?

}

//##########################
// Group commands
//##########################

__fn cmd_grp_setCgrp {
	aiList_clear() // init Cgrp first
	// then
	SSargs0.split "|", Str_ScriptsBufferHead, reg1
	var1 = Const_save_var_Adr_ScriptsBufferHead
	@loop reg1 {
		t[var1].toNum var2
		aiList_push(var2) // push it
		var1 += 1
	}
	
}


//##########################
// misc commands
//##########################


__fn cmd_genHeightmap {
	// generate height map.
	@call .cev 1804
}

// toriaezu matometeru dake
__fn cmd_editmap_zatta {
		@if t[v[523]] .contains "genmappic" { // map picture
		    @call .cev 1854
		    
		}
		@if t[v[523]] .contains "gentilemap" {
		    @call .cev 1853
		    
		}

	// generate height map 
	@call .cev 1804
	t[510] .asg "\Maps\"
	t[510] .cat t[750]
	t[510] .cat "\"
	t[501] .asg t[510]
	t[501] .cat "heightmap_light"
	@img.save .pic PicID_elevation_add .static .dst t[501]
	t[501] .asg t[510]
	t[501] .cat "heightmap_dark"
	@img.save .pic PicID_elevation_multi .static .dst t[501]

		@if t[v[523]] .eq "editmap export" {
		    t[509] .asg ""
		    @loop v[1004] .dst v[341] {
			v[202] = v[341] + 1
			@comment "配列ゲット"
			v[300] = v[202]
			v[298] = v[202] * 300 + 4700
			v[601] = v[298] + 1
			@if v[v[601]] >= 1 {
			    @comment "ordinary unit"
			    @if v[v[601]] != 11 {
				v[254] = v[v[298] + 101]
				v[251] = v[v[298] + 100]
				v[280] = v[v[298] + 244]
				v[277] = v[v[298] + 241]
				v[258] = v[v[298] + 35]
				v[341] = v[298] + 26
				v[v[341]].copy v[341], 2
				v[342] -= 1
				t[509] .cat "spawn_unit(\v[254],\v[341],\v[342],\v[251],\v[258],\v[280],\v[277])" .extract
				t[509] .cat t[525]
				
			    } .else bl {
				@comment "#spawnStatic"
				@if v[v[601]] == 11 {
				    v[254] = v[v[298] + 102]
				    @if v[v[254]] != 107 {
					v[254] = v[v[298] + 101]
					@if v[254] > 0 {
					    v[251] = v[v[298] + 100]
					    v[258] = v[v[298] + 35]
					    v[341] = v[298] + 26
					    v[v[341]].copy v[341], 2
					    v[342] -= 1
					    t[509] .cat "spawn_static(\v[254],\v[341],\v[342],\v[251],\v[258])" .extract
					    t[509] .cat t[525]
					    
					}
					
				    } .else bl {
					
				    }
				    
				}
				
			    }
			    
			}
			
		    }
		    
		    @comment "*get map str*"
		    t[510] .asg "..\Maps\map_"
		    t[510] .cat t[751]
		    t[510] .cat "\\"
		    t[510] .cat "export"
		    t[509] .toFile t[510], .utf8 //not sjis
		    
		}
	

		// export unit icon
		@if t[v[523]] .eq "export unit" {
		    @se.play "decide1" .opt 90, 100, 50
		    v[45] %= v[45] == 10 ? 20 : 10
		    v[302] = 100
		    v[335] = 101
		    v[341] = 101
		    @comment "User"
		    @if s[1] .isOff() {
			v[342] = v[v[341]] * 300
			v[342] += 4701
			@comment "Count Picture Layer Array"
			v[899] = v[v[v[341]] * 300 + 4999]
			v[345] = v[899]
			@comment "#get damaged variation"
			v[604] = v[v[v[341]] * 300 + 4704]
			v[0] = v[343..352] = [v[604] % 10, v[604] / 10 % 10, v[604] / 100 % 10]
			@pic[v[302]].strpic {
			    ""
			    .pos -166, -166 .center
			    .size 64, 64            .chromakey 1
			    .scale 100
			    .trans 100
			    .rgbs 100, 100, 100, 100
			    .font "", 12 .noShadow
			    .spacing 0, 4
			    .skin "" .nobg .noframe .noGradation .noPadding
			    .mapLayer 8
			    .eraseWhenTransfer
			    .affectedByFlash
			    .affectedByShake
			}
			v[463] = 5
			v[464] = 1
			v[726] = v[v[v[341]] * 300 + 4826]
			v[4101..4110] = v[463]
			v[4106] = v[726] & 16777216 ? 7 : 5
			v[4107] = v[726] & 512 ? 7 : 5
			v[4101] = v[726] & 512 ? 7 : 5
			v[4121..4130] = 1
			v[4124] = v[726] & 134217728 ? 2 : 1
			v[725] = v[v[341]] * 300 + 4825
			v[4121] = [1, 2][(v[v[725]] & 1)]
			@while v[899] >= 1 {
			    v[341] = v[899] % 10
			    v[286] = 900 + v[341] + 10 * v[v[341] + 342]
			    v[463] = v[4100 + v[341]]
			    v[464] = v[4120 + v[341]]
			    @comment "#########################
		Layer own Setting"
			    v[891] = v[314] + 291
			    v[341] = (v[341] - 1) % 6
			    @comment "Layer own Setting END
#########################"
			    v[320] = v[(v[v[335]] - 1) * 6 + v[341] + v[1185]]
			    @comment "Strings = t[v[286]]"
			    v[11] = v[302]
			    v[12..13] = 32
			    @pic[2599].show {
				t[v[286]] .repl 1 v[320]
				.pos -111, -111 .center
				.chromakey 1
				.scale 100
				.trans 0
				.rgbs 100, 100, 100, 100
				.grid v[463], v[464] .cell 2
				.mapLayer 7
				.eraseWhenTransfer
				.affectedByFlash
				.affectedByShake
			    }
			    @pic[2599].getInfo .cewh .currentRect v[360], v[360], v[355], v[356]
			    @pic[2599].getInfo .pixel 0, 0, v[355], v[356] .dst 550445
			    v[18] = 550445
			    @loop v[356] .dst v[15] {
				@loop v[355] .dst v[16] {
				    v[17] = v[v[18]]
				    @if `(v[17] & 0xFF000000) == 0xFF000000 {
					v[358] = v[12] + v[16]
					v[359] = v[13] + v[15]
					v[358] -= v[355] / 2
					v[359] -= v[356] / 2
					@pic[v[11]].setPixel .xywh v[358], v[359], 1, 1 .src v[17]
					
				    }
				    v[18] += 1
				    
				}
				
				
			    }
			    
			    v[899] /= 10
			    
			}
			
			
		    }
		    @img.save .pic v[11] .static .dst "user\debug"
		    
		}

		//opens a map
		@if t[v[523]] .contains "openmap" {
		    @call .cev 3
		    v[523] = 511
		    v[501] = 0
		    t[v[523]] .split " ", t[501], v[342]
		    t[501] .asg  .file "../Maps/define_maps", .utf8
		    t[503] .asg "\t[502]@.*" .extract
		    t[501].exMatch {
			t[503]
			t[501]
			v[341]
			.beg 0
			.extract
		    }
		    t[750] .asg t[502]
		    @if t[501] .neq "" {
			t[501] .split "=", t[501], v[341]
			t[502] .toNum v[501]
			
		    }
		    @map[62].setPlayerPos .pos 12, 6 .retain
		    @wait 0
		    @if v[501] != 0 {
			v[341] = 0
			@map[v[501]].setPlayerPos .pos v[341] v[341]
			
		    } .else bl {
			@map[60].setPlayerPos .pos 0, 0 .retain
			
		    }
		    s[2].off
		    
		}



	// "#show_msg_dialog(strv)"
	@if inputstr .contains "show_msg_dialog(" {
	    inputstr .split "(", t[3000], TT1
	    t[3001] .split ")", t[3000], TT1
	    @if t[3000] .contains "T:" {
		t[3000] .split "T:", t[2999], TT1
		
	    } .else bl {
		@if t[3000] .contains """" {
		    t[3000] .split """", t[2999], TT1
		    
		} .else bl {
		    t[3000] .toNum var1
		    var1 = v[1218] + var1
		    t[3000] .asg t[var1]
		    
		}
		
	    }
	    // "#######################"
	    @call .cev 1924
	    var2 = 2
	    v[601] = 1
	    @pic[v[1155]].strpic {
		t[3000]
		.pos var2, v[1126] .bottomLeft
		.size 0, 0                .chromakey 1
		.scale 100
		.trans 30
		.rgbs 100, 100, 100, 100
		.font Font_UI, Font_UI_size
		.spacing 0, 4
		.skin "" .nobg .noframe .noPadding
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	    }
	    @call .cev 1925
	    // "#######################"
	    @break
	    
	}
	// "#show_radio_dialog(str)"
	@if inputstr .contains "show_radio_dialog(" {
	    inputstr .split "(", t[3000], TT1
	    t[3001] .split ")", t[3000], TT1
	    t[3000] .toNum var1
	    @call .cev 1889
	    @call .cev 2088
	    // "#########################"
	    @loop .inf() {
		@if v[367] <= v[4570] {
		    @break
		    
		}
		@wait 0
		
	    }
	    
	    @break
	    
	}
	// "#show_dialog_icon(str,gridx,gridy,cell)"
	@if inputstr .contains "show_dialog_icon(" {
	    inputstr .split "(", t[3000], TT1
	    t[3001] .split ",", t[3000], TT1
	    t[3001] .toNum var1
	    t[3002] .toNum var2
	    t[3003] .toNum var3
	    TT1 = muldiv(v[1115], 3, 5)
	    TT2 = 32
	    @pic[1769].show {
		t[3000]
		.pos TT1, TT2 .center
		.chromakey 1
		.scale 100
		.trans 0
		.rgbs 100, 100, 100, 100
		.grid var1, var2 .cell var3
		.mapLayer 9
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	    }
	    // "#########################"
	    
	}


}



