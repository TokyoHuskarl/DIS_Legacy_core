// Compiling this file updates the DIS-RTS pathfinding in the ldb 
// このファイルをコンパイルするとRTSモードの経路探索システムが更新されます

#include "./../headers/header_common.tpc"
def moduletitle="module_core_RTS_pathfinding_general"

//pathfinding funcs load
#include "./module_core_RTS_pathfinding_functions.tpc"

//include better one - main pathfinding algorithm, A*
//func_pathfinding_Astar()
//include worse one - will be called only when unclear path result is allowed  
//func_pathfinding_retarded()
// Both of A* and legacy pathfinding function combined in this one tpc file
#include "./module_core_RTS_pathfinding_algorithm.tpc"
//#include "./module_core_RTS_pathfinding_Astar.tpc"



def KILL_AI_routine_bits_FLAG_Pathblocked = ~AI_routine_bits_FLAG_Pathblocked
def KILL_AI_routine_bits_FLAG_PFskip = ~AI_routine_bits_FLAG_PFskip

cev .id(69), .name("Pathfinding:Manager") , .parallel , .cond(Const_Is_RTS_Mode), {   
	v[4599] = 0
	v[4598] = v[4532]
	@while v[v[4598]] != 0 {
	    v[4596] = v[v[4598]] - 1
	    v[4597] = v[v[4598]] * 300 
	    v[4597] += 4700
	    v[v[4597]].copy v[600], 300
	    @if `!(v[874] & 512) {
		    //opt 28.4.23
		    //v[634] = v[4597] + 34
		@if `v[634] & AI_routine_bits_FLAG_PATHFINDING {
		    @if `v[634] & AI_routine_bits_FLAG_PFskip {
			 v[634] = v[4597] + 34
			 v[v[634]] &= KILL_AI_routine_bits_FLAG_PFskip // -65537//~65536

			
		    } .else bl {
			@if `v[634] & AI_routine_bits_FLAG_Pathblocked {
			    @if `!(v[603] & 8388608) {
				@if v[4599] <= 3 {
				    func_pathfinding_retarded()
				    v[4599] += 1
				    
				}
				v[634] = v[4597] + 34
				v[[634]] &= KILL_AI_routine_bits_FLAG_Pathblocked // -8388609 ~8388608
				v[[634]] |= AI_routine_bits_FLAG_PFskip
				
			    }
			    
			} .else bl {
			    @if v[4599] <= 16 {
				func_pathfinding_Astar()
				v[4599] += 1
				v[634] = v[4597] + 34
				@if `!(v[v[634]] & AI_routine_bits_FLAG_Pathblocked) {
				    v[v[634]] &= AI_routine_bits_KILL_FLAG_PATHFINDING // -16385//~16384
				    
				}
				
			    }
			    
			}
			
		    }
		    
		}
		
	    }
	    v[4598] += 1

	}

}

cev .id(1769), .name("Pathfinding:retarded") , {   
	func_pathfinding_retarded()
}

cev .id(1770), .name("Pathfinding:AStar"), {   
	func_pathfinding_Astar()
}



//LEGACY cev setting
cev .id(1771), .name("PathfindingFunc:Move") , {   
	func_pathfinding_move()
}

cev .id(1772), .name("PathfindingFunc:Open Node") , {   
	func_pathfinding_open_Node()
}

cev .id(1773), .name("PathfindingFunc:Remove Opened Node") , {   
	func_pathfinding_remove_OpenNode()
}


