
//9.3.23
//cev 42

def ranged_base_hit = 26//38 

__fn macro_extract_units_parameters {
	//TEMPORARY
	reg1 = Ptr9 + 4701
	v[reg1].copy agent_ObjectType, 300
	reg1 = Ptr10 + 4960
	v[reg1].copy victim_Morale, 20//only 20

}


__fn func_bs_melee_hit_check $attacker $victim {
	Ptr9 = $attacker * 300
	Ptr10 = $victim * 300

	macro_extract_units_parameters()

	@if `agent_Direction == v[Ptr10 + 4944] {//back attack!
	    s[164].on
	    
	} .else bl {
	    s[164].off
	    
	}
	//@comment "HITを取得"
	Temp1 = agent_ProcessHIT
	//get evasion
	reg1 = victim_ProcessEVA
	//@comment "#################GetParaNow v1v2r1 END#################"
	//@comment "#DodgeMS*12%"
	reg1 += v[Ptr10 + 4765] & 32 ? victim_ProcessMS>>3:0//muldiv(victim_ProcessMS, 12, 100) : 0
	//@comment "＃＃＃＃＃＃＃＃＃＃Elevation Bonus＃＃＃＃＃＃＃＃＃＃"
	Temp20 = agent_getTerrainElevation - v[Ptr10 + 4757]
	//@comment "＃＃＃＃＃＃＃＃＃＃BackAttack Bonus＃＃＃＃＃＃＃＃＃＃"
	Temp1 += s[164] == 1 ? 15 : 0
	//@comment "＃＃＃＃＃＃＃＃＃＃Base Hit Per...10% min5% max95%＃＃＃＃＃＃＃＃＃＃"
	Temp1 += 10 - reg1 + 5 * Temp20
	Temp1 = max(5, min(95, Temp1))
	//@comment "＃＃＃＃＃＃＃＃＃＃Roll!	＃＃＃＃＃＃＃＃＃＃"
	Temp3 = rnd(0, 99)
	reg1 = Temp3 <= Temp1 ? 1 : 0
	@if reg1 == 0 {
	    v[843] = Ptr10 + 4803
	    //@comment "＃＃＃＃＃＃＃＃＃＃Check Shield?	＃＃＃＃＃＃＃＃＃＃"
	    //@comment "Shieldを取得 302	...ADVに先行で算入されている"
	    Temp2 = 100 - v[Ptr10 + 4835]//shield value..
	    reg2 = Temp3 >= Temp2 ? 1 : 0
	    @if reg2 == 0 {
		@if s[164] .isOff() {
		    //@comment "Parry chance"
		    //v[874] = Ptr10 + 4974
		    @if `victim_ProcessObjBit & 16777216 {
			@if `v[v[843]] == 0 {//not ranged type?
			    reg2 = rnd(0, 99) <= victim_ProcessHIT / (victim_ProcessObjBit & 131072 ? 2 : 3) + 16 ? 2 : 0
			    
			}
			
		    }
		    
		}
		
	    }
	    
	}

}

def{
bs_hitcheck_FLAG_ArrowMode = 0x1

}

__fn func_bs_ranged_hit_check $attacker $victim $dir $flags $aux_var {
	Ptr9 = $attacker *300
	Ptr10 = $victim *300
	__if $flags & bs_hitcheck_FLAG_ArrowMode {
		defv var_funcbs_rhc_arrow_hitbonus = __id(var6)
		var_funcbs_rhc_arrow_hitbonus = $aux_var //secure - if it's arrow type, load saved arrow hit bonus
	}
	macro_extract_units_parameters()
	//var5 = perk1
	var5 = v[Ptr10 + 4765]
	//@comment "HITを取得"
	//Temp1 = Ptr9 + 4965
	Temp1 = agent_ProcessHIT//v[Temp1]
	//@comment "AVD/4を取得"
	//reg1 = Ptr10 + 4966
	reg1 = victim_ProcessEVA//v[reg1]
	//@comment "#DodgeMS*12%"
	reg1 += var5 & 32 ? victim_ProcessMS >> 3 : 0// muldiv(victim_ProcessMS, 12, 100)
	reg1 /= 4
	//@comment "##########Perk##########"
	//@comment "Anticipation"
	reg1 += var5 & 64 ? 18 + reg1 : 0
	//@comment "＃＃＃＃＃＃＃＃＃＃Elevation Bonus＃＃＃＃＃＃＃＃＃＃"
	Temp20 = min(agent_getTerrainElevation - v[Ptr10 + 4757], 3)//3 at highest
	Temp1 += 7 * Temp20
	//@comment "＃＃＃＃＃＃＃＃＃＃Check Shield?＃＃＃＃＃＃＃＃＃＃"
	//@comment "Shieldを取得 302...ADV/4+302*2"
	Temp2 = Ptr10 + 4835
	@if v[Temp2] > 0{//if victim has shield
		@if `victim_ProcessObjBit & 67108864{//check if blken
			Temp2 = 0
 
		}.else bl{
			Temp2 =  v[Ptr10 + 4948] & 6 ?muldiv(v[Temp2], 250, 100) : v[Temp2] * 2
			//if you're covered with shield wall brother	
		}
	}.else bl{
		Temp2 = 0
	}
	//If you covered by ally's shield, you will gain+8 shield value, even if you don't have any shield
	Temp2 += victim_ProcessInstantState & agent_ProcessInstantState_FLAG_shield_covered_double_check?6:0
	//@comment "BackAttack one-thirds evasion chance"
	reg1 = (reg1 + Temp2) / ($dir == v[Ptr10 + 4944] ? 3 : 1)
	reg1 += victim_ProcessInstantState & agent_ProcessInstantState_FLAG_shield_covered_double_check?7:0

	Temp3 = rnd(0, 99)
	reg2 = Temp3 >= 100 - Temp2 ? 1 : 0
	//@comment "＃＃＃＃＃＃＃＃＃＃Base Hit Per... once 38% but now far lower than that"
	__if $flags & bs_hitcheck_FLAG_ArrowMode {
		Temp1 += var_funcbs_rhc_arrow_hitbonus - reg1
	}.else bl{
		Temp1 += ranged_base_hit - reg1
	}
	Temp1 = max(1, min(99, Temp1))
	//against ambushed unit, accuracy is halved
	Temp1 >>= (victim_ProcessObjBit & 1) //fixed BETA2
	//@comment "＃＃＃＃＃＃＃＃＃＃Roll!＃＃＃＃＃＃＃＃＃＃"
	reg1 = Temp3 <= Temp1 ? 1 : 0
}

__fn func_bs_dummy_hit_check {
	reg1 = 1
}

__fn func_bs_mind_hit_check $attacker $victim{
	Ptr10 = $victim *300
	reg1 = Ptr10 + 4960
	reg1.copy victim_Morale, 20
	//@comment "＃＃＃＃＃＃＃＃＃＃memo	＃＃＃＃＃＃＃＃＃＃"
	//@comment "V1=spell power"
	//@comment "#そのうち処理作る"
	//@comment "#################GetParaNow v1v2r1 END#################"
	Temp1 = var1
	//@comment "#################	GetWillPower#################"
	reg1 = victim_ProcessWill//v[Ptr20 * 300 + 4975]
	//@comment "＃＃＃＃＃＃＃＃＃＃	Base Hit Per...10%	min5% max95%	＃＃＃＃＃＃＃＃＃＃"
	Temp1 -= reg1
	var2 = victim_ProcessObjBit//v[Ptr20 * 300 + 4974]
	@if s[319] .isOn() {
	    Temp1 -= reg1 >= 150 || var2 & 4198400 ? 9999 : 0 //var2 & 4096 || var2 & 4194304
	    //Too much will or mindless makes unit immune to mind attack 
	    
	}
	//@comment "＃＃＃＃＃＃＃＃＃＃	Roll!	＃＃＃＃＃＃＃＃＃＃"
	reg1 = rnd(0, 99) <= Temp1 ? 1 : 0
}

