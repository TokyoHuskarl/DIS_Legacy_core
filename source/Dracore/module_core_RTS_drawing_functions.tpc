
__fn func_load_cache $string {
	/*
	t[__id(str_agent_cache)].inStr($string, reg1) 
	@if reg1 == -1{ // new picture
		v[2299] += 1
		@sys.gameOpt .picLimit v[2299]
		@pic[v[2299]].show {
		    $string
		    .pos -1000, -1000 .center
		    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 100
		    .rgbs 0, 0, 0, 100
		    .mapLayer 4
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
                t[__id(str_agent_cache)].cat $string
		t[__id(str_agent_cache)].cat t[525]
	}*/
}

__fn function_set_agent_picture $agentid $stringvar $slot {
	TT1 = (v[__id($agentid)] - 1) * 10
	TT1 = TT1 + Const_str_agent_pictures_strings_start
	TT2 = TT1+ $slot 
	t[TT2].asg t[__id($stringvar)]
}

// victim_ExMotionFlags victim_AddMotionBits
__fn fuction_drawing_set_grid {

	drawing_set_grid_raw(agent_ExMotionFlags,agent_AddMotionBits)
}
__fn drawing_set_grid_raw $Exmotion $Addmotion {
	//in this function you can use v[725] and v[726] pointer to get bits flag 
	v[4102] = Const_head_spr_gridX //grid X
	v[4122] = Const_head_spr_gridY //grid Y
	@if `$Exmotion & ExMotionFlags_FLAG_MoveAnim {
		v[4101] = 7 // armor
		v[4107] = 7 // minionspr
	}

	v[4104] = $Exmotion & ExMotionFlags_FLAG_Weapon_With_Anim ? 7 : 5 // animation weapons
	v[4103] = $Exmotion & ExMotionFlags_FLAG_Helm_With_Anim ? 7 : 5 // animation helms
	v[4105] = $Exmotion & ExMotionFlags_FLAG_Shield_With_Anim ? 7 : 5 // animation shields
	v[4121] = $Addmotion & AddMotionFlags_FLAG_Armor_has_second_sprite_line ? 2 : 1
}

__fn function_agent_init_set_picture_strs {
	var1 = Const_str_agent_pictures_strings_start + v[201] * 10
		var2 = var1 + 9
	t[var1..var2].asg ""
	@if v[601] == 3 {
		t[var2].asg Const_str_hair
		t[var2].cat "\v[670]" .extract
		@if v[670]>0{ func_load_cache(t[var2]) }
		var2 = var1 + 1
		// t[var2].asg Const_str_armor
		// t[var2].cat "\v[886]" .extract
		t[var2].asg Str_slot_armorfile
		@if v[886] > 0 { func_load_cache(t[var2]) }

		var2 = var1 + 2
		t[var2].asg Const_str_head
		t[var2].cat "\v[887]" .extract
		//@if v[887]>0{ func_load_cache(t[var2]) }

		var2 = var1 + 3
		// t[var2].asg Const_str_helm
		// t[var2].cat "\v[888]" .extract
		t[var2].asg Str_slot_helmfile
		@if v[888]>0{ func_load_cache(t[var2]) }

		var2 = var1 + 4
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[858]" .extract
		t[var2].asg Str_slot_mainsetR
		@if v[858]>0{ func_load_cache(t[var2]) }

		var2 = var1 + 5
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[859]" .extract
		t[var2].asg Str_slot_mainsetL
		@if v[859] > 0 { func_load_cache(t[var2]) }

		var2 = var1 + 6
		// t[var2].asg Const_str_misc
		// t[var2].cat "\v[889]" .extract
		t[var2].asg Str_slot_accfile
		@if v[889] > 0 { func_load_cache(t[var2]) }
		// reserve set

		var2 = var1
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[856]" .extract
		t[var2].asg Str_slot_subsetR
		// @if v[856]>0{ func_load_cache(t[var2]) }

		// Sub shield - not yet implemented in game
		/*t[var2].cat ","
		t[var2].cat Const_str_weapon
		t[var2].cat "\v[857]" .extract*/
		
		//set hair
	}.elif v[601] == 4 {
		var2=var1+7
		t[var2].asg Const_str_minion
		t[var2].cat "\v[602]" .extract
		@if v[602]>0{ func_load_cache(t[var2]) }
		var2 = var1 + 3
		t[var2].asg Const_str_minion_head
		t[var2].cat "\v[602]" .extract
		var2 = var1 + 1
		t[var2].asg Const_str_minion
		t[var2].cat "\v[602]" .extract
		var2 = var1 + 4
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[858]" .extract
		t[var2].asg Str_slot_mainsetR
		@if v[858]>0{ func_load_cache(t[var2]) }
		var2 = var1 + 5
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[859]" .extract
		t[var2].asg Str_slot_mainsetL
		@if v[859]>0{ func_load_cache(t[var2]) }
		//reserve set
		var2 = var1
		// t[var2].asg Const_str_weapon
		// t[var2].cat "\v[856]" .extract
		t[var2].asg Str_slot_subsetR
		//@if v[856]>0{ func_load_cache(t[var2]) }
		t[var2].cat ","
		t[var2].cat Str_slot_subsetL
		// t[var2].cat "\v[857]" .extract
		// @if v[857]>0{ func_load_cache(t[var2]) }

	}.elif v[601] == 1 {//normal unit
		var2 = var1 + 1
		// t[var2].asg Const_str_minion
		// t[var2].cat "\v[602]" .extract
		t[var2].asg Str_slot_minionfile

		@if v[602] > 0 { func_load_cache(t[var2]) }
		var2 = var1 + 3
		t[var2].asg Const_str_minion_head
		t[var2].cat "\v[602]" .extract
		var2 = var1 + 7
		t[var2].asg Str_slot_minionfile
	}.elif v[601] == 9 {//worker
		var2 = var1 + 1
		t[var2].asg Str_slot_minionfile
		@if v[602]>0{ func_load_cache(t[var2]) }
		var2 = var1 + 7
		t[var2].asg Str_slot_minionfile
	}

}

__fn function_draw_moving_agent {
	
	v[11] =  v[340]*10
	v[11] = Const_str_agent_pictures_strings_start + v[11]
	@while v[899] >= 1 {
		v[341] = v[899] % 10
		v[286] = v[341] + v[11]
		//@comment "Layer Setting"
		v[356].copy v[449], 4
		
		v[455] = 4030 + v[341]
		v[305] = 4040 + v[341]
		v[306] = 4050 + v[341]
		v[447] = 4060 + v[341]
		v[342] = 4080 + v[341]
		v[463] = 4100 + v[341]
		v[464] = 4120 + v[341]
		v[321] = 4110 + v[341]
		v[453] = 4130 + v[341]
		v[454] = 4140 + v[341]
		v[456] = 4150 + v[341]
		//surprise, but this seems faster than above... opt 25.4.23
		v[305].deref v[305],2
		v[447] = v[v[447]]
		v[342] = v[v[342]]
		v[463].deref v[463],2
		v[321] = v[v[321]]
		v[453].deref v[453],4

		v[449] .add v[v[342]], 4
		// @comment "Layer Setting END"
		// this @if is for safety, set in order not to load false id picture 
		@if v[188] > 0 {
		    @cmd 11110, t[v[286]], .args v[441], v[480]
		    
		}
		v[186..188] += 1
		v[899] /= 10
	}	

}

__fn function_draw_agent_inv_stats {
	    v[441] = 350
	    v[442] = 1
	    v[443] = 305
	    v[444] = 306
	    v[445] = 0
	    v[448] = 1
	    v[453..454] = 0
	    v[457] = 0
	    v[458] = 1
	    v[459] = 1
	    v[460] = 0
	    v[461..462] = 0
	    v[465] = 1
	    v[466] = 321
	    v[467] = 0
	    v[470] = 113
	    v[470] = 0
	    @comment "Force Sprite"
	    v[321] = 2
	    @comment "Failsafe"
	    v[446] = 100
	    v[447] = 0
	    v[455] = 0
	    v[463] = 5
	    v[464] = 1
			v[4041..4050] = 0 //X
			v[4051..4060] = 0 //Y
	    v[4101..4110] = v[463]
	    v[4121..4130] = v[464]

			v[601] = v[340] * 300 + 4701
			v[v[601]].copy v[601], 300

			fuction_drawing_set_grid()
	    v[4106] = v[726] & 16777216 ? 7 : 5
	    v[4124] = v[726] & 134217728 ? 2 : 1

			// camel
			v[4056] += agent_AABits & AABits_FLAG_Camel ? Const_camel_offsetY_draw : 0 // Camel

	    v[468] = 9
	    @comment "Colour"
	    v[449..452] = 100
	    @comment "Get Picture Layer Array"
	    v[358] = v[159]
	    v[11] = (v[340]-1)*10
	    v[11] = Const_str_agent_pictures_strings_start + v[11]
	    @while v[358] >= 1 {
				v[305] = v[157] + 24
				v[306] = v[158] + 54
				@comment "Add Initial Offsets to SpriteXY"
				v[305].add v[881],2
				// v[0] = v[305..306] += v[881..882]
				v[306] += v[4050 + v[341]]
				@comment "Add Initial Offsets to SpriteXY#End"
				v[341] = v[358] % 10
				v[463] = v[4100 + v[341]]
				v[464] = v[4120 + v[341]]
				v[286] = v[341] + v[11]
				@comment "Strings = t[v[286]]"
				@cmd 11110, t[v[286]], .args v[441], 30
				v[350] += 1
				v[358] /= 10
		
	    }

}
