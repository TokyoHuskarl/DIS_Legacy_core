
//###########################
//String Funcitons
//###########################


// this function works correctly only when the dictionary doesn't have multiple string IDs that share the same number ID

//var $numid str $DISdict
//

// reg1 = stringid
__fn func_get_stringid_from_numid $numid $DISdict {

	strreg1.asg .cat("\w*=",$numid,"$")
	t[__id($DISdict)].exMatch(strreg1, strreg1, var1)
	@if var1 == -1{
		strreg1.split("=",strreg1,var1) 
	}.else bl{
		reg1 = $numid
		func_errlog( __str("Couldn't get string ID match with \reg1 from the dictionary t[" __id($DISdict) "].") )
		strreg1.asg "NULL"
	}

}


//###########################
// file load
//###########################

__fn sys_load_DIScsv $csvname {

}


//###########################
//save system
//###########################



__fn sysfunc_save_global {
	
}

__fn sysfunc_load_global {
	@gsave.open
	gs[301].copyTo s[301], 100
	gv[1].copyTo v[2201], 100
	@gsave.close
	
}
__fn sysfunc_RMsave $saveid {

}


__fn sysfunc_autosave {
	v[472] = divmul(90, 100, v[2216])
	@se.play "cursor02" .opt v[472], 100, 50
	
	/*
	//@comment "#######################"
	@call .cev 1924
	TT1 = 2
	v[601] = 1
	@pic[v[1155]].strpic {
			t[20354]
			.pos TT1, v[1126] .bottomLeft
			.size 0, 0                            .chromakey 1
			.scale 100
			.trans 30
			.rgbs 100, 100, 100, 100
			.font Font_UI, Font_UI_size
			.spacing 0, 4
			.skin "" .nobg .noframe .noPadding
			.mapLayer 8
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
	}
	@call .cev 1925
	//@comment "#######################"
	*/

	func_show_msg(t[20354]) // autosave message log
	str1 .asg "AUTOSAVE"
	@actor[1].name str1

	// compress save data
	sysfunc_compress_savedata_autosave()
	
	
	/*  this caused bug
	@if s[1] .isOn() {
			v[v[4568]..v[4600]] = 0
	}
	*/

	save_DIS_js_RTS_system()
	v[2501] += 1 // avoid too much autosave
	s[476].on
	@save[1].save
}

__fn sysfunc_compress_savedata {
	sysfunc_compress_savedata_autosave()
	t[502..510] .asg ""
	t[1001..1300] .asg ""
	t[3001..4000] .asg ""
	t[5001..30000] .asg "" // this will destroy database so you need to reload 
	v[371..380] = 0
	v[561..900] = 0
	v[1901..1963] = 0
	// v[3201..4160] = 0 kesitya dame jane?

	// v[v[4568]..v[4600]] = 0
	//"pixel extract"
	// v[ptr_null].copy v[buffer_for_pixel_information_head],10000
	v[550445..560445] = 0

}

__fn sysfunc_compress_savedata_autosave {
	TT1 = v[1079] - v[1067]
	v[ptr_null].copy v[v[1067]],TT1
}

// this function called in cev[6] .name("Camera:Main")
// The reason is that the cev is the highest priority parallel common event.
// 
__fn sysfunc_reboot_RTS_after_loading { //PicID_Auxilia_Message_Window
	
	/*
	@pic[PicID_Auxilia_Message_Window].strpic {
			"NOW LOADING..."
			.pos TT1, TT2
			.size LEGV_ConstScreenCenterX, LEGV_ConstScreenCenterY    .chromakey 1
			.scale 100
			.trans 0
			.rgbs 100, 100, 100, 100
			.font Font_Common, Font_Common_size
			.spacing 0, 4
			.skin "" .stretch
			.mapLayer 9
			.eraseWhenTransfer
	}
	*/

	sysfunc_reload_RTS_data()

	reboot_DIS_js_RTS_system()
	s[476].off
	v[2501] += 1

}

__fn sysfunc_reload_RTS_data {
	sysfunc_load_global()
	@call .cev 1790
	@call .cev 1795
	@call .cev 1794
}


