
// well, this one seems different...
// Attention please?
cev .id(32), .name("AgentAct:Worker"), {

		// deploy 

		// deploy target data
		v[711] = Ptr20 * 300
		v[711].copy v[707],1 // kari, will be abolished
		Ptr2 = v[711] + 4701
		v[Ptr2].copy victim_AgentType,agent_Basic_Array_size

		v[702] = v[711] + 4802
		v[700] = victim_TeamID

		// get Meta Team rom AEB
		get_AEB_element_wo_ptr(Ptr20,__id(Temp10),AgentExBuffer_SLOT_MetaTeam)
		// "Get Civilization... of whom? <- this part might cause unexpected result (refering target's civ), beware
		// kari
		TT1 = 2403 + Temp10
		v[822] = v[TT1] 

		// AA to enemy - this part should be reorganized
		
		// @if `v[700] % 3 != 0 {
		@if Temp10 != 0 {
			@if v[Ptr18] > 0 {
				s[167].off
					@if victim_AgentType == 11 {
						s[167].on

					}
					
				// "#Combat Penalty Resist"
				// "############↓?"
				v[720] = v[210] + 120
					v[629] = v[210] + 29
					v[874] = v[210] + 274
					// "############	Melee Auto Attack################"
					// "Access19 = AttackerObjectID 0~	Access20 = TargetObjectID 1~	Access18 = ObjTypeチェックPtr"
					v[711] = Ptr20 * 300
					v[607] = v[711] + 4707
					v[v[607]].copy v[607], 2
					// "Effect"
					v[376] = 0
					s[166].off
					@if `s[Ptr20 + 500] == 1 {
						s[166].on
							v[376] = 4
							v[181] += 1
							@if v[181] <= 6 {
								v[844] = Ptr19 * 300
									v[844] += 4944
									@loop v[1017] .dst Temp20 {
										v[244] %= v[1199]
											TT11 = v[244] * 50
											TT11 += v[1198]
											@if v[TT11] <= 1 {
												// "まず清掃"
												v[1301].copy v[TT11], 50
													// "ポインタセット開始"
													// "設定"
													v[TT11] = 1
													// "F"
													TT5 = TT11 + 49
													v[TT5] = 8
													// "Set itself"
													TT5 = TT11 + 3
													v[TT5] = 123
													// "Set size"
													v[TT11 + 26] = 100
													// "Set Dire"
													TT5 = TT11 + 27
													v[TT5] = 13 + v[v[844]] * 6
													// "けす処理をLinkedFuncに入れる"
													TT5 = TT11 + 10
													// "XY set"
													TT17 = TT11 + 6
													v[607].copy v[361], 2
													v[361] += rnd(-3, 3)
													v[362] += rnd(-5, 5)
													v[361].copy v[TT17], 2
													// "仕上げに登録消す"
													v[244] += 1
													@break

											}
										v[244] += 1

									}

							}

						@if v[182] <= 0 {
							@if v[522] < 30 {
								v[182] += 1
									// "#Get melee weapon effect"
									v[329] = v[Ptr19 * 300 + 4829] / 10000
									// "#########################"
									v[472] = divmul(65, 100, v[2216])
									v[473] = rnd(80, 105)
									v[474] = divmul(v[607] + v[1001], v[1281], 50)
									inputstr .asg "weapons\swing"
									inputstr .cat v[329]
									TT1 = 510
									// "Strings = t[TT1]"
									@cmd 11550, t[TT1], .args v[472], 3
									// "#########################"

							}

						}

					}

				@if s[167] .isOff() {
					var1 = Ptr19
						@call .cev 42

				} .else bl {
					reg1 = 1

				}

				@if reg1 == 1 {
						// "Hit!"
						v[421] = 100
						// "＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃	ここそのうち用意した関数に置き換える	＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃"
						// "ADを取得"
						Temp1 = 25
						// "ARかMRか取得"
						Temp2 = 0
						// "Element"
						Temp3 = 2
						// "AABits"
						var9 = 0
						v[422] = 0
						@call .cev 40

						// "############"
						// "Effect"
						@if s[166] .isOn() {
							TT2 = v[Ptr20 * 300 + 4974] & 4096 ? 999999 : v[1138]
								@if reg2 >= TT2 {
									TT2 = v[v[874]] & 4096 ? 999999 : v[1138]
										// "Blood stain on 1h weapon"
										TT2 = Ptr19 * 300 + 4959
										@if `!(v[v[874]] & 1048576) {
											v[TT2 + 26] = min(v[TT2 + 26] + 1, 12)

										}

										s[141].on
										@if v[181] <= 4 {
											v[711] = Ptr20 * 300
												v[607] = v[711] + 4707
												v[v[607]].copy v[607], 2
												v[607].copy v[361], 2
												v[182] += 1
												// "#Get melee weapon effect"
												v[829] = v[Ptr19 * 300 + 4829] % 10000
												v[474] = divmul(v[607] + v[1001], v[1281], 50)
												@loop 1 {
													// "#########################"
													v[472] = divmul(70, 100, v[2216])
														v[473] = rnd(50, 110)
														@cmd 11550, "weapons/heavy_hit", .args v[472], 3
														// "#########################"
														@break

												}

											// "Get MaxHP of the victim"
											TT2 = Ptr20 * 300 + 4805
												TT3 = v[TT2]
												TT2 = rnd(0, 9)
												// "if the damage amount is higher than 10% of max HP of the victim	more likely bleed effect happens"
												TT3 /= 10
												TT2 += TT3 < reg2 ? 3 : 0
												TT2 *= v[243] < v[1124] ? 1 : 0
												@if TT2 >= 8 {
													v[372] = (v[Ptr20 * 300 + 4840] & 4096) ? 1 : 0
														s[141].on
														@call .cev 111

												}

										}

								} .else bl {
									@if v[181] <= 4 {
										v[182] += 1
											// "#Get melee weapon effect"
											v[829] = v[Ptr19 * 300 + 4829] % 10000
											@loop 1 {
												v[472] = divmul(70, 100, v[2216])
													v[473] = rnd(115, 170)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													@cmd 11550, "weapons/heavy_hit_2", .args v[472], 3
													// "#########################"
													@break

											}


									}

								}

						}

				} .else bl {
					// "Miss!"
					// "#SP damage#Evading costs 2 SP"
					TT10 = Ptr20 * 300 
						TT10 += 4808
						v[TT10] = max(v[TT10] - 2, 0)
						v[607].copy v[221], 2
						@if reg2 == 1 {
							// "##############	CheckBits##############"
							@if s[166] .isOn() {
								// "Set ShieldMotion Timer"
								v[Ptr20 * 300 + 4783] = 6
									@if reg3 == 0 {
										@if v[182] <= 2 {
											// "#########################"
											v[472] = divmul(60, 100, v[2216])
												v[473] = rnd(115, 120)
												v[474] = divmul(v[607] + v[1001], v[1281], 50)
												@cmd 11550, "weapons/shield_hit", .args v[472], 3
												// "#########################"

										}

									} .else bl {
										// "#Dust Particle Effect"
										@loop v[1017] .dst Temp20 {
											v[244] %= v[1199]
												TT11 = v[244] * 50 
												TT11 += v[1198]
												@if v[TT11] <= 0 {
													// "まず清掃"
													v[1301].copy v[TT11], 50
														// "ポインタセット開始"
														// "設定"
														v[TT11] = 1
														v[TT11 + 49] = 3
														v[TT11 + 3] = 160
														TT1 = TT11 + 6
														v[607].copy v[TT1], 2
														v[244] += 1
														@break

												}
											v[244] += 1

										}

										@if v[182] <= 3 {
											// "#########################"
											v[472] = divmul(78, 100, v[2216])
												v[473] = rnd(87, 100)
												v[474] = divmul(v[607] + v[1001], v[1281], 50)
												@cmd 11550, "weapons/shield_cracked01", .args v[472], 3
												// "#########################"

										}

									}

								// "Call Shield"
								TT2 = Ptr20 * 300 
									TT2 += 4952
									v[TT2 + 32] = v[TT2] > 0 ? 4 : 0
									// "#Shield Motion"
									TT2 = Ptr20 * 300 
									TT2 += 4943
									@if v[TT2] != 1 {
										v[TT2] = 2
											TT2 -= 215
											v[TT2] += v[TT2] < 1 ? 140 : 0

									}
								@if s[307] .isOff() {
									// "#描画範囲内か？"
									v[220] %= 30
										v[220] += 1201
										v[220] += 1
										v[223] = v[220]
										v[221] += rnd(-6, 6)
										v[222] += rnd(-3, 3)
										v[222] += s[162] == 1 ? 10 : 0
										// "#サイズは最低100%"
										v[225] = 100

										// "AR"
										TT1 = v[1204] - 10
										@pic[v[223]].show {
											"num\num_block"
												.pos v[221], v[222] .center
												.scrollWithMap
												.chromakey 1
												.scale v[225]
												.trans TT1
												.rgbs 100, 100, 100, 100
												.mapLayer 7
												.eraseWhenTransfer
												.affectedByFlash
												.affectedByShake
										}

									v[222] = v[608] - 24
										v[222] += s[162] == 1 ? 10 : 0
										@pic[v[223]].move {
											.pos v[221], v[222] .center
												.scale v[225]
												.trans 100
												.time 12
												.rgbs 100, 100, 100, 100
										}

									v[183] += v[184] >= v[1128] ? 2 : 1

								}

							}

						} .else bl {
							@if reg2 == 2 {
								@if s[166] .isOn() {
									// "Set ShieldMotion Timer"
									v[Ptr20 * 300 + 4783] = 6
										@if v[182] <= 3 {
											// "#########################"
											@if v[522] < 50 {
												v[329] = rnd(1, 4)
													// "#########################"
													v[472] = divmul(60, 100, v[2216])
													v[473] = rnd(100, 130)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													inputstr .asg "weapons\sword_clash_"
													inputstr .cat v[329]
													TT1 = 510
													// "Strings = t[TT1]"
													@cmd 11550, t[TT1], .args v[472], 3

											}

										}
									@if s[307] .isOff() {
										// "#描画範囲内か？"
										v[220] %= 30
											v[220] += 1201
											v[220] += 1
											v[223] = v[220]
											v[221] += rnd(-6, 6)
											v[222] += rnd(-3, 3)
											v[222] += s[162] == 1 ? 10 : 0
											// "#サイズは最低100%"
											v[225] = 100
											// "AR"
											TT1 = v[1204] - 10
											@pic[v[223]].show {
												"num\num_block"
													.pos v[221], v[222] .center
													.scrollWithMap
													.chromakey 1
													.scale v[225]
													.trans TT1
													.rgbs 100, 100, 100, 100
													.mapLayer 7
													.eraseWhenTransfer
													.affectedByFlash
													.affectedByShake
											}
										v[222] = v[608] - 24
											v[222] += s[162] == 1 ? 10 : 0
											@pic[v[223]].move {
												.pos v[221], v[222] .center
													.scale v[225]
													.trans 100
													.time 12
													.rgbs 100, 100, 100, 100
											}
										v[183] += v[184] >= v[1128] ? 2 : 1

									}
									// "#"
									@if `v[Ptr20 * 300 + 4974] & 131072 {
										// "#バフ番号指定"
										var1 = 1243
											var2 = Ptr20
											@call .cev 1911
											@if reg2 >= 0 {
												v[reg2] = 48

											}

									}
									// "#バフ番号指定"
									var1 = 1171
										var2 = Ptr20
										@call .cev 1911
										@if reg2 >= 0 {
											v[reg2] = 5

										}

								}

							} .else bl {
								// "Set Dodge Timer"
								v[Ptr20 * 300 + 4785] = 8
									@if s[166] .isOn() {
										@if v[181] <= 1 {
											@if v[522] < 25 {
												// "#########################"
												v[472] = divmul(25, 100, v[2216])
													v[473] = rnd(80, 120)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													@cmd 11550, "evade2", .args v[472], 3
													// "#########################"

											}

										}
										@if s[307] .isOff() {
											// "#描画範囲内か？"
											v[220] %= 30
												v[220] += 1201
												v[220] += 1
												v[223] = v[220]
												v[221] += rnd(-6, 6)
												v[222] += rnd(-3, 3)
												v[222] += s[162] == 1 ? 10 : 0
												// "#サイズは最低100%"
												v[225] = 100
												// "AR"
												TT1 = v[1204] - 10
												@pic[v[223]].show {
													"num\num_miss"
														.pos v[221], v[222] .center
														.scrollWithMap
														.chromakey 1
														.scale v[225]
														.trans TT1
														.rgbs 100, 100, 100, 100
														.mapLayer 7
														.eraseWhenTransfer
														.affectedByFlash
														.affectedByShake
												}
											v[222] = v[608] - 24
												v[222] += s[162] == 1 ? 10 : 0
												@pic[v[223]].move {
													.pos v[221], v[222] .center
														.scale v[225]
														.trans 100
														.time 12
														.rgbs 100, 100, 100, 100
												}
											v[183] += v[184] >= v[1128] ? 2 : 1

										}

									}

							}

						}

				}

			} .else bl {

			}

		} .else bl {
			// "############	Collecting Resource################"
			@if victim_UnitType == 105 { // the target class is resource static
					
					// resource type
					// v[881] = v[711] + 4981 -> victim_static_resource_type...replaced

					// v[701] = v[707] + 4801
					// v[707] = v[707] + 4808

					// there's resource left in the source
					@if victim_SP >= 1 {
							v[371] = 0
							// If the target has farm flag
							// @if `v[Ptr20 * 300 + 4703] & 4096 {
							@if `victim_AgentBits & 4096 {
									// "does this farm belong to someone?"

									// TT1 = Ptr20 * 300 
									// TT1 += 4955
									// @if `v[TT1] != 0 && v[TT1] != Ptr19 {

									@if `victim_static_ownership != 0 && victim_static_ownership != Ptr19 {
										// then search ownerless other farm"
										// you should make nearest target search a function later.
											Temp1 = Ptr19 * v[1117] 
											Temp1 += 4700
											Ptr18 = Ptr19 - 1
											// "@Searching Nearest Enemy Process@"
											// "#Check Team ID"
											// "Access19 = Obj's Behavior	Access20 = Obj's target ID"
											Ptr20 = Temp1 + 18
											Ptr19 = Temp1 + 241
											/* "Temp2 = [3000 or 3200]# [team0, team1] this var works as a pointer to his/her enemy team list
												 Temp3 = Eye sight of this obj
												 Temp4 = Obj X
												 Temp5 = Obj Y
												 Temp7 = Temp2 Backup
												 Temp8 <- WTF IS THIS!?
												 Temp9 = X ptr"*/
											Temp2 = v[4533]
											Temp7 = Temp2
											Temp9 = Temp1 + 7
											// "ソートする数はここで総数を見て決定"
											Temp8 = v[Temp1 + 230]
											Temp7 = 0
											v[3401..3600] = 999999999
											v[534] = v[4579] + (v[1012] + 2) * Ptr18
											v[v[534]] = 999999999
											@doWhile v[Temp2] != 0 {
												// "Temp1 = [Taken Obj's ID] * 300 + 4707	Temp6 = Calculation List Ptr"
												Temp6 = Temp7 + 3601
													// "If the taken object from list is 0, set [[Temp6]] = 999999999"
													Temp1 = v[Temp2] * 300 
													Temp1 += 4703
													// "Get ObjectType of the target	TT10"
													@if `v[Temp1] & 4096 && v[Temp1 + 252] == 0 {
														Temp1 += 4
															v[Temp9].copy Temp4, 2
															Temp4 .sub v[Temp1], 2
															Temp4 .mul Temp4, 2
															v[Temp6] = Temp4 + Temp5
															// "#Check AI eye sight #The last 3 digits are used as ID"
															@if v[Temp6] < Temp8 {
																TT1 = v[534] + Temp7
																	v[TT1] = v[Temp6] * 1000 + v[Temp2]
																	Temp7 += 1

															}

													}
												Temp2 += 1

											}

										// "#Check Who's nearest"
										v[v[534]].sort Temp7
											Temp1 = Ptr19 * v[1117] 
											Temp1 += 4700
											@if v[v[534]] < 999999999 {
												v[v[534]..v[534] + Temp7 - 1] %= 1000
													v[Ptr20] = v[v[534]]
													TT1 = Ptr20 + 229
													v[TT1] = 1

											} .else bl {
												// "make worker idle"
												v[Ptr20] = 0
												TT1 = Ptr19 + 1
												v[TT1] = -1
												TT1 = Ptr20 + 229
												v[TT1] = 0
												Temp7 = 0

											}
										// "init counter and set amount"
											Temp6 = 0
											TT1 = v[534] + v[1012]
											Temp6.copy v[TT1], 2
											v[371] = 1
									

									// searching proc ends here
									} .else bl {
										// claim ownership (it will be renewed by a few frames tho)

										// kari.
										TT1 = Ptr20 * 300 
										TT1 += 4955
										v[TT1] = Ptr19

									}

							}

						// actual Process

						// if the resource static is a valid target 
						@if v[371] == 0 {

								// decrease resource left in static agent
								/*
								var1 = Ptr20
								var2 = 1
								var3 = -1
								@call .cev 2006
								*/
								val_sub(victim_SP,N1)


								// increase resource carried by the worker
								var1 = Ptr19
								var2 = 1
								var3 = 1
								@call .cev 2006
								


								// TT1 = ptr to maxSP...
								TT1 = Ptr19 * 300 
								TT1 += 4807
								v[TT1].copy TT2, 2

								// ptr to the job type
								Ptr13 = Ptr19 * 300 
								Ptr13 += 4947

								// "check job"
								TT18 = v[Ptr13]
								v[Ptr13] = victim_static_resource_type + 1

								// if the assigned job is different from the last job...
								TT1 += 1
								@if v[Ptr13] != TT18 { 
									@if v[TT1] > 0 {
										func_change_player_resource(v[700],TT18,v[TT1]) // store what they had
									}
									// and then init resource in worker hand
									v[TT1] = 0
								}

								// in screen
								@if `victim_AgentBits & AgentBits_FLAG_Drawn_in_screen {
									// "Food"
									@if victim_static_resource_type == 0 {
										@if v[182] <= 0 {
												v[182] += 1
												// "#########################"
												v[472] = divmul(23, 100, v[2216])
												v[473] = rnd(90, 120)
												v[474] = divmul(v[607] + v[1001], v[1281], 50)
												@cmd 11550, "misc\farming", .args v[472], 3
												// "#########################"

										}

									} .else bl {
										// "Wood"
										@if victim_static_resource_type == 1 {
											@if v[182] <= 0 {
													v[182] += 1
													// "#########################"
													v[472] = divmul(23, 100, v[2216])
													v[473] = rnd(90, 120)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													@cmd 11550, "misc\timber", .args v[472], 3
													// "#########################"

											}

										} .else bl {
											// "Mining"
											@if v[182] <= 0 {
													v[182] += 1
													// "#########################"
													v[472] = divmul(23, 100, v[2216])
													v[473] = rnd(80, 110)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													@cmd 11550, "misc\mining", .args v[472], 3
													// "#########################"

											}

										}

									}

								}

							// use SP as a counter for gathered resource
							@if TT3 >= TT2 {
									v[TT1] = 0
									// get worker's Meta Team from AEB
									get_AEB_element_wo_ptr(Ptr19,__id(Temp10),AgentExBuffer_SLOT_MetaTeam)

									// ptr for resource slot, need to be changed
									TT19 = v[4575] + min(victim_static_resource_type + 1, 4) + 40 * v[700]
									v[240] = v[496] * v[1129]
									v[240] += v[1130]
									v[240] = max(v[TT19], v[240])
									v[TT19] += 10 // add 10 at least?

									// "Food"
									@if victim_static_resource_type == 0 {
										// "Rurikia-Vorshch"
										v[TT19] += v[822] == 9 ? 1 : 0

									} .else bl {
										// "Wood"
										@if victim_static_resource_type == 1 {
												// wood tech1
												v[TT19] += v[2409 + Temp10] & 4 ? 1 : 0
												// wood tech2
												v[TT19] += v[2409 + Temp10] & 8 ? 1 : 0

										} .else bl {
											// "Gold"
											@if victim_static_resource_type == 3 {
												// alchemy
												v[TT19] += v[2409 + Temp10] & 0x20000 ? 1 : 0

											} .else bl {
											// stone

											}

										}

									}

								// "set TT2 as a Pointer for recording amount of gathered resources"
									TT2 = 2524 + victim_static_resource_type
									// 
									v[TT2] += s[498] == 1 ? 12 : 10
									v[TT2] += s[445] == 1 ? 3 : 0

									// "Imperials"
									@if v[822] == 1 {
											// "Decadence"
											v[TT19] -= v[2503] >= 12 ? 1 : 0
											// 
											v[TT19] -= v[2503] >= 24 ? 1 : 0

									}

								// "Dragons"
								@if v[822] == 3 {
										// "ToolTech"
										v[TT19] += v[2406 + Temp10] & 0x20 ? 2 : 0
										// "Limitation"
										v[TT19] = min(v[TT19], v[240])

								}

								// refresh resource window
								func_refresh_resource_window()
								// @call .cev 84

							}

						// save back target data
						victim_AgentType.copy v[Ptr2],110 // kari, can be replaced with agent_Basic_Array_size

						}

					} .else bl {

						// need save back proc, but before putting it you have to refactor the entire resource collecting proc.
						force_agent_to_be_idle(Ptr19,EXTRACT_FLAG_Data_extracted)

						// there's no resource left in the static agent...
						@if victim_UnitID == 12 { // fruits
							// "Remove from UnitList"
							var1 = Ptr20
								var2 = 11
								@call .cev 1896
								v[305..306] = Ptr20 * 300
								Temp6 += 4805
								Temp5 += 4806
								v[Temp5] = 0
								// "309 = ID	306 = ActionState"
								// "-1を死体とする"
								// "ObjIDを死体に変える"
								v[331] = v[Ptr18]
								v[Ptr18] = s[302] == 1 ? 0 : 0
								// "ActionStateを死体に変える"
								Temp6 += 4943
								v[Temp6] = -1
								Temp11 += 4700 + 2
								Temp7 = v[Temp11]
								Temp7 -= 1
								Temp11 += 5
								Temp5 = v[Temp11]
								Temp12 += 4700 + 8
								Temp6 = v[Temp12]
								// "移動"
								v[204] -= 1

						}

					}

			} .else bl {

				// "############	Constructing################"
				@if v[v[702]] == 104 {
					agent_aa_construction()
				} .else bl {
					v[371] = v[v[702]] >= 101 ? 1 : 0
						v[371] += v[v[702]] == 5 ? 1 : 0
						@if v[371] >= 1 {
							@if v[300002] >= 2 {
								v[705] = v[702] + 3
									v[706] = v[705] + 1
									@if v[v[705]] > v[v[706]] {
										// "＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃	Repairing	＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃"
										@if `s[Ptr19 + 500] == 1 {
											@if v[181] <= 2 {
												v[182] += 1
													v[607] = v[711] + 4707
													v[v[607]].copy v[607], 2
													// "#########################"
													v[472] = divmul(65, 100, v[2216])
													v[473] = rnd(140, 150)
													v[474] = divmul(v[607] + v[1001], v[1281], 50)
													// "need moar metalic features within the sound"
													@cmd 11550, "blow7", .args v[472], 3
													// "#########################"

											}
											// "#Dust Particle Effect"
											@loop v[1017] .dst Temp20 {
												v[244] %= v[1199]
													TT11 = v[244] * 50 + v[1198]
													@if v[TT11] <= 1 {
														// "まず清掃"
														v[1301].copy v[TT11], 50
															// "ポインタセット開始"
															// "設定"
															v[TT11] = 1
															// "500F"
															v[TT11 + 49] = 3
															// "Set itself"
															v[TT11 + 3] = 160
															// "普通にアニメ"
															TT1 = TT11 + 6
															v[607].copy v[TT1], 2
															// "仕上げに登録消す"
															s[141].off
															v[244] += 1
															@break

													}
												v[244] += 1

											}


										}
										v[300002] -= 2
											@call .cev 84
											// "ADを取得"
											Temp1 = -v[Ptr19 * v[1117] + 4961]
											// "ARかMRか取得"
											Temp2 = -2
											// "AABits"
											var9 = 0
											v[421] = 130
											@call .cev 40

									}

							}
							v[Ptr19 * 300 + 4947] = 6

						}

				}

			}

		}
}

__fn agent_aa_construction {
	v[421] = 100
		// "Access19 = AttackerObjectID 0~	Access20 = TargetObjectID 1~	Access18 = ObjTypeチェックPtr"
		v[607] = v[711] 
		v[607] += 4707
		v[v[607]].copy v[607], 2
		v[843] = Ptr19 * 300
		v[843] += 4943
		v[v[843]] = 0
		// "#assign job building"
		v[v[843] + 4] = 5

		// in screen
		@if `victim_AgentBits & AgentBits_FLAG_Drawn_in_screen {
			@if v[181] <= 2 {
				v[182] += 1

					// what to be built is farm
					@if victim_static_unit_to_be_built == 802 {
						v[472] = divmul(65, 100, v[2216])
							v[473] = rnd(70, 100)
							v[474] = divmul(v[607] + v[1001], v[1281], 50)
							@cmd 11550, "misc\farming", .args v[472], 3

					} .else bl { // or not
						v[472] = divmul(65, 100, v[2216])
							v[473] = rnd(140, 150)
							v[474] = divmul(v[607] + v[1001], v[1281], 50)
							@cmd 11550, "blow7", .args v[472], 3

					}

			}

			// "set Dust Particle Effect"
			@loop v[1017] .dst Temp20 {
				v[244] %= v[1199]
					TT11 = v[244] * 50 
					TT11 += v[1198]
					@if v[TT11] <= 1 {
						// "まず清掃"
						v[1301].copy v[TT11], 50
							// "ポインタセット開始"
							// "設定"
							v[TT11] = 1
							// "500F"
							v[TT11 + 49] = 3
							// "Set itself"
							v[TT11 + 3] = 160
							// "普通にアニメ"
							TT1 = TT11 + 6
							v[607].copy v[TT1], 2
							// "仕上げに登録消す"
							s[141].off
							v[244] += 1
							@break

					}
				v[244] += 1

			}
		}

		/*
		 * AoE2 building time calculation? (source is reddit so it's not serious)
		 * construction time = t/(0.67 + 0.33n)
		 * where t is the time it takes 1 builder to build the building, and n is the number of builders.
		 * DIS design intends easier and casual economics than classic RTS, but simple addition might break game impression...
		 */

		// "ADを取得"
		@if agent_UnitType == UNIT_CLASS_WORKER {
			v[709] = v[843] - 134
			Temp1 = v[v[709]]
		}.else bl{
			// temporary branch for possible future combat builder
			Temp1 = 10
		}


		val_asg(var1,victim_Static_Assigned_worker_counter)
		val_asg(var2,Temp1)
		var2 >= 2 // 25% of build power
		var2 *= var1 > 2 // efficiency decreases if the foundation gets 4 times in a second
		val_sub(Temp1,var2)
		Temp1 = max(1,Temp1) // at least 1 construction point is assured
		

		/* "Access19 = AttackerObjectID 1~ +4700 	Access20 = TargetObjectID 1~ +4700	Access18 = ObjTypeチェックPtr	temp1 = 建築量"*/
		val_add(victim_HP,Temp1)
		val_add(victim_Static_Assigned_worker_counter,N1)

		// building complete
		@if victim_MaxHP <= victim_HP {
			Temp6 = Ptr20 * 300
			Temp6 += 4805
			v[Temp5] = v[Temp5] + Temp1
			Temp5 = Ptr20 * 300 + 4802
				@if v[Temp5] == 104 {
						Temp5 += 178
						v[371] = v[205] < v[1080] ? 1 : 0
						// "生産施設は例外的に張りなおせる"
						//???? WTF
						v[371] += v[Temp5] == 802 ? 1 : 0
						v[371] += v[Temp5] == 809 ? 1 : 0
						v[371] += v[Temp5] == 810 ? 1 : 0
						v[371] += v[Temp5] == 835 ? 1 : 0
						v[371] += v[Temp5] == 834 ? 1 : 0
						Temp5 -= 178
						@if v[371] >= 1 {
							v[2538] -= 1
								// "#建築現場を消去"
								/* "Access19 = AttackerObjectID
									 Access20 = TargetObjectID
									 Access18 = ObjTypeチェックPtr
									 誤作動防止" */

								@if Ptr20 > 0 {
									// "#建築現場を消去"
									Temp5 = Ptr20 * 300
										Temp5 += 4806
										v[Temp5] = -1
										// "309 = ID	306 = ActionState"
										// "-1を死体とする"
										// "ObjIDを死体に変える"
										v[331] = v[Ptr18]
										v[Ptr18] *= -1
										// "ActionStateを死体に変える"
										Temp6 += 4943
										v[Temp6] = -1
										Temp11 += 4702
										Temp7 = v[Temp11]
										Temp7 -= 1
										Temp11 += 5
										Temp5 = v[Temp11]
										Temp12 += 4708
										Temp6 = v[Temp12]
										// "移動"
										Temp7 += 1
										// "Remove from UnitList"
										var1 = Ptr20
										var2 = 11
										// remove from foundation(basement) list
										@call .cev 1896
										// "Team Get"
										Temp8 += 4800
										Temp8 = v[Temp8] % 3
										@if Temp8 == 0 {
											Temp9 = v[1145]

										} .else bl {
											Temp9 = v[1146]

										}

									@loop v[1012] {
										@if v[Temp9] == Ptr20 {
											v[Temp9] = 0
												@break

										}
										@if v[Temp9] == 0 {
											@break

										}
										Temp9 += 1

									}

									@if Temp8 == 0 {
										Temp9 = v[1145]

									} .else bl {
										Temp9 = v[1146]

									}
									v[Temp9].sortDescending v[1012]
										v[204] -= 1

								}
							Temp5 = Ptr20 * 300
								Temp5 += 4707
								v[Temp5].copy v[252], 2
								Temp5 += 93
								v[251] = v[Temp5]
								Temp5 += 180
								v[378] = 0

								// check flag for resource building... 
								Temp15 = 0
								@if v[Temp5] >= 1 {
									TT17 = v[Temp5]
										Ptr14 = Ptr20
										// "Avoid Cohort setting"
										@if v[251] == 0 {
											v[258] = 0
												v[2521] += 1

										}

									// use the same ID as the foundation
									v[201] = Ptr20 - 1
										@call .cev v[Temp5]
										Temp15 = reg3 == 105 ? 1 : 0
										// ""
										Temp5 = 0
										Temp2 = v[1145]
										Ptr10 = Ptr14
										@doWhile v[Temp2] >= 1 {
											Temp3 = v[Temp2] * 300
												Temp4 = Temp3 + 4802
												@if v[Temp4] == 9 {
													Ptr15 = Temp3 + 4718
														@if v[Ptr15] == Ptr14 {
															Temp5 = Temp3 + 4947
																// "#assign building job?"

																@if reg3 == 105 { // target was resource type building
																	v[Ptr15] = reg1
																		@if reg2 == 2 { // farm 
																			v[378] = 0
																				v[22..23] = 0

																		} .else bl {
																			v[378] = 1

																		}

																} .else bl {
																	v[Temp5] = 0
																		v[Temp3 + 4942] = -1

																}

														}

												}
											Temp2 += 1

										}

								}

							// "continue buliding"
							@if v[378] == 0 {
								// "atleastthere's one"
								@if v[v[4561]] > 0 {
									// "save last target to acc10"
									@loop v[1012] .dst Temp1 {
										// "Check Player Team List"
										// "Check AllyTeam List"
										Ptr20 = Temp1 + v[1145 + v[251] % 3]
											@if v[Ptr20] >= 1 {
												Ptr19 = v[Ptr20] * 300
													Ptr19 += 4700
													@if `v[Ptr19 + 102] == 9 {
														@if `v[Ptr19 + 18] == Ptr10 {
															@if Temp15 == 0 {
																Temp1 = Ptr19
																	Ptr19 = v[Ptr20]
																	Ptr18 = Ptr19 - 1
																	// "@Searching Nearest Enemy Process@"
																	/* "Access19 = Obj's Behavior
																		 Access20 = Obj's target ID"*/
																	Ptr20 = Temp1 + 18
																	Ptr19 = Temp1 + 241
																	// "#Check Team ID"
																	/* "Temp2 = [3000 or 3200]# [team0, team1] this var works as a pointer to his/her enemy team list
																		 Temp3 = Eye sight of this obj
																		 Temp4 = Obj X
																		 Temp5 = Obj Y
																		 Temp7 = Temp2 Backup
																		 Temp8 <- WTF IS THIS!?
																		 Temp9 = X ptr"*/
																	Temp2 = v[4561]
																	Temp7 = Temp2
																	Temp9 = Temp1 + 7
																	// "ソートする数はここで総数を見て決定"
																	Temp8 = v[Temp1 + 230]
																	Temp7 = 0
																	v[3401..3600] = 999999999
																	v[534] = v[4579] + (v[1012] + 2) * Ptr18
																	v[v[534]] = 999999999
																	@doWhile v[Temp2] != 0 {
																		// "Temp1 = [Taken Obj's ID] * 300 + 4707	Temp6 = Calculation List Ptr"
																		Temp6 = Temp7 + 3601
																			// "If the taken object from list is 0, set [[Temp6]] = 999999999"
																			Temp1 = v[Temp2] * 300 + 4701
																			// "Get ObjectType of the target	TT10"
																			Temp1 += 6
																			v[Temp9].copy Temp4, 2
																			Temp4 .sub v[Temp1], 2
																			Temp4 .mul Temp4, 2
																			v[Temp6] = Temp4 + Temp5
																			// "#Check AI eye sight#The last 3 digits are used as ID"
																			@if v[Temp6] < Temp8 {
																				TT1 = v[534] + Temp7
																					v[TT1] = v[Temp6] * 1000 + v[Temp2]
																					Temp7 += 1

																			}
																		Temp2 += 1

																	}

																// "#Check Who's nearest"
																v[v[534]].sort Temp7
																	@if v[v[534]] < 999999999 {
																		v[v[534]..v[534] + Temp7 - 1] %= 1000
																			v[Ptr20] = v[v[534]]
																			v[Ptr20 + 229] = 5

																	} .else bl {
																		v[Ptr20 + 229] = 0
																			Temp7 = 0

																	}
																// "init counter and set amount"
																Temp6 = 0
																	TT1 = v[534] + v[1012]
																	Temp6.copy v[TT1], 2

															}.else bl{
																Temp15 = 0

															}

														}
													}

											} .else bl {
												@break

											}

									}


								}.else bl { // no foundation anymore

									@loop v[1012] .dst Temp1 {
										// "Check Player Team List"
										// "Check AllyTeam List"
										Ptr20 = Temp1 + v[1145 + v[251] % 3]
											@if v[Ptr20] >= 1 {
												Ptr19 = v[Ptr20] * 300
													Ptr19 += 4700
													@if `v[Ptr19 + 102] == 9 {
														TT1 = Ptr19 + 18
															@if v[TT1] == Ptr10 {
																@if Temp15 == 0 {
																	// target
																	v[TT1] = 0
																		// move order
																		TT1 = Ptr19 + 242
																		v[TT1] = -1
																		// job type
																		TT1 = Ptr19 + 247
																		v[TT1] = 0


																		// make current position its destination 
																		TT1 = Ptr19 + 7
																		TT2 = Ptr19 + 41
																		v[TT1].copy v[TT2], 2

																}.else bl{
																	Temp15 = 0

																}

															}

													}

											} .else bl {
												@break

											}

									}



								}

							}

						} .else bl {

						}

				}

		// building is not completed
		} .else bl {
			@if victim_static_unit_to_be_built != 802 { // not farm
				victim_AgentBits &= ~AgentBits_STATIC_FLAG_Ignore_morton
				// save back target data
			}
			victim_AgentType.copy v[Ptr2],110 

		}
	v[421] = 100


}


cev[39], .name("WorkerAct:putting build foundation"), {

	v[11..12] *= 10000
		@call .cev 1999
		reg2 -= 1
		@map.getTerrain .pos reg1, reg2 .dst TT10
		v[40] = TT10 < 18 && TT10 != 5 ? 1 : 0
		@comment "#Data get"
		var4 = v[88] + 800
		@if var4 >= 9 {
			s[151].on
				@call .cev var4
				s[151].off
				v[31].copy v[497], 4
				TT1 = v[300001] >= v[31] ? 1 : 0
				TT1 += v[300002] >= v[32] ? 1 : 0
				TT1 += v[300003] >= v[33] ? 1 : 0
				TT1 += v[300004] >= v[34] ? 1 : 0
				v[40] -= TT1 != 4 ? 1 : 0
				@comment "＃＃＃＃＃＃＃＃＃＃				地形チェック				＃＃＃＃＃＃＃＃＃＃"
				@if v[91] == 1 {
					v[40] += TT10 == 18 && v[91] & 1 ? 2 : 0

				} .else bl {
					TT10 -= 1
						TT10 = 1 << TT10
						v[39] = v[91] != 0 ? v[91] : TT10
						TT10 &= v[39]
						v[40] += TT10 > 0 ? 1 : 0

				}
			@comment "＃＃＃＃＃＃＃＃＃＃				地形チェック終				＃＃＃＃＃＃＃＃＃＃"
				@comment "#V357以下にコピー"
				var1.copy TT17, 4
				@comment "#弾の判定使いまわし"
				v[252].copy v[381], 2
				var1.copy v[383], 2
				@comment "#範囲攻撃処理分岐 #0なら当たり判定を持たない"
				MousePtr_x.copy var1, 2
				var1 .sub TT17, 2
				@call .cev 2002
				TT11 = reg1
				MousePtr_x.copy var1, 2
				var1 .add TT17, 2
				@call .cev 2002
				TT1 = TT11
				TT2 = reg1
				@comment "TT1 = upper left morton 				TT2 = bottom right morton				TT5 = shift num"
				TT3 = TT1 ^ TT2
				@comment "00ではない一番上位の空間にしょぞく"
				@comment "#mask with 11000000"
				@comment "#mask with 110000"
				@comment "#mask with 001100"
				@comment "#mask with 000011"
				TT5 = TT3 & 192 ? 8 : TT3 & 48 ? 6 : TT3 & 12 ? 4 : TT3 & 3 ? 2 : 0
				@comment "#mask end"
				TT6 = TT2 >> TT5
				@comment "#mask end"
				v[340] = v[4545 - TT5 / 2]
				v[340] += TT6 * v[1004]
				v[327] = v[v[4551 - TT5 / 2] + TT6]
				@comment "STATIC"
				v[536] = v[4533]
				@if v[35] == 1 {
					@comment "Walltype"
						@while v[v[536]] != 0 {
							Temp12 = v[536]
								Temp11 = v[Temp12] * v[1117] + 4701
								Temp11 += 2
								@comment "Walltype"
								@if `!(v[Temp11] & 16 | v[Temp11 + 97] != v[251]) {
									@comment "当たり判定"
										Temp11 += 4
										v[Temp11].copy v[327], 5
										@comment "とりあえず矩形判定"
										TT1 = v[381] - v[327]
										TT1 = abs(TT1)
										TT2 = v[383] + v[330]
										TT2 -= 4
										@if TT1 < TT2 {
											TT1 = v[382] - v[328]
												TT1 = abs(TT1)
												TT2 = v[384] + v[331]
												TT2 -= 4
												@if TT1 < TT2 {
													@comment "ＨＩＴ！"
														v[40] = 0
														@break

												}

										}

								}
							@comment "++"
								v[536] += 1

						}


				} .else bl {
					@while v[v[536]] != 0 {
						Temp12 = v[536]
							Temp11 = v[Temp12] * v[1117] + 4701
							@comment "当たり判定"
							Temp11 += 6
							v[Temp11].copy v[327], 5
							@comment "とりあえず矩形判定"
							TT1 = v[381] - v[327]
							TT1 = abs(TT1)
							TT2 = v[383] + v[330]
							TT2 -= 4
							@if TT1 < TT2 {
								TT1 = v[382] - v[328]
									TT1 = abs(TT1)
									TT2 = v[384] + v[331]
									TT2 -= 4
									@if TT1 < TT2 {
										@comment "ＨＩＴ！"
											v[40] = 0
											@break

									}

							}
						@comment "++"
							v[536] += 1

					}


				}
			@if v[2538] <= 40 {
				@if v[40] >= 2 {
					v[300001] .sub v[497], 4
						@call .cev 84
						TT17.copy var1, 4
						@comment "#"
						@call .cev 804
						v[472] = divmul(90, 100, v[2216])
						@se.play "Earth7" .opt v[472], 150, 50


						
						@comment "#"
						v[202] = Adr_PlayerSelectList_Head
						@loop .inf() {
							@if v[v[202]] == 0 {
								@comment "とぎれた"
									@break

							}
							@if v[202] >= v[1007] {
								@comment "とりあえず40体までしか選択できない"
									@break

							}
							@comment "配列ゲット"
								Temp1 = v[v[202]] * 300
								Temp1 += 4700
								v[601] = Temp1 + 1
								Ptr20 = Temp1 + 242
								Ptr19 = Temp1 + 19
								Ptr18 = Temp1 + 20
								Ptr17 = Temp1 + 18
								Ptr16 = Temp1 + 241
								Ptr15 = Temp1 + 242
								v[Temp1 + 34] &= AI_routine_bits_MASK_for_initilizing_pathfinding
								v[Temp1 + 34] |= AI_routine_bits_FLAG_RayCast // set raycast anyway
								@comment "処理開始"
								v[Ptr16] = v[Ptr16] != 4 ? 2 : 4
								@comment "#Set 移動するX"
								v[Ptr19] = MousePtr_x
								@comment "#Set 移動するY"
								v[Ptr18] = MousePtr_y
								@comment "Reserve Set"
								v[Ptr15] = 2
								@if `v[Temp1 + 18] > 0 && v[v[Temp1 + 18] * 300 + 4802] == 104 {
									TT2 = Temp1 + 41
										v[Ptr19].copy v[TT2], 2
										@loop 6 .dst TT3 {
											TT1 = Temp1 + 51 - TT3 * 2
												TT2 = Temp1 + 53 - TT3 * 2
												v[TT1].copy v[TT2], 2

										}

									TT2 = Temp1 + 43
										v[TT2].copy TT2, 2
										v[Temp1 + 55] -= 1

								} .else bl {
									@comment "#Set Target"
										v[Ptr17] = v[Temp1 + 102] == 9 ? reg1 : v[Ptr17]

								}
							@if s[1] .isOn() {
								Ptr13 = Temp1 + 247
									v[Ptr13] = 5

							}
							@comment "処理終わり"
								v[202] += 1

						}

					v[40] = 0

				} .else bl {
					v[472] = divmul(80, 100, v[2216])
						@se.play "Buzzer3" .opt v[472], 100, 50
						v[40] = -1

				}

			} .else bl {
				@call .cev 1918
					v[472] = divmul(80, 100, v[2216])
					@se.play "Buzzer1" .opt v[472], 100, 50
					@call .cev 1924
					TT1 = 2
					v[601] = 1
					@comment "#call quickstrings"
					var1 = 199
					@call .cev 1890
					@pic[v[1155]].strpic {
						"\c[8]\t[3001]"
							.pos TT1, v[1126] .bottomLeft
							.size 0, 0            .chromakey 1
							.scale 100
							.trans 30
							.rgbs 100, 100, 100, 100
							.font Font_UI, Font_UI_size
							.spacing 0, 4
							.skin "" .nobg .noframe .noPadding
							.mapLayer 8
							.eraseWhenTransfer
							.affectedByFlash
							.affectedByShake
					}
				@call .cev 1925
					@comment "#ACHIEVEMENT"

			}

		}
}
