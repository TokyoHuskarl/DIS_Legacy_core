#include "./../headers/header_common.tpc"
#include "./../headers/header_agent.tpc"
#include "./../headers/header_mission.tpc"
#include "./../headers/header_picture_edit.tpc"

//CEV SightSystemPL
cev .id(13), .name("SightSystem:Player") , .parallel , .cond(Const_Is_SightSystem_On), {   
	@comment "module_RTS_sightsystem_general.tpc"
	v[161].copy v[2923], 2
	v[2923] .sub v[1115], 1
	v[2924] += 8 
	v[2924] -= v[1002] / 2
	v[2923].copy v[2921], 2
	
	// set 80 to Temp3 and Temp4 just for preparation and next loop.
	v[__id(Temp3)..__id(Temp4)] = 80

	v[2923].div Temp3,2  // v[2923..2924] /= 80
	v[2923] += v[2924] * v[2927]

	v[2921].mod Temp3,2 // v[2921..2922] %= 80

	v[2931] = v[4527] + v[2923]
	TT6 = muldiv(12, v[1001], 800)

	TT2 = v[4525]

	// set flag const array on expanding temp - if MP manages to apply const with array operand this will be immediately fixed since retarded
	// ACHTUNG


	// set consts for loop below
	v[4001].repeat 7,16 // v[4001..4016] = 7

	@loop v[4526] .dst TT1 {
			TT8.repeat TT1,2
	    val_mod(TT8,TT6) // TT8 = TT1 % TT6
	    val_div(TT9,TT6) // TT9 = TT1 / TT6

	    TT5 = v[2931] + TT8
	    // TT5 += TT9 * v[2927]
			TT9.copy TT10,1
			val_mul(TT10,v[2927])
			val_add(TT5,TT10)

	    // TT10 = TT10 & 1 ? 100 : v[TT5] & 2 ? 50 : 0
			TT10 = ((v[TT5] & 3) << 5) | ((v[TT5] & 2) << 1) // replaced for fast proc :D
			
			/*
	    TT3 = 80 * TT8
	    TT4 = 80 * TT9
			*/

			Temp3.copy TT3,2
			TT3.mul TT8,2

	    TT3 .sub v[2921], 2
	    @pic[TT2].move {
				.pos TT3, TT4 .topLeft
				.scale 100
				.trans TT10
				.time 0
				.rgbs 100, 100, 100, 100
	    }

	    increment_var(TT2) // TT2 += 1
	    
	}

	TT1 = RTS_WORLD_passed_frame % 2 // per 2f
	def Const_AgentMetaTeam_HEAD = Const_AgentMetaTeam_begin - 1 
	@if TT1 == 0 {

		v[536] = v[4532]
		v[__id(Temp5)..__id(Temp6)] = 5 // const array for next loop
		@while v[v[536]] > 0 {

				get_metateam_for_sightproc()
				TT1 = 2000 + v[v[536]]

				@if v[TT2] == 0 { //NOT EXPERIMENTAL
				//@if reg1 == 0 { // EXPERIMENTAL - MetaTeam of the Agent is 0 - player
					s[TT1].on

				} .else bl {
					checkinsight_agent_non_ally({
						s[TT1].off

						// uh oh, this looks retarded
						@if `(v[Temp2] = v[v[4527] + agent_MapX + agent_MapY * v[2927]] & 1 ? 100 : v[Temp2] - 1) > 0 {
								s[TT1].on
								
						}
						
					})
				}
				//++
				increment_var(v[536]) //v[536] += 1
				
		}

		//Static
		v[536] = v[4533]
		@while v[v[536]] != 0 {

				__if DIS_EXPERIMENTAL == -1 {
					macro_get_agent_MetaTeam_into_var(v[v[536]],reg1) // AEBA
				}.else bl {
					// v[401] = v[v[536]] - 1
					TT2 = Const_AgentMetaTeam_HEAD + v[v[536]]
				}

				TT1 = 2000 + v[v[536]]
				@if v[TT2] == 0 { //NOT EXPERIMENTAL
				// @if reg1 == 0 { // EXPERIMENTAL - MetaTeam of the Agent is 0 - player

					s[TT1].on
					
				} .else bl {

					v[401] = v[v[536]] - 1
					Temp1 = v[401] * v[1117] 
					Temp1 += 5258
					v[Temp1].copy v[858], 2
					Temp2 = v[4518] + v[401]
					//opt 28.4.23
					//get from saved slot for optimizing
					s[TT1].off
					@if `(v[Temp2] = v[v[4527] + v[858]  + v[859]  * v[2927]] & 1 ? 100 : v[Temp2]) > 0 {
						s[TT1].on
						Bool_Refresh_Static_Minimap.on //request refresh minimap static
					}

				}

				//++
				increment_var(v[536]) // v[536] += 1
				
		}
	}.else bl{
		v[536] = v[4532]
		v[__id(Temp5)..__id(Temp6)] = 5 // const array for next loop
		@while v[v[536]] > 0 {
				get_metateam_for_sightproc()
				@if v[TT2] != 0 { // check only non ally units
					checkinsight_agent_non_ally({
						
						ptr_sub(Temp2,N1)
						@if v[Temp2] > 0 {
							TT1 = 2000 + v[v[536]]
							s[TT1].on
						}
						
					})
				}
				//++
				increment_var(v[536]) //v[536] += 1
				
		}

		//Static
		v[536] = v[4533]
		@while v[v[536]] != 0 {

				__if DIS_EXPERIMENTAL == -1 {
					macro_get_agent_MetaTeam_into_var(v[v[536]],reg1) // AEBA
				}.else bl {
					// v[401] = v[v[536]] - 1
					TT2 = Const_AgentMetaTeam_HEAD + v[v[536]]
				}

				@if v[TT2] != 0 {
					checkinsight_agent_non_ally_static({
						//get from saved slot for optimizing
						TT1 = 2000 + v[v[536]]
						s[TT1].off
						@if `(v[Temp2] = v[v[4527] + v[858]  + v[859]  * v[2927]] & 1 ? 100 : v[Temp2]) > 0 {
							s[TT1].on
							Bool_Refresh_Static_Minimap.on //request refresh minimap static
						}
					})


				}

				//++
				increment_var(v[536]) // v[536] += 1
				
		}
	}

}

__fn get_metateam_for_sightproc {
	__if DIS_EXPERIMENTAL == -1 {
		macro_get_agent_MetaTeam_into_var(v[v[536]],reg1) // ATTENTION AEBA
	}.else bl {
		// v[401] = v[v[536]] - 1
		TT2 = Const_AgentMetaTeam_HEAD + v[v[536]]
	}
}

__fn checkinsight_agent_non_ally $switching {
	v[401] = v[v[536]] - 1
	TT1 = 2000 + v[v[536]]
	Temp1 = v[401] * v[1117] 
	val_add(Temp1,N5001) // Temp1 += 5001

	v[Temp1].copy agent_ObjectType, 27
	agent_MapX.div Temp5,2 // v[626..627] /= 5

	Temp2 = v[4518] + v[401]
 $switching
}


__fn checkinsight_agent_non_ally_static $switching {

					v[401] = v[v[536]] - 1
					Temp1 = v[401] * v[1117] 
					Temp1 += 5258
					v[Temp1].copy v[858], 2
					Temp2 = v[4518] + v[401]
					$switching

}

// Map FoW check
// Fow refresh
// Fow refresh

cev .id(14), .name("SightSystem:per4f") , .parallel , .cond(Const_Is_SightSystem_On), {
	@comment "module_RTS_sightsystem_general.tpc"
	@if s[20] .isOn() {
	    @wait 0
	    @if s[2] .isOff() {
				def minimapnode_sum = 100 * 100 // kari 
				// v[v[4527]..v[4527] + 100 * 100] &= -2 //~1
				v[buffer_for_pixel_information_head].repeat -2,minimapnode_sum
				v[v[4527]].and v[buffer_for_pixel_information_head],minimapnode_sum
				
				
	    }

	    // sight technologies
			defv SIGHTSYS_sight_teambonus =__id(Temp10)
	    // Temp10 = (v[2409] & 0x1000000 ? 1 : 0) + (v[2409] & 0x2000000 ? 1 : 0)
			SIGHTSYS_sight_teambonus = ((v[2409] >> 24) & 1) + ((v[2409] >> 25) & 1)
	    Ptr19 = v[1145]
			defv TT10copyTwin1 = __id(Temp16)
			defv TT10copyTwin2 = __id(TT10copyTwin1) + 1
	    @loop v[205] .dst v[325] { // you have to remake this proc

				// REMAKE PLAN
				// Check last sight start point (upper left) -> if it's the same as before, skip check process 
				// Do request-check proc only outline of each sight -> if once you both of request flags are on, then skip all do request check
				// use Array operand to set |= 7
				// use max() on start point 
				// use min() on sight length in order not to let sight over map outline
				// this will obviously improve map sight system performance

				//Ptr19 = v[325] + v[1145] // pointer to agentid
				v[401] = v[Ptr19] - 1

				//Temp1 = v[401] * v[1117] 
				//Temp1 += 5000
				Ptr1 = v[401] * v[1117]
				val_add(Ptr1,N5001) // Ptr1 += 5001
				v[Ptr1].copy v[601], 300

				//@comment "Minions"
				//@comment "In sight?"
				// get tile accord
				v[626].copy TT16, 2
				// then convert into FoW XY
				v[356..357] /= 5

				
				// TT10 = actual sight range
				// if the agent has blind state (v[877] & 2), force its sight 0
				// agentsight + max((Height - ground0),0) + techbonus

				__if DIS_EXPERIMENTAL == -1 { // won't use this proc since proc speed is slower
					var1 = v[Ptr19]
					get_AEAB_element(var1,__id(TT2),AgentExBuffer_SLOT_BaseEyeSight) // get eyesight to TT2
					TT10 = v[877] & 2 ? 0 : TT2 + max(v[657] - v[504], 0) + SIGHTSYS_sight_teambonus
				}.else bl {
					TT10 = v[877] & 2 ? 0 : v[v[4528] + v[401]] + max(v[657] - v[504], 0) + SIGHTSYS_sight_teambonus
				}

				v[__id(TT10copyTwin1)..__id(TT10copyTwin2)] = TT10
			
				v[356].sub TT10copyTwin1,2 // v[356..357] -= TT10 

				// TT11 and TT12 are loop amount XY basically I guess?
				// v[351..352] = TT10 * 2 
				TT10copyTwin1.copy v[351],2
				v[351].mul N2,2
				v[351].add N1,2 // v[351..352] += 1

				// adjustments not to write where is out of the FoW memory range
				@if TT16 < 0 {
					val_add(TT11,TT16) // TT11 += TT16

					TT16 = 0
				}.else bl {
					TT20 = TT16 + TT11
					@if TT20 > v[2927] {
						TT20 = TT20 - v[2927]
						val_sub(TT11,TT20) // TT11 -= TT20 // check height
						
					}
				}

				@if TT17 < 0 {
					val_add(TT12,TT17) // TT12 += TT17
					TT17 = 0
				}.else bl {
					TT20 = TT17 + TT12
					@if TT20 > v[2928] {
						TT20 = TT20 - v[2928]
						val_sub(TT11,TT20) // TT11 -= TT20 // check height

					}
				}

				// ... is this really faster than before...? 

				// now TT1 is upper left point of FoW
				TT1 = v[4527] + TT16 
				TT1 += TT17 * v[2927]

				// now check if the Start point is different from last proc
				@if agent_saveFoWPoint != TT1 {
					
						//Check outline of sight rectangle

						// ACHTUNG check if map is completely revealed or not, if it's revealed already, change the value 6 into 4, you should set some var - since it'd improve performance

					__fn FoWManagement_SightOutlineCheck $breakflag {
						
						@if `(LEGV_FoWManagementFlags & $breakflag) != $breakflag {
							@if TT10 == 0 { // sight range is 0
								val_asg(TT20,TT1) // TT20 = TT1
								FoWManagementFlagProc($breakflag)

							}.else bl { // otherwise
								@loop 1 {

									// check upper line
									val_asg(TT20,TT1) // TT20 = TT1
									@loop TT11 {
										FoWManagementFlagProc($breakflag)
										increment_var(TT20) // TT20 += 1
										//TT20 += v[2927]
									}
									FoWOutlineBreak($breakflag)

									// check lower line
									TT20 = TT10 * 2
									val_mul(TT20,v[2927]) // TT20 *= v[2927]
									val_add(TT20,TT1) // TT20 += TT1 
									@loop TT11 {
										FoWManagementFlagProc($breakflag)
										increment_var(TT20) // TT20 += 1
									}
									FoWOutlineBreak($breakflag)

									// check left line
									TT13 = TT12 - 2
									TT14 = TT1 + v[2927]
									val_asg(TT20,TT14) // TT20 = TT14
									@loop TT13 {
										FoWManagementFlagProc($breakflag)
										val_add(TT20,v[2927]) // TT20 += v[2927]
										
									}
									FoWOutlineBreak($breakflag)

									// check right
									val_asg(TT20,TT14) // TT20 = TT14
									TT20 += TT11 - 2
									@loop TT13 {
										FoWManagementFlagProc($breakflag)
										TT20 += v[2927]
									}
									FoWOutlineBreak($breakflag)

								}
							}
						}

					}

					__fn FoWManagementFlagProc $flag {
						__if $flag == 6 {
							LEGV_FoWManagementFlags |= !(v[TT20] & 2) ? 6 : (~v[TT20] & 4) // !(v[TT20] & 2) ? 6 : (!(v[TT20] & 4) ? 4 : 0)
						// }.elif $flag == 4 {
							// LEGV_FoWManagementFlags |= ^(v[TT20] & 4)
						}.else bl {
							LEGV_FoWManagementFlags |= ~v[TT20] & 4
							// LEGV_FoWManagementFlags |= !(v[TT20] & 4) ? $flag : 0
						}
					} // simple as

					__fn FoWOutlineBreak $flag {
							__if $flag == 6{
								@if `(LEGV_FoWManagementFlags & $flag) == $flag {@break}
							}.else bl {
								@if `LEGV_FoWManagementFlags & $flag {@break}
							}
					}



							// These functions expect only 6 or 4 as their argv[0] for now.


						@if `LEGV_FoWManagementFlags & FoWFlag_Map_PreRevealed {
							FoWManagement_SightOutlineCheck(4)
						}.else bl {
							FoWManagement_SightOutlineCheck(6)
						}

						

				}
				

				TT20 = TT1 
				@loop TT12 { // [sight_range] |= 7
					v[TT20].or v[4001], TT11 // 7 is set in expanding temp array
					val_add(TT20,v[2927]) // TT20 += v[2927] 
				}

				

				agent_saveFoWPoint = TT1 // save FoWpoint
				v[601].copy v[Ptr1], 300 // beware

				
				increment_var(Ptr19) // Ptr19 += 1 //++
	    }
	    
	    @wait 0
	    TT20 = v[4527]
	    @loop v[2928] {
				@loop v[2927] {
						@if `(v[TT20] & 5) == 4 {
							LEGS_Request_Refresh_FoW.on
							v[TT20] &= -5 //~4
							
						}
						increment_var(TT20) // TT20 += 1
						
				}
				
				
	    }
	    
	    @wait 0

	    //@if LEGS_Request_Refresh_Obs .isOn() {
        @if `LEGV_FoWManagementFlags & 2 { //EXPERIMENTAL
					@if s[78] .isOn() {
						@if s[299] .isOff() {
							@pic[v[2932]].getInfo .cewh .baseRect TT1, TT1, TT2, TT3
							@pic[v[2932]].show {
								"ui\minimapback"
								.pos v[1282], v[1283] .topLeft
								.chromakey 1
								.scale 100
								.trans 0
								.rgbs 100, 100, 100, 100
								.mapLayer 9
								.eraseWhenTransfer
							}

							// use Array operand!
							TT10 = v[1277] * v[1276] // index
							val_sub(TT10,N1) // -= 1 
							v[ptr_null].copy v[v[4563]],TT10 // v[v[4563]..v[4563] + v[1277] * v[1276]] = 0
							@loop v[1276] .dst TT4 {
								// tempA = TT4 * v[1277] 
								// tempB = v[4802] + TT4 ...no need to calc these in inner loop
								@loop v[1277] .dst TT3 {
										v[v[4563] + TT3 + TT4 * v[1277]] = v[v[4527] + v[v[4803] + TT3] + v[v[4802] + TT4] * v[2927]] & 2 ? 0x0 : 0xFF111111
								
								}
								
								
							}
							
							@pic[v[2932]].setPixel .xywh 0, 0, v[1277], v[1276] .src v[748949]
							
						}
						
					}
					//LEGS_Request_Refresh_Obs.off
					LEGV_FoWManagementFlags &= ~2
					
	    }

	    //@comment "##################"
	    @wait 0
	    //@if LEGS_Request_Refresh_FoW .isOn() {

			// maybe we don't have to
	    @if `LEGV_FoWManagementFlags & 4 { // EXPERIMENTAL
				@if s[78] .isOn() {
						v[331] = v[2932] + 1
						@pic[v[331]].show {
							"ui\minimapback"
							.pos v[1282], v[1283] .topLeft
							.chromakey 1
							.scale 100
							.trans 50
							.rgbs 100, 100, 100, 100
							.mapLayer 9
							.eraseWhenTransfer
						}
						// use Array operand!
						v[v[4563]..v[4563] + v[1277] * v[1276]] = 0
						@loop v[1276] .dst TT4 {
									// tempA = TT4 * v[1277] 
									// tempB = v[4802] + TT4 ...no need to calc these in inner loop
							@loop v[1277] .dst TT3 {
									v[v[4563] + TT3 + TT4 * v[1277]] = v[v[4527] + v[v[4803] + TT3] + v[v[4802] + TT4] * v[2927]] & 1 ? 0x0 : 0xFF111111
									
							}
							
							
						}
						
						@pic[v[331]].setPixel .xywh 0, 0, v[1277], v[1276] .src v[748949]
						
				}

				//LEGS_Request_Refresh_FoW.off
				LEGV_FoWManagementFlags &= ~4
				
	    }
	    @if s[314] .isOn() {
				@wait 1
		
	    }
	    
	}
}
