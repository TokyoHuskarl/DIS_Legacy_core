// loaded by mission_general?


def {
	PATH_cache_ui = __str("..\\Picture\",PATH_ui_dir,"preload_setting")
	PATH_cache_numbers = __str("..\\Picture\",PATH_pic_numdir,"preload_setting")
	PATH_click_agent_indicator = __str("..\\Picture\","menu_pointer")
	// PATH_click_agent_indicator = __str(PATH_ui_dir,"\thing_indicator")
 
}


// INIT MISSION - this one is called whenever you open new mission
__fn CEV_MISSION_INIT {
	
	v[ptr_null] = 0 // allocate memory

	// LOAD JS LIBRARIES
		load_jslib("noisejs/perlin.js") // load library
		// execute_js("jslib\noisejs\perlin.js") // load mapgenerator API 
		execute_js("DIS_mapgenerator.js") // load mapgenerator API
	// 

	// @comment "init map id"
	t[751] .asg ""
	t[752] .asg ""
	log_start("Initializing Mission")
	eval_js("RTS.init()") // js RTS object init
	v[1080] = v[1012]
	s[18].off
	s[43].on
	@sys.gameOpt .runWhenInactive
	// @comment "init BGM string"
	Current_BGMFile .asg ""
	v[216574..1548949] = 0 // ????????????????????
	@call .cev 1926
	@call .cev 2130
	v[154] = 0
	v[522] = 0
	s[37].off
	@call .cev 1922
	TT1 = actor[1].level
	TT1 -= 1
	@actor[1].level .sub TT1
	TT1 = actor[1].mhp
	TT1 -= 1
	@actor[1].param .hp .sub TT1
	s[309].off
	s[401..500].off
	s[470].off
	@if s[7] .isOn() {
		@comment "EASY"
		@if v[2401] == 0 {
			v[1144] = 1
			v[1141] = 500
			v[1142] = 615
			v[1143] = 90
			
		}
		@comment "NORMAL"
		@if v[2401] == 1 {
			v[1144] = 15
			v[1141] = 450
			v[1142] = 565
			v[1143] = 120
			
		}
		@comment "HARD"
		@if v[2401] >= 2 {
			v[2057] += 2
			v[1144] = 25
			v[1141] = 400
			v[1142] = 495
			v[1143] = 140
			
		}
		@comment "VERY HARD"
		@if v[2401] >= 3 {
			v[1144] = 35
			v[1141] = 360
			v[1142] = 480
			v[1143] = 150
			
		}
		@if v[2401] >= 4 {
			v[1144] = 35
			v[1141] = 360
			v[1142] = 480
			v[1143] = 175
			
		}
		v[1141..1142] *= 48 / 45
		@comment "#DEBUG"
		v[2403] = v[2223]
		v[2402] = v[2224]
		@if v[2403] == 999 {
			v[2403] = [3, 8, 9, 12, 1][rnd(0, 4)]
			@if v[2403] == 3 {
				v[2402] = rnd(1, 3)
				
			}
			
		}
		@if v[2403] == 0 {
			v[2403] = 3
			
		}
		
	}

	// hidosugiru
	s[1..300].off
	s[6].on
	v[1..46] = 0
	v[1021..1036] = 0
	v[53..1000] = 0
	v[2001..2080] = 0
	v[2406..2418] = 0

	// @comment "#########"
	v[2800..4400] = 0
	v[5000..735946] = 0 // init RTS objects
	// @comment "#########"
	s[501..1000].off
	v[95] = v[1240]
	v[2501..2504] = 0
	v[2520] = 0
	v[198] = 100
	v[2510] = s[309] == 1 ? -88888 : 0
	@comment "Experimental Cache"
	v[4801] = v[4807]
	@comment "ui"
	inputstr .asg  .file PATH_cache_ui, .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg PATH_ui_dir
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -10000, -10000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 10
					.eraseWhenTransfer
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "num"
	inputstr .asg  .file PATH_cache_numbers, .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg PATH_pic_numdir
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos 1000000, 1000000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 1
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "Effects"
	inputstr .asg  .file "..\\Picture\effects\preload_setting", .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg "effects\"
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -10000, -10000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 1
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "popstrings"
	inputstr .asg  .file "..\\Picture\popstrings\preload_setting", .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg "popstrings\"
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -10000, -10000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 1
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "Arrows"
	inputstr .asg  .file "..\\Picture\arrows\preload_setting", .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg "arrows\"
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -10000, -10000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 1
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "Projectiles"
	inputstr .asg  .file "..\\Picture\projectile\preload_setting", .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg "projectile\"
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -10000, -10000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 10
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	@comment "Stamps"
	inputstr .asg  .file "..\\Picture\stamp\preload_setting", .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg "stamp\"
				str1 .cat inputstr
				@pic[v[4801]].show {
					str1
					.pos -100000, -100000 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 10
				}
				v[4801] += 1
				
			}
			
		}
		
	}

	// @comment "BodySet"
	
	Str_PATH_spr_head.split ("spr_head_0",str1,TT1)
	str9 .asg str1
	str1 .asg .cat(PATH_pictureHome,"",str1)
	str1 .cat "preload_setting"
	inputstr.asg .file str1, .utf8
	inputstr .split LF, t[1], v[505]
	@loop v[505] .dst v[506] {
		var1 = 1 + v[506]
		inputstr .asg t[var1]
		inputstr .inStr "//", 321,  .beg 0
		@comment "#""//""Comment out"
		@if v[321] == -1 {
			@if inputstr .neq "" {
				str1 .asg str9
				str1 .cat inputstr
				TT1 = -1000000 - v[4801]
				@pic[v[4801]].show {
					str1
					.pos TT1, TT1 .center
					.chromakey 1
					.scale 0
					.trans 100
					.rgbs 100, 100, 100, 100
					.mapLayer 1
				}
				v[4801] += 1
				
			}
			
		}
		
	}
	log_push("Picture Cache Load")

	// UI setting
	@comment "Env"
	v[2901] = v[1001] / 2
	v[2902] = v[1002] / 2
	@comment "######################"
	@pic[974].show {
		"UI\Basic_UI"
		.pos v[1115], v[1002] .bottom
		.chromakey 1
		.scale 100
		.trans 100
		.rgbs 100, 100, 100, 100
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	}
	@pic[974].show {
		"UI\Basic_UI"
		.pos v[1301], v[1002] .bottomLeft
		.chromakey 1
		.scale 100
		.trans 100
		.rgbs 100, 100, 100, 100
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	}
	@pic[974].getInfo .ltrb .baseRect TT1, TT2, TT3, TT3
	LEGV_ConstBuffIconsStartX = TT1 + 254
	LEGV_ConstBuffIconsStartY = v[1286]
	@pic[PicID_click_agent_indicator].show {
		PATH_click_agent_indicator
		.pos TT1, TT2 .topLeft
		.chromakey 1
		.scale 100
		.trans 100
		.rgbs 100, 100, 100, 100
		.mapLayer 8
		.eraseWhenTransfer
	}
	TT1 += 502
	TT1 += 84
	TT2 = v[1286] + 3
	@pic[1790].show {
		"UI\minimapui_0"
		.pos v[1001], v[1002] .bottomRight
		.chromakey 1
		.scale 100
		.trans 0
		.rgbs 100, 100, 100, 100
		.mapLayer 9
		.eraseWhenTransfer
	}
	@pic[1774].show {
		"ui\switch_idle_worker"
		.pos TT1, TT2 .topLeft
		.chromakey 1
		.scale 100
		.trans 35
		.rgbs 100, 100, 100, 100
		.grid 1, 2 .cell 1
		.mapLayer 8
		.eraseWhenTransfer
	}
	TT2 += 16
	@if v[231] == 3 {
		@pic[1775].show {
			"ui\switch_log"
			.pos TT1, TT2 .topLeft
			.chromakey 1
			.scale 100
			.trans 35
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 1
			.mapLayer 8
			.eraseWhenTransfer
		}
		
	} .else bl {
		@pic[1775].show {
			"ui\switch_log"
			.pos TT1, TT2 .topLeft
			.chromakey 1
			.scale 100
			.trans 35
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 2
			.mapLayer 8
			.eraseWhenTransfer
		}
		
	}
	@comment "######################"
	@pic[1770].strpic {
		""
		.pos v[1001], v[1301] .topRight
		.size 48, 22    .chromakey 1
		.scale 100
		.trans 20
		.rgbs 100, 100, 100, 100
		.font "", 12
		.spacing 0, 0
		.skin "SystemSwitch" .stretch .noPadding
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	}
	TT1 = v[1001] - 4
	TT2 = 0 + 4
	@pic[1771].show {
		"ui\switch_esc"
		.pos TT1, TT2 .topRight
		.chromakey 1
		.scale 100
		.trans 20
		.rgbs 100, 100, 100, 100
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	}
	TT1 -= 14
	TT2 = 0 + 4
	@if v[2401] < 5 {
		@pic[1772].show {
			"ui\switch_ff"
			.pos TT1, TT2 .topRight
			.chromakey 1
			.scale 100
			.trans 20
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 2
			.mapLayer 8
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
		}
		
	}
	TT1 -= 14
	TT2 = 0 + 4
	@if v[2401] < 5 {
		@pic[1773].show {
			"ui\switch_pause"
			.pos TT1, TT2 .topRight
			.chromakey 1
			.scale 100
			.trans 20
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 2
			.mapLayer 8
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
		}
		
	}
	@comment "######################"
	s[2].off
	s[18].on
	@comment "AItoggle"
	TT1 = v[4556]
	@loop 4 {
		TT1 += 1
		@pic[TT1].show {
			"StaticIcon"
			.pos Temp5, Temp6 .center
			.scrollWithMap
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.grid 8, 1 .cell 8
			.mapLayer 9
			.affectedByFlash
			.affectedByShake
		}
		
	}

	@comment "Markers"
	TT1 = v[1196]
	@loop v[1203] {
		TT1 += 1
		@pic[TT1].show {
			"marker"
			.pos Temp5, Temp6 .center
			.scrollWithMap
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.grid 1, 5 .cell v[321]
			.mapLayer 4
			.affectedByFlash
			.affectedByShake
		}
		
	}

	@comment "#Particles"
	TT1 = v[1164]
	@loop v[1163] .dst TT2 {
		TT1 += 1
		@pic[TT1].show {
			"effects\sprite_fresheffects"
			.pos v[1119], TT3 .right
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.mapLayer 2
			.affectedByShake
		}
		
	}

	@comment "#Particles"
	s[144].off
	@if v[2215] > 0 {
		s[144].on
		TT1 = v[1200]
		@loop v[2215] .dst TT2 {
			TT1 += 1
			@pic[TT1].show {
				"effects\particles"
				.pos v[1119], TT3 .right
				.chromakey 1
				.scale 100
				.trans 100
				.rgbs 100, 100, 100, 100
				.grid 11, 10 .cell 1
				.mapLayer 7
				.affectedByShake
			}
			
		}
		
		
	}
	@comment "#Buffs"
	v[1127] = 18
	@loop 8 .dst v[235] {
		v[235] += 987
		@pic[v[235]].show {
			"ui\bufficon"
			.pos v[1119], TT3 .right
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.grid 8, 5 .cell 1
			.mapLayer 9
			.affectedByShake
		}
		
	}

	@comment "#Side HP bar"
	v[1121] = 4001
	v[1118] = 1181
	TT1 = 10 + v[1118]
	@loop 10 .dst TT2 {
		TT3 = 21 * TT2
		TT3 += v[1120]
		TT2 += 1
		TT2 %= 10
		@pic[TT1].show {
			"ui\HP_bar_side_0" .repl 1 TT2
			.pos v[1119], TT3 .right
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.grid 1, 20 .cell 20
			.mapLayer 8
			.eraseWhenTransfer
			.affectedByShake
		}
		TT1 += 1
		
	}

	@comment "Markers"
	TT1 = 921
	TT2 = 1
	@loop 6 {
		@pic[TT1].show {
			"pointer_waypoint"
			.pos 160, 120 .center
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 100, 100, 100
			.grid 6, 1 .cell TT2
			.mapLayer 8
			.eraseWhenTransfer
			.affectedByShake
		}
		v[341..342] += 1
		
	}

	@comment "num"
	TT1 = 1201
	@loop 30 {
		@pic[TT1].show {
			PATH_pic_numdir_number
			.pos v[221], v[222] .center
			.scrollWithMap
			.chromakey 1
			.scale 100
			.trans 100
			.rgbs 100, 180, 100, 100
			.mapLayer 7
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
		}
		TT1 += 1
		
	}

	v[143] = 0
	v[142] = 100
	v[421] = 100
	v[501] = player.mapId
	v[2080] = 2301
	Map_LimitCoordX_min = ev[3].x
	Map_LimitCoordY_min = ev[3].y
	@comment "*get map config*"

	// ---------------------------
	// Check map list
	// ---------------------------
	Is_SightSystem_On.on
	@sys.getInfo .tilesetId  .dst v[2060]
	@if t[751] .eq "" {
		t[751] .asg "\v[501]" .extract
		
	}
	str1 .asg  .file "../Maps/define_maps", .utf8
	str2 .asg ".*="
	str2 .cat t[751]
	str1.exMatch {
		str2
		str1
		TT1
		.beg 0
		.extract
	}
	@if str1 .neq "" {
		str1 .split "=", str1, TT1
		t[750] .asg str1
		
	}

	
	// ---------------------------
	// Legacy map config
	// ---------------------------
	loadedJsConfig.off

	// init mission variables
	Mission_Agent_TeamSize_Limit = TEAMSIZE_SYSTEM_LIMIT


	// LEGACY - remove this part after js management system completion
	
	getMissionPath()
	loadMissionDef()
	loadMapInfo()


	@if loadedJsConfig.isOff() {
		inputstr .asg "..\Maps\"
		inputstr .cat t[750]
		inputstr .cat "\\config"
		inputstr .asg  .file inputstr, .utf8, .extract
		inputstr .split LF, t[v[1219]], v[505]
		@loop v[505] .dst v[506] {
			var1 = v[1219] + v[506]
			inputstr .asg t[var1]
			@call .cev 1796
			t[3000..3300] .asg ""
			
		}

	}.else bl{
		@map.setEv[4] .pos(reg1,reg2)
		
	}
	

		Map_LimitCoordX_max = ev[4].x
		Map_LimitCoordY_max = ev[4].y

	v[411] = (Map_LimitCoordX_max + Map_LimitCoordX_min) / 2
	v[412] = (Map_LimitCoordY_max + Map_LimitCoordY_min) / 2
	v[413] = (Map_LimitCoordX_max - Map_LimitCoordX_min) / v[1277] + 1
	v[416] = (Map_LimitCoordY_max - Map_LimitCoordY_min) / v[1276] + 1


	v[430] = muldiv(Map_LimitCoordX_max - Map_LimitCoordX_min, 100, v[1277])
	v[431] = muldiv(Map_LimitCoordY_max - Map_LimitCoordY_min, 100, v[1276])
	var_Map_Width = Map_LimitCoordX_max - Map_LimitCoordX_min
	var_Map_Height = Map_LimitCoordY_max - Map_LimitCoordY_min
	v[2061..2062] += 1
	v[165] = player.x
	v[166] = player.y
	v[165].copy v[161], 2
	v[161..162] *= 16
	v[162] -= 8
	v[161] = max(v[161], v[1115])
	v[162] = max(v[162], v[1116])
	// @comment "Camera Set Up"
	@map.getPlayerPos v[68] TT11 TT12
	// @map[v[68]].setVehiclePos .pos Map_LimitCoordX_min, Map_LimitCoordY_min .retain
	@map[v[68]].setPlayerPos .pos Map_LimitCoordX_min Map_LimitCoordY_min
	
	@loop v[1276] .dst TT4 {
		v[v[4802] + TT4] = (muldiv(TT4, v[431], 100) + Map_LimitCoordY_min) / 5
		
	}

	@loop v[1277] .dst TT3 {
		v[v[4803] + TT3] = (muldiv(TT3, v[430], 100) + Map_LimitCoordX_min) / 5
		
	}

	@wait 0
	@comment "FoW"
	v[2925] = ev[3].scrx
	v[2926] = ev[3].scry
	Map_LimitCoordX_max = ev[4].scrx
	Map_LimitCoordX_max -= ev[3].scrx
	Map_LimitCoordY_max = ev[4].scry
	Map_LimitCoordY_max -= ev[3].scry
	v[74] = Map_LimitCoordX_max / 32
	v[75] = Map_LimitCoordY_max / 32
	@if v[74] >= 64 {
		s[297].on
		
	} .else bl {
		s[297].off
		
	}
	v[78] = Map_LimitCoordX_max / 2
	v[79] = Map_LimitCoordY_max / 2
	Map_LimitCoordX_min = ev[3].x
	Map_LimitCoordY_min = ev[3].y
	Map_LimitCoordX_max = ev[4].x
	Map_LimitCoordY_max = ev[4].y
	v[517] = ev[3].scrx
	v[517] += v[1001] / 2 + 16
	v[518] = ev[3].scry
	v[518] += v[1002] / 2
	v[519] = ev[4].scrx
	v[519] -= v[1001] / 2 - 16
	v[520] = ev[4].scry
	v[520] -= v[1002] / 2

	Map_dst_MortO_from_RefO_x = ev[3].x * 16 + 8
	Map_dst_MortO_from_RefO_y = ev[3].y * 16 + 16

	v[161] = max(v[161], v[517])
	v[162] = max(v[162], v[518])
	v[0] = v[165..166] = [v[161] / 16, v[162] / 16]

	func_general_camera_move(v[161],v[162])



	@comment "Camera Set Up End"
	v[53] = 0
	v[54] = 0
	@wait 0
	v[53] = 0
	v[54] = 0
	v[55..56] = 0
	@comment "CPU Tactics AI$B!t!t!t!t!t!tB"
	@if s[310] .isOn() {
		s[305].on
		
	} .else bl {
		s[305].off
		
	}
	s[80].on
	s[39].on
	s[35].on
	s[2].on
	s[20].on
	v[2875] = 0
	@comment "$B!t!t!t!t!t!t(BSetting$B!t!t!t!t!t!t(B"
	s[72].off
	@if s[314] .isOn() {
		s[72].on
		
	}
	v[390] = 2000
	@comment "+Logs+"
	v[239] = 100
	v[231] = 12
	v[239] = 5
	v[231] = 3
	@pic[1775].getInfo .cewh .currentRect InvVar2, InvVar3, InvVar4, InvVar5
	@if v[231] == 3 {
		@pic[1775].show {
			"ui\switch_log"
			.pos InvVar2, InvVar3 .center
			.chromakey 1
			.scale 100
			.trans 35
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 1
			.mapLayer 8
			.eraseWhenTransfer
		}
		
	} .else bl {
		@pic[1775].show {
			"ui\switch_log"
			.pos InvVar2, InvVar3 .center
			.chromakey 1
			.scale 100
			.trans 35
			.rgbs 100, 100, 100, 100
			.grid 1, 2 .cell 2
			.mapLayer 8
			.eraseWhenTransfer
		}
		
	}

	@comment "test"
	s[38].off
	s[18].off
	s[43].on
	@comment "EXP"
	v[2701] = 0
	@sys.skin "Odinscall_system" .stretch .gothic
	v[45] = v[143]
	v[142] = 100
	v[2507..2509] = -1
	@comment "#########Weather########"
	s[298].off


	// -----------------------------------
	// loading terrain bits
	// -----------------------------------
	log_push("Loading Terrain Data")
	@loop 99 .dst TT1 { // 99 is magic numba - string buffer amount
		TT2 = Adrt_terraindata_head + TT1
		splitStrData(t[TT2])
		@if strAr0.neq "" { // terrainId exists
			convertStrBitsTable_to_r1(strAr3)
			v[Adr_terrainbits_head + TT1] |= reg1
		}
	}

	//
	@comment "#For faster calculation"
	v[432] = v[1182] - Map_LimitCoordX_min
	@comment "#Wave adjustment"
	@if s[7] .isOn() {
		v[2057] = 6
		v[2058] = 0
		v[2059] = 0
		
	}



	// player settings?
	@comment "FACTION TEMPLATES"
	t[3000..3300] .asg ""
	v[300001..300004] = v[1130]
	v[300001..300002] -= 30
	v[300003..300004] -= 80



	@if s[7] .isOn() {
		v[2280 + v[2403]] += 1
	}

	// factional bonuses adn so on :D
	mission_init_players_settings()

	@if s[400] .isOn() { // debug mode
		@if .testPlay {
			v[300001..300004] += 10000 // give extra resources
			
		}
		s[471].on
		
	}

	v[438] = 100
	str1 .asg  .file "../Maps/define_maps", .utf8
	@if t[750] .eq "" {
		str2 .asg ".*="
		str2 .cat t[751]
		str1.exMatch {
			str2
			str1
			TT1
			.beg 0
			.extract
		}
		str1 .split "=", str1, TT1
		t[750] .asg str1
		
	} .else bl {
		str2 .asg t[750]
		str2 .cat "@.*"
		str1.exMatch {
			str2
			str1
			TT1
			.beg 0
			.extract
		}
		str1 .split "=", str1, TT1
		str2 .toNum TT1
		@comment "need to load tilegen.txt"
		@if TT1 == 0 {
			
		}
		
	}
	str1.asg "Mapname get "
	str1.cat t[750]
	log_push(str1)

	// generate Agent Extra Buffer as a picture
	construct_picture_buffer(PicID_AgentExBuffer,AgentExtraBuffer_ArraySize,AgentExtraBuffer_ArrayAmount)
	
}

__fn mission_init_players_settings {
	
	@comment "*faction template load*"
	@comment "PL"
	var1 = v[4574] + v[2403]
	t[var1] .split ",", t[2998], v[505]
	@loop 36 .dst v[506] {
		var1 = 3001 + v[506]
		var2 = v[4575] + v[506] + 5
		t[var1] .toNum v[31]
		v[var2] = v[31]
		
	}

	@comment "EN"
	var1 = v[4574] + v[2404]
	t[var1] .split ",", t[2998], v[505]
	@loop 36 .dst v[506] {
		var1 = 3001 + v[506]
		var2 = v[4575] + 40 + v[506] + 5
		t[var1] .toNum v[31]
		v[var2] = v[31]
		
	}


	// market rate basic setting
	/* gold cost
	v[2481] = 150
	v[2482] = 160
	v[2483] = 210
	*/
	set_market_basic_resource_rate_buy_all([150,160,210])
	/*
	v[2484] = 25
	v[2485] = 30
	v[2486] = 42
	*/
	set_market_basic_resource_rate_sell_all([25,30,42])

	// set default population limit for player
	// v[v[4580] + 0] = 5
	func_set_player_current_pop_limit(0,5) // set for single mode player only

	// check faction bonus
	func_get_player_faction_to_r1(0)
	// imperials
	@if reg1 == 1 { 
		v[300001..300004] += 100
		@comment "#Imperial Age"
		v[2409] |= pow(2, 28)
		@comment "#Town Watch"
		v[2409] |= pow(2, 24)
	}

	// DRAGONS
	@if reg1 == 3 {
		// v[v[4580] + 0] = v[1012]
		func_set_player_current_pop_limit(0,Mission_Agent_TeamSize_Limit) // dragons have no need to build houses
		func_get_player_subfaction_to_r2(0)

		@if reg2 == 3 { // Drana
			v[300004] *= 2
			
		}

		func_get_ptr_to_player_rs_lim_bonus_per_house_r3(0)
		v[reg3] = 100
		@if reg2 == 1 { // Orthunass economy bonus
			v[reg3] += 25
			set_market_basic_resource_rate_buy_all([130,140,200])
			set_market_basic_resource_rate_sell_all([30,35,50])
			
		}
		
	}


}


/*
 * MAP INIT PROCESS
 */

__fn CEV_MISSION_MAP_INIT {
	log_push("DIS mission map initializing process...")
	var_allocatedmapsize = var_Map_Width * var_Map_Height
	

	// mapdef.js.txt file won't be loaded when the game didn't load missiondef.js.txt.
	@if loadedJsConfig.isOn() {
		// this gives the terrain source file name to str1.
		@js .run "RTS.map.build()"
		regs1.asg str1 // save the filename to regs1
		@if Is_LEGACYSTAGE.isOff() {
			@map.tileset v[2060]
		}
		log_push("JS config loaded")
	}

	//@comment "#########Tile Generation########"
	@if Mapgentype == 1 { // this one is shit
		inputstr .asg "..\Maps\"
		inputstr .cat DISmap_MapDirectory
		inputstr .cat "\"
		inputstr .cat "tilegen"
		str1 .asg  .file inputstr, .utf8
		@if str1 .neq "" {
			t[3000..4999] .asg ""
			str1 .split "upper", str2, TT1
			str2 .split LF, t[3000], TT1
			@loop var_Map_Height .dst v[2064] {
				t[4001..4999] .asg ""
				TT1 = 3001 + v[2064]
				t[TT1] .split ",", t[4001], TT1
				@loop var_Map_Width .dst v[2065] {
					TT1 = v[2065] + Map_LimitCoordX_min
					TT2 = v[2064] + Map_LimitCoordY_min
					TT3 = 4001 + v[2065]
					t[TT3] .toNum TT3
					@map.rewrite .lower .single TT3 .xywh TT1, TT2, 1, 1
					
				}
				
				
			}
			
			t[3000..4999] .asg ""
			str3 .split LF, t[3000], TT1
			@loop var_Map_Height .dst v[2064] {
				t[4001..4999] .asg ""
				TT1 = 3001 + v[2064]
				t[TT1] .split ",", t[4001], TT1
				@loop var_Map_Width .dst v[2065] {
					TT1 = v[2065] + Map_LimitCoordX_min
					TT2 = v[2064] + Map_LimitCoordY_min
					TT3 = 4001 + v[2065]
					t[TT3] .toNum TT3
					@map.rewrite .upper .single TT3 .xywh TT1, TT2, 1, 1
					
				}
				
				
			}
			
			
		}
		
	}.elif Mapgentype == 2 { //new
		inputstr .asg DIS_MAPHOMEPATH
		inputstr .cat RTSmap_MapdefDir
		inputstr .cat "\"
		inputstr .cat regs1
		// inputstr .cat "mapdata"
		generateTileMapFromPicfile(inputstr)
		log_push("Map tile picture imported")
	}


	@comment "#########Sight System########"
	@if Is_SightSystem_On .isOff() {
	    s[2001..2500].on
	    s[299].on
			log_push("Mission Sight System is OFF.")
	    
	} .else bl {
	    s[299].off
	    v[562447..572446] = 0
	    v[2927] = var_Map_Width / 5
	    v[2927] += var_Map_Width % 5 > 0 ? 1 : 0
	    v[2928] = var_Map_Height / 5
	    v[2928] += var_Map_Height % 5 > 0 ? 1 : 0
	    v[4526] = 96
	    v[4526] = (v[1001] / 80 + 2) * (v[1002] / 80 + 2)
	    @comment "temp"
	    v[4526] = min(v[4526], 156)
	    TT5 = 80
	    TT6 = 80
	    @loop v[4526] .dst TT1 {
		TT2 = v[4525] + TT1
		TT3 = 80 * (TT1 % 12) - 40
		TT4 = 80 * (TT1 / 12) - 40
		@pic[TT2].strpic {
		    ""
		    .pos TT3, TT4 .center
		    .size TT5, TT6            .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12
		    .spacing 0, 4
		    .skin "FogOfWar" .stretch
		    .mapLayer 7
		    .eraseWhenTransfer
		    .affectedByShake
		}
		
	    }
		log_push("Mission Sight System is ON.")
	    
	    
	}


	@if s[1] .isOn() {
	    str1 .asg  .file "../Maps/define_maps", .utf8
	    @if DISmap_MapDirectory .eq "" {
				str2 .asg ".*="
				str2 .cat t[751]
				str1.exMatch {
						str2
						str1
						TT1
						.beg 0
						.extract
				}
				str1 .split "=", str1, TT1
				DISmap_MapDirectory .asg str1
				
	    } .else bl {
				str2 .asg DISmap_MapDirectory
				str2 .cat "=.*"
				str1.exMatch {
						str2
						str1
						TT1
						.beg 0
						.extract
				}
				str1 .split "=", str1, TT1
				str2 .toNum TT1
				@comment "need to load mapgen.txt"
				@if TT1 == 0 {
						
				}
				
	    }
	    
	}

	
	@comment "*init map str*"
	t[40000..45000] .asg ""
	@comment "*get map str*"
	str5 .asg "..\Maps\"
	str5 .cat DISmap_MapDirectory
	str5 .cat "\\"
	str5 .cat "strings"
	inputstr .asg str5
	inputstr .cat Str_LanguageToken
	log_push("loading DIS mapstring file.")
	log_push(inputstr)
	inputstr .asg  .file inputstr, .utf8, .extract

	__fn load_and_store_mapstring {
		log_push("DIS mapstring file loaded.")
		@if `loadedJsConfig == 0 || Is_LEGACYSTAGE == 1 {
			// legacy map string system
			inputstr .split "*/", str9, TT1
			inputstr .split LF, t[40000], TT1

		}.else bl { // new mapstring system works on js
			eval_js("MISSION.importLangString(gett(510))")
			inputstr .asg  .file inputstr, .utf8, .extract

		}
	
	}

	@if inputstr.neq "" {
		load_and_store_mapstring()

	}.else bl{
		log_push("DIS mapstring file in current language is missing.")
		log_push("Now going to load initial string file instead.")
		inputstr .asg str5
		log_push("loading DIS mapstring file.")
		log_push(inputstr)
		inputstr .asg  .file inputstr, .utf8, .extract

		@if inputstr.neq "" {
			load_and_store_mapstring()

		}.else bl{
			log_push("DIS mapstring loading failed.")

		}
	}

	@comment "*Weather Init*"
	@if s[312] .isOff() {
	    @call .cev 1798
	    
	}

	@comment "*MAP INIT*"
	v[v[v[4569]]..v[v[4569] + v[4564] * 200 * 200]] = 0
	v[0] = [Ptr6..Ptr6 + 160000] = 0
	v[2063] = var_Map_Width * var_Map_Height
	v[504] = 3

	@if  Mapgentype == 2 { //new mapdata loaded
	    @loop var_Map_Height .dst v[2064] {
		    Ptr6 = var_Map_Width * v[2064] + v[4529]
		    Ptr7 = var_Map_Width * v[2064] + v[1182]
		    @loop var_Map_Width .dst v[2065] {
			TT1 = v[2065] + Map_LimitCoordX_min
			TT2 = v[2064] + Map_LimitCoordY_min
			@comment "if elevation was not set"
			@if v[Ptr7] < 100000000 {
				v[Ptr7] += 300000000
				@comment "lower water height"
				v[Ptr7] -= (v[Const_save_var_AdrTerrainBitsHead + reg10] & 1) > 0 ? 100000000 : 0
				}
			@comment "#TileFuncPushFlag"
			v[Ptr6] |= v[Ptr7]%100 >= 20 ? 1 : 0
			v[286..287] += 1
			
		    }
	    }

	}.else{

		@loop var_Map_Height .dst v[2064] {
		    Ptr6 = var_Map_Width * v[2064] + v[4529]
		    Ptr7 = var_Map_Width * v[2064] + v[1182]
		    @loop var_Map_Width .dst v[2065] {
			TT1 = v[2065] + Map_LimitCoordX_min
			TT2 = v[2064] + Map_LimitCoordY_min
			@map.getTerrain .pos TT1, TT2 .dst reg10
			v[Ptr7] = reg10
			@comment "HEIGHT LEVEL 1"
			v[Ptr7] += 300000000
			@comment "lower water height"
			v[Ptr7] -= (v[Const_save_var_AdrTerrainBitsHead + reg10] & 1) > 0 ? 100000000 : 0
			@comment "#TileFuncPushFlag"
			v[Ptr6] |= reg10 >= 20 ? 1 : 0
			v[286..287] += 1
			
		    }


		}
	}

	@comment "set v[2060]-> cev (mission init)"
	@comment "*Load Tile Config*"
	inputstr .asg "..\\Chipset\\tiledata\\tileconf_"
	inputstr .cat "\v[2060]" .extract
	log_push("loading DIS tileconfig file")
	log_push(inputstr)
	inputstr .asg  .file inputstr, .utf8, .extract
	@if inputstr.neq "" {
		log_push("DIS tileconfig file loaded.")
	}.else bl{
		log_push("DIS tileconfig file loading failed.")
	}
	inputstr .split LF, t[v[1219]], v[505]
	@loop v[505] .dst v[506] {
	    var1 = v[1219] + v[506]
	    inputstr .asg t[var1]
	    @call .cev 1820
	    t[3000..3300] .asg ""
	    
	}

	@comment "*map tile check*"
	@if Mapgentype != 2 { 
		@loop var_Map_Height .dst v[2064] {
		    Ptr6 = var_Map_Width * v[2064] + v[4529]
		    Ptr7 = var_Map_Width * v[2064] + v[1182]
		    @loop var_Map_Width .dst v[2065] {
					TT1 = v[2065] + Map_LimitCoordX_min
					TT2 = v[2064] + Map_LimitCoordY_min
					@sys.getInfo .tiles TT1, TT2, 1, 1 .lower .dst reg10
					@comment "Set LowerChipID"
					v[Ptr7] += reg10 * 100
					@comment "Highgroundset"
					v[371] = 0
					@loop v[701] .dst TT5 {
							v[371] += reg10 == v[TT5 + 702] && reg10 != 0 ? 1 : 0
							
					}
					
					v[Ptr7] += v[371] >= 1 ? 100000000 : 0
					@comment "CliffCheck"
					v[371] = 0
					@loop v[751] .dst TT5 {
							v[371] += reg10 == v[TT5 + 752] && reg10 != 0 ? 1 : 0
							
					}
					
					@if v[371] >= 1 {
							Ptr9 = Ptr7
							@while Ptr9 >= v[1182] {
								@comment "HEIGHT LEVEL UP"
								v[Ptr9] += 100000000
								Ptr9 -= var_Map_Width
						
							}
							
							
					}
					@comment "CliffEndCheck"
					v[371] = 0
					@loop v[801] .dst TT5 {
							v[371] += reg10 == v[TT5 + 802] && reg10 != 0 ? 1 : 0
							
					}
					
					@if v[371] >= 1 {
							Ptr9 = Ptr7
							@while Ptr9 >= v[1182] {
						@comment "HEIGHT LEVEL DOWN"
						v[Ptr9] -= 100000000
						Ptr9 -= var_Map_Width
						
							}
							
							
					}
					@sys.getInfo .tiles TT1, TT2, 1, 1 .upper .dst reg10
					@comment "Set UpperChipID"
					v[Ptr7] += reg10 * 100000
					@comment "#TileFuncPushFlag"
					v[371] = 0
					@loop v[601] .dst TT5 {
							v[371] += reg10 == v[TT5 + 602] && reg10 != 0 ? 1 : 0
							
					}
					
					v[Ptr6] |= v[371] >= 1 ? 1 : 0
					v[286..287] += 1
					
		    }
		    
		    
		}
	}
	
	// try js gen
	run_RTSmapGeneration()
	

	@wait 0
	@comment "set mapnodes"
	v[433] = (Map_LimitCoordX_max - Map_LimitCoordX_min) / 2
	@if `(Map_LimitCoordX_max - Map_LimitCoordX_min) % 2 == 1 {
	    v[433] += 1
	    
	}
	v[434] = (Map_LimitCoordY_max - Map_LimitCoordY_min) / 2
	@if `(Map_LimitCoordY_max - Map_LimitCoordY_min) % 2 == 1 {
	    v[434] += 1
	    
	}
	@loop v[434] .dst v[2064] {
	    Ptr6 = v[4564] * v[433] * v[2064] + v[4569]
	    @loop v[433] .dst v[2065] {
		TT1 = v[2065] * 2 + Map_LimitCoordX_min
		TT2 = v[2064] * 2 + Map_LimitCoordY_min
		TT1.copy v[Ptr6], 2

		@comment "tile check #detect init static"
		// 100 = neutral
		v[Ptr6 + 2] += 100
		@comment "Road Counter"
		Temp16 = 0
		@loop 2 .dst v[2066] {
		    TT4 = TT2 + v[2066]
		    @loop 2 .dst v[2067] {
			TT3 = TT1 + v[2067]
			Temp13 = v[v[1182] + TT3 - Map_LimitCoordX_min + (TT4 - Map_LimitCoordY_min) * var_Map_Width]
			Temp14 = Temp13 % 100
			@comment "Evaluate Cost"
			Temp15 = 0
			@comment "DENSE FOREST"
			@if Temp14 == 5 {
			    Temp15 = MVCOST_LAND_DENSE_FOREST
			    
			}
			@comment "Stone Road"
			@if Temp14 == 11 {
			    Temp16 += 2
			    @if Temp16 >= 4 {
							Temp15 = MVCOST_LAND_STONE_ROAD
				
			    }
			    
			}
			@comment "Dirt Road"
			@if Temp14 == 12 {
			    Temp16 += 1
			    @if Temp16 >= 3 {
						Temp15 = MVCOST_LAND_DIRT_ROAD
				
			    }
			    
			}
			@comment "WATER"
			@if Temp14 == 18 {
					Temp16 -= 1
			    @if Temp16 <= -2 {
						Temp15 = MVCOST_LAND_DIRT_WATER
			    }
			    
			}
			@if Temp14 >= 21 {
			    Temp15 = 6
			    
			}
			v[Ptr6 + 2] += Temp15
			v[Ptr6 + 2] += v[v[4529] + TT3 - Map_LimitCoordX_min + (TT4 - Map_LimitCoordY_min) * var_Map_Width] & 1
			v[Ptr6 + 7] += Temp13 / 100000000
			
		    }
		    
		    
		}
		
		v[Ptr6 + 7] /= 4
		Ptr6 += v[4564]
		
	    }
	    
	    
	}

	@wait 0
	@comment "Make Node Link"
	Temp1 = 0
	@loop v[434] .dst v[2064] {
	    Ptr6 = v[4564] * v[433] * v[2064] + v[4569] - 1
	    @loop v[433] .dst v[2065] {
		@comment "init"
		Ptr7 = Ptr6 + 12
		v[Ptr7..Ptr7 + 7] = -1
		v[371..374] = 0
		@comment "X=0"
		@if v[2065] == 0 {
		    v[371] = 1
		    
		}
		@if v[2065] == v[433] {
		    v[371] = 2
		    
		}
		@if v[2064] == 0 {
		    v[372] = 1
		    
		}
		@if v[2064] == v[434] {
		    v[372] = 2
		    
		}
		@comment "#"
		@comment "##"
		@if v[372] != 1 {
		    @if v[371] != 1 {
			Ptr8 = Ptr6 - v[4564] - v[433] * v[4564] + 1
			Temp2 = 1
			@call .cev 1793
			
		    }
		    Ptr8 = Ptr6 - v[433] * v[4564] + 1
		    Temp2 = 2
		    @call .cev 1793
		    @if v[371] != 2 {
			Ptr8 = Ptr6 + v[4564] - v[433] * v[4564] + 1
			Temp2 = 3
			@call .cev 1793
			
		    }
		    
		}
		@comment "##"
		@if v[371] != 1 {
		    Ptr8 = Ptr6 - v[4564] + 1
		    Temp2 = 8
		    @call .cev 1793
		    
		}
		@if v[371] != 2 {
		    Ptr8 = Ptr6 + v[4564] + 1
		    Temp2 = 4
		    @call .cev 1793
		    
		}
		@comment "##"
		@if v[372] != 2 {
		    @if v[371] != 1 {
			Ptr8 = Ptr6 - v[4564] + v[433] * v[4564] + 1
			Temp2 = 7
			@call .cev 1793
			
		    }
		    Ptr8 = Ptr6 + v[433] * v[4564] + 1
		    Temp2 = 6
		    @call .cev 1793
		    @if v[371] != 2 {
			Ptr8 = Ptr6 + v[4564] + v[433] * v[4564] + 1
			Temp2 = 5
			@call .cev 1793
			
		    }
		    
		}
		@comment "Add Setup Static cost"
		v[Ptr6 + 3] += v[Ptr6 + 4]
		v[Ptr6 + 4] = 0
		@comment "1"
		Ptr6 += v[4564]
		Temp1 += 1
		
	    }
	    
	    
	}
	@wait 0
	@if `loadedJsConfig == 0 || Is_LEGACYSTAGE == 1 {
		log_push("Loading Legacy Mapscript")
		@comment "*Map script load*"
		inputstr .asg "..\Maps\"
		inputstr .cat DISmap_MapDirectory
		inputstr .cat "\"
		inputstr .cat "init"
		inputstr .asg  .file inputstr, .utf8, .extract
		@call .cev 1840
		func_convert_str_into_map_script(510)
		inputstr .split LF, t[v[1219]], v[505]
		@loop v[505] .dst v[506] {
				var1 = v[1219] + v[506]
				inputstr .asg t[var1]
				@call .cev 1821
				t[3000..3300] .asg ""
				
		}
	
	}.else bl{ // Jsconfig is loaded!
		log_push("Calling RTS.mission.startup()")
		startupMission()
	}

	@wait 0
	@comment "MINIMAPS!"
	init_minimap_for_this_mission()
	log_push("Minimap initialized.")
	
	@comment "################"
	@pic[2200].show {
	    "ui\cameraicon"
	    .pos TT1, TT2 .center
	    .chromakey 1
	    .scale 100
	    .trans 100
	    .rgbs 100, 100, 100, 100
	    .mapLayer 9
	    .eraseWhenTransfer
	    .affectedByShake
	}
	TT1 = divmul(5000, 800, v[1001]) / v[430]
	TT2 = divmul(2800, 450, v[1002]) / v[431]
	@pic[2200].strpic {
	    ""
	    .pos TT1, TT2 .center
	    .size TT1, TT2    .chromakey 1
	    .scale 100
	    .trans 100
	    .rgbs 0, 200, 200, 100
	    .font "", 12 .noShadow
	    .spacing 0, 4
	    .skin "Odinscall_mapcam" .nobg .noGradation
	    .mapLayer 9
	    .affectedByShake
	}
	s[78].on

	// @comment "*Map triggers load*"
	log_push("Loading Legacy map triggers")
	v[507] = 0
	Ptr7 = v[4577]
	inputstr .asg "..\Maps\"
	inputstr .cat DISmap_MapDirectory
	inputstr .cat "\\"
	inputstr .cat "simple_triggers"
	inputstr .asg  .file inputstr, .utf8
	@call .cev 1840
	func_convert_str_into_map_script(510)
	@if .testPlay() {
	    inputstr .toFile "debug_simpletriggers", .utf8
	    
	}
	inputstr .split LF, t[v[1219]], v[505]
	@call .cev 1818
	
	//@comment "*AI script load*"
	log_push("Loading Legacy tactics AI")
	inputstr .asg "..\\Scripts\\ai"
	inputstr .cat "\\"
	inputstr .cat t[753]
	t[754] .asg inputstr
	inputstr .asg  .file inputstr, .utf8
	@if inputstr.neq ""{
		@call .cev 1840
		func_convert_str_into_map_script(510)
		t[755] .asg inputstr
		inputstr .split LF, t[v[1219]], v[505]
		@call .cev 1818
	}
	s[290].off
	@if v[507] >= 1 {
	    s[290].on
	    
	}

	@comment "#TRY"
	@if v[2404] >= 1 {
			log_push("Loading Map factional party table template csv.")
	    t[1..100] .asg ""
	    var2 = 0
	    inputstr .asg "..\Maps\"
	    inputstr .cat DISmap_MapDirectory
	    inputstr .cat "\\"
	    inputstr .cat "map_faction_party_template_"
	    inputstr .cat v[2404]
	    inputstr .asg  .file inputstr, .utf8
	    @call .cev 1840
	    @if .testPlay() {
				log_push("Developer Mode: debug_template.txt exported in $GAME/text/")
				inputstr .toFile "debug_template", .utf8
		
	    }
	    inputstr .split "*/", str9, TT1
	    inputstr .split LF, t[3100], Temp1
	    @loop Temp1 .dst Temp20 {
				t[3001..3100] .asg ""
				Temp2 = 3101 + Temp20
				t[Temp2] .split ",", t[3000], TT1
				t[3001] .toNum TT1
				Temp3 = Adrt_mission_misc_data + 10 * (TT1 - 1) + v[2740 + TT1]
				t[Temp3] .asg t[Temp2]
				v[2740 + TT1] += 1
				
	    }
	    
	    
	}
	@if s[308] .isOff() {
			log_push("Loading overlay effect:")
	    // @comment "#########	NEED CONVERTING#########"
	    TT1 = muldiv(100, v[1001], 800)
	    @if v[1001] > 800 {
		TT1 += 5
		
	    }
	    @if v[2403] == 1 {
				log_push("Imperial Twilight - shade_twilight")
				@pic[2101].show {
						"shade_twilight"
						.pos v[1115], v[1116] .center
						.chromakey 0
						.scale TT1
						.trans 50
						.rgbs 100, 100, 100, 100
						.overlay
						.mapLayer 7
						.eraseWhenTransfer
				}
				
	    } .else bl {
				log_push("Normal Overlay - shade_16ex")
				@pic[2101].show {
						"shade_16ex"
						.pos v[1115], v[1116] .center
						.chromakey 0
						.scale TT1
						.trans 50
						.rgbs 100, 100, 100, 100
						.overlay
						.mapLayer 7
						.eraseWhenTransfer
				}
				
	    }
	    @if v[2401] == 5 {
				log_push("RAGNAROK Twilight - shade_twilight")
				@pic[2101].show {
						"shade_twilight"
						.pos v[1115], v[1116] .center
						.chromakey 0
						.scale TT1
						.trans 35
						.rgbs 100, 100, 100, 100
						.overlay
						.mapLayer 7
						.eraseWhenTransfer
				}
				
	    }
	    
	}
	@wait 0
	@comment "Advanced heightmap system"
	
		log_push("Adv.Heightmap generation system activated.")
		TT1 = ev[3].scrx
		TT2 = ev[3].scry
		v[341..342] -= 8
		TT2 -= 10
		TT3 = ev[4].scrx - ev[3].scrx
		TT4 = ev[4].scry - ev[3].scry


		// This shouldn't be implemented yet
		/*
		@pic[PicID_Map_base].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 2
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		*/

		@pic[PicID_elevation_add].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 60
		    .rgbs 10, 10, 10, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .multi
		    .mapLayer 4
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		@pic[PicID_elevation_multi].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4    .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 5
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}






	@if MapHeightMapType == 2 {
		log_push("Adv.Heightmap generation system called.")
		@call .cev 1804
	    
	} .else bl {
	    @if MapHeightMapType == 1 {
				log_push("preset Heightmap pictures loading.")
				str1 .asg DIS_MAPHOMEPATH
				str1 .cat RTSmap_MapdefDir
				t[502..503] .asg str1
				str2 .cat "/heightmap_light"
				str3 .cat "/heightmap_dark"
				TT1 = ev[3].scrx
				TT2 = ev[3].scry
				v[341..342] -= 8
				TT2 -= 10
				TT3 = ev[4].scrx - ev[3].scrx
				TT4 = ev[4].scry - ev[3].scry
				@pic[PicID_elevation_add].show {
						str2
						.pos TT1, TT2 .topLeft
						.scrollWithMap
						.chromakey 1
						.scale 100
						.trans 0
						.rgbs 100, 100, 100, 100
						.add
						.mapLayer 4
						.eraseWhenTransfer
						.affectedByShake
				}
				@pic[PicID_elevation_multi].show {
						str3
						.pos TT1, TT2 .topLeft
						.scrollWithMap
						.chromakey 1
						.scale 100
						.trans 0
						.rgbs 100, 100, 100, 100
						.multi
						.mapLayer 4
						.eraseWhenTransfer
						.affectedByShake
				}
		
	    }
	    
	}

	// @comment "Advanced Maptile system"
	@if s[1] .isOn() {
	    @if s[316] .isOn() {
		v[v[1068]..v[1068] + 500 * 500] = 0
		TT1 = ev[3].scrx
		TT2 = ev[3].scry
		v[341..342] -= 8
		TT2 -= 8
		TT3 = ev[4].scrx - ev[3].scrx
		TT4 = ev[4].scry - ev[3].scry
		@pic[1].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 2
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		@pic[2].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 60
		    .rgbs 10, 10, 10, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .multi
		    .mapLayer 4
		    .eraseWhenTransfer
		    .affectedByFlash
		    .affectedByShake
		}
		@pic[3].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 5
		    .eraseWhenTransfer
		    .affectedByFlash
		    .affectedByShake
		}
		v[2063] = var_Map_Width * var_Map_Height
		var_Map_Width.copy v[321], 2
		Temp10 = v[1068]
		@loop v[322] .dst v[2064] {
		    Ptr6 = var_Map_Width * v[2064] + v[4529]
		    Ptr7 = var_Map_Width * v[2064] + v[1182]
		    @loop v[321] .dst v[2065] {
			TT1 = v[2065] + Map_LimitCoordX_min
			TT2 = v[2064] + Map_LimitCoordY_min
			TT3 = v[Ptr7] % 100
			TT3 = v[Ptr7] / 100 % 1000
			@sys.getInfo .tiles TT1, TT2, 1, 1 .lower .dst reg10
			v[Temp10] = reg10
			v[286..287] += 1
			Temp10 += 1
			
		    }
		    
		    
		}
		
		@pic[1].drawTile {
		    .xywh 0, 0, var_Map_Width, var_Map_Height
		    .range v[v[1068]]
		    .lower
		    .tilesetId v[2060]
		    .pattern -1
	}
		v[v[1068]..v[1068] + 500 * 500] = 0
		
	    }
	    
	}
	@if s[1] .isOn() {
	    v[v[1068]..v[1068] + 500 * 500] = 0
	    @if s[316] .isOn() {
		TT1 = ev[3].scrx
		TT2 = ev[3].scry
		TT3 = ev[4].scrx - ev[3].scrx
		TT4 = ev[4].scry - ev[3].scry
		@pic[1].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 2
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		@pic[2].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 60
		    .rgbs 10, 10, 10, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .multi
		    .mapLayer 4
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		@pic[3].strpic {
		    ""
		    .pos TT1, TT2 .topLeft
		    .size TT3, TT4            .scrollWithMap
		    .chromakey 1
		    .scale 100
		    .trans 0
		    .rgbs 100, 100, 100, 100
		    .font "", 12 .noShadow
		    .spacing 0, 4
		    .skin "" .nobg .noframe .noGradation .noPadding
		    .mapLayer 5
		    .eraseWhenTransfer
		    .affectedByTint
		    .affectedByFlash
		    .affectedByShake
		}
		v[2063] = var_Map_Width * var_Map_Height
		var_Map_Width.copy v[321], 2
		@loop v[322] .dst v[2064] {
		    Ptr6 = var_Map_Width * v[2064] + v[4529]
		    Ptr7 = var_Map_Width * v[2064] + v[1182]
		    @loop v[321] .dst v[2065] {
			TT1 = v[2065] + Map_LimitCoordX_min
			TT2 = v[2064] + Map_LimitCoordY_min
			TT3 = v[Ptr7] % 100
			@if TT3 < 21 {
			    TT3 = v[Ptr7] / 100 % 1000
			    @sys.getInfo .tiles TT1, TT2, 1, 1 .lower .dst reg10
			    TT5 = v[2065] * 16
			    TT6 = v[2064] * 16
			    @pic[1].drawTile {
				.xywh TT5, TT6, 1, 1
				.single TT3
				.lower
				.tilesetId v[2060]
				.pattern -1
	}
			    TT3 = v[Ptr7] / 100000 % 1000
			    @sys.getInfo .tiles TT1, TT2, 1, 1 .upper .dst reg10
			    @if reg10 >= 1 {
				@pic[1].drawTile {
				    .xywh TT5, TT6, 1, 1
				    .single TT3
				    .upper
				    .tilesetId v[2060]
				    .pattern 0
	}
				@pic[2].drawTile {
				    .xywh TT5, TT6, 1, 1
				    .single TT3
				    .upper
				    .tilesetId v[2060]
				    .pattern 0
	}
				@pic[3].drawTile {
				    .xywh TT5, TT6, 1, 1
				    .single TT3
				    .upper
				    .tilesetId v[2060]
				    .pattern 0
	}
				
			    }
			    TT3 = v[Ptr7] % 100
			    @if `TT3 == 5 || TT3 == 2 {
				
			    }
			    
			}
			v[286..287] += 1
			
		    }
		    
		    
		}
		
		
	    }
	    
	}
	v[2511] = 0
	@wait 0
	
	// boot js mission manager 
	@if loadedJsConfig.isOn() {
		log_push("Booting JS mission manager.")
		RUN_js_MissionManager.on // -> RTS_mission_general.tpc

	}
	log_push("DIS mission setup process is finished.")
	@if .testPlay() {
		log_export("..\user\log\mission_initlog")

	}

	MissionLogName.asg t[750]
	MissionLogName.cat "_"
	var1 = sys.date
	MissionLogName.cat var1
	MissionLogName.cat "_"
	var2 = sys.time
	MissionLogName.cat var2
	inputstr.asg "RTS game :"
	inputstr.cat MissionLogName
	inputstr.cat " starts."
	inputstr.cat LF
	log_push(inputstr)

	

}


// link
__fn CEV_SET_NODELINK {
	Temp3 = (Ptr8 - v[4569]) / 20 + 1
	Temp4 = v[Ptr8 + 3]
	// 87 seems magic number
	@if Temp4 <= 87 {
	v[Ptr7] = Temp3 * 10 + Temp2
	Ptr7 += 1

	} .else bl { // ?

	}
}

__fn getMissionPath {
	Str_MissionPath.asg "..\Maps\"
	Str_MissionPath.cat t[750]
	Str_MissionPath.cat "\"
}

// setup JS management mission system
__fn loadMissionDef $missionpath {
		// Str_MissionInfoJSON <- make up load proc!

	inputstr .asg Str_MissionPath
	inputstr .cat "\\missioninfo.json"
	Str_MissionInfoJSON .asg .file inputstr, .utf8

	@if Str_MissionInfoJSON.neq "" { // there's missiondef.js
		// try_eval_js("RTS.setupMission(gett(741));","parsing missioninfo.json FAILED!")
		@js .run "RTS.setupMission(gett(741));" // t[752],v[501]

		inputstr .asg Str_MissionPath
		@js .run "sett(501,RTS.mission.missionscript[0]);"
		inputstr .cat "/"
		inputstr .cat str1
		inputstr .asg .file inputstr, .utf8

		eval_js(inputstr) // execute missiondef.js.txt
		str_missiondef_storage.asg inputstr
		loadedJsConfig.on
		@js .run "RTS.setupMapLoading(RTS.mission.mapSourceDir);" // terrainData check
		
		WAIT_FOR_JSCMD_EXECUTION
		@if Is_LEGACYSTAGE.isOn() {
			loadedJsConfig.off

		}
	}.else bl{ // consider the map from LEGACY
			Is_LEGACYSTAGE.on
	}
	
}


// JS map terrain setup management system
__fn loadMapInfo $missionpath {
	Mapgentype = 0
	MapHeightMapType = 0
	str1 .asg DIS_MAPHOMEPATH
	str1 .cat RTSmap_MapdefDir
	str1 .cat "\\mapinfo.json"
	// str1 .cat "\\mapdef.js" // need rewriting
	inputstr .asg .file str1, .utf8
	@if inputstr .neq "" { // mapdef.js exists
		str_mapdef_storage.asg inputstr
		@js .run "RTS.openMissionMapData(gett(510));" // parse mapinfo.json in t[510] <-inputstr
		// return to reg1 reg2 
		WAIT_FOR_JSCMD_EXECUTION

	}.else bl {
		Mapgentype = 0
		MapHeightMapType = 0
		@if Is_LEGACYSTAGE.isOff(){
			str1 .asg, .cat("Couldn't open mapinfo json file!", " filepath is: ~/text", str1) //
			func_errlog(str1)
		}

		reg1 = ev[4].x
		reg2 = ev[4].y

	}
}

__fn run_RTSmapGeneration {@js .run "RTS.map.generate()"}

__fn generateTileMapFromPicfile $filepath {
		inputstr .asg $filepath
					@pic[2599].show {
		inputstr 
		.pos -111, -111 .center
		.chromakey 1
		.scale 100
		.trans 0
		.rgbs 100, 100, 100, 100
		.mapLayer 7
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
					}
					@pic[2599].getInfo .pixel 0, 0, var_Map_Width, var_Map_Height .dst Memory_MapInfo
		//var_allocatedmapsize
		@loop var_Map_Height .dst v[2064] {
			@loop var_Map_Width .dst v[2065] {
				TT1 = v[2065] + Map_LimitCoordX_min
				TT2 = v[2064] + Map_LimitCoordY_min
				TT3 = v[2065] + v[2064]  * var_Map_Width + v[1182]
				TT4 = v[TT3] & 0x000000FF 
				@map.rewrite .lower .single TT4 .xywh TT1, TT2, 1, 1
				TT5 = (v[TT3] & 0x0000FF00) >> 8
				@map.rewrite .upper .single TT5 .xywh TT1, TT2, 1, 1
				TT6 = (v[TT3] & 0xff000000) >> 24
				@map.getTerrain .pos TT1, TT2 .dst(reg10)
				//set info
				v[TT3] = TT6*100000000 + TT5*100000 + TT4 * 100 + reg10
			}
			
			
		}
	
}




// Call start up Mission

def JSCMD_STARTUP = "
try {
RTS.mission.startup();
} catch (error) {
errorlog(`MISSION.startup() function failed!`);
};"

__fn startupMission {
	Str_CmdQueue.asg "" // clean up
	@js .run JSCMD_STARTUP //
	DISAPI_JS_CMD_RUN()
	WAIT_FOR_JSCMD_EXECUTION // just wait. <-module_core_Game_scripts_functions.tpc
}


__fn LEGACY_OLD_MAP_CONF_temporary {
	t[510] .inStr "//", 321,  .beg 0
	@comment "#""//""Comment out"
	@if v[321] == -1 {
			@if t[510] .contains "factions(" {
					t[510] .split "(", t[3000], v[341]
					t[3001] .split ",", t[3001], v[601]
					t[3001] .toNum v[2403]
					t[3002] .toNum v[2404]
					t[3003] .toNum v[2405]
					
			}
			@if t[510] .contains "AI_script=" {
					t[510] .split """", t[3000], v[341]
					t[753] .asg t[3001]
					
			}
			@if t[510] .contains "turnoff_moralesystem(" {
					s[470].on
					
			}
			@if t[510] .contains "set_weather" {
					t[510] .split "=", t[3000], v[341]
					t[3001] .toNum v[2420]
					
			}
			@if t[510] .contains "set_initial_maptile(" {
					t[510] .split "(", t[3000], v[341]
					t[3001] .toNum v[2060]
					@map.tileset v[2060]
					
			}
			@if t[510] .contains "set_map_size(" {
					t[510] .split "(", t[3000], v[341]
					t[3001] .split ",", t[3001], v[601]
					t[3001] .toNum v[341]
					t[3002] .toNum v[342]
					v[341] .add v[69], 2
					@ev[4].setPos .pos v[341], v[342]
					
			}
			@if t[510] .contains "use_sight_system" {
					t[510] .split "=", t[3000], v[341]
					t[3001] .toNum v[341]
					@if v[341] == 0 {
							s[300].off
							
					}
					@if v[341] == 1 {
							s[300].on
							
					}
					
			}
			@if t[510] .contains "use_height_map" {
					t[510] .split "=", t[3000], v[341]
					t[3001] .toNum MapHeightMapType
					
			}
			@if t[510] .contains "use_mapgen" {
					t[510] .split "=", t[3000], v[341]
					t[3001] .toNum Mapgentype
					
			}
			@if t[510] .contains "use_advanced_tile_system(" {
					s[238].on
					
			}
			

	}
}

