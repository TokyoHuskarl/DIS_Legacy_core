
__fn scripts_misc{
	@if t[510] .contains "spawn_" {
	    // "#spawnUnit"
	    @if t[510] .contains "spawn_unit(" {
		macro_script_split()
		@if v[341] >= 4 {
		    t[3000] .toNum v[254]
		    t[3001] .toNum v[341]
		    t[3002] .toNum v[342]
		    t[3003] .toNum v[251]
		    t[3004] .toNum v[258]
		    s[156].off
		    @if v[258] >= 1 {
			s[156].on
		    }
		    t[3005] .toNum v[280]
		    t[3006] .toNum v[277]
		    @call .cev 2001
		    v[22].copy v[252], 2
		    s[152].on
		    @call .cev 300
		    @if v[251] == 0 {
			@if s[156] .isOn() {
			    @call .cev 1906
			    
			}
			
		    }
		    
		}
		
	    }
	    // "#spawn_unit_group"
	    @if t[510] .contains "spawn_unit_group(" {
		macro_script_split()
		@if v[341] >= 8 {
		    t[3000] .toNum v[254]
		    t[3001] .toNum v[341]
		    t[3002] .toNum v[342]
		    @call .cev 2001
		    v[22].copy v[252], 2
		    t[3008] .toNum v[343]
		    t[3003] .toNum v[251]
		    t[3004] .toNum v[258]
		    v[276] = v[258]
		    s[156].off
		    @if v[258] >= 1 {
			s[156].on
			
		    }
		    t[3005] .toNum v[280]
		    t[3006] .toNum v[341]
		    v[278] = v[341] * 16
		    t[3007] .toNum v[342]
		    v[279] = v[342] * 16
		    t[3009] .toNum v[277]
		    @loop v[343] {
			v[258] = v[276]
			s[152].on
			@call .cev 300
			v[252] += v[278]
			v[253] += v[279]
			@if v[251] == 0 {
			    @if s[156] .isOn() {
				@call .cev 1906
				
			    }
			    
			}
			
		    }
		    
		    
		}
		
	    }
	    // "#spawnStatic"
	    @if t[510] .contains "spawn_static(" {
		macro_script_split()
		@if v[341] >= 4 {
		    t[3000] .toNum v[254]
		    v[254] += 800
		    s[177..180].off
		    s[151].on
		    @call .cev v[254]
		    s[151].off
		    @if s[179] .isOn() {
			t[3001] .toNum v[351]
			t[3002] .toNum v[352]
			v[351].copy v[353], 2
			v[351].copy v[341], 2
			v[351] += v[69] % 2
			v[352] += v[70] % 2
			v[353] += v[69] % 2
			v[354] += v[70] % 2
			v[351..354] /= 2
			v[351..354] *= 2
			v[355] = (v[351] + v[353] + v[69] % 2) / 2
			v[356] = (v[352] + v[354] + v[70] % 2) / 2
			@call .cev 2001
			v[22].copy v[252], 2
			v[353].copy v[341], 2
			@call .cev 2001
			// "############"
			v[11..12] = 0
			v[11] .add v[351], 2
			v[11] .sub v[353], 2
			v[11..12] *= 16
			@if v[11] == v[12] {
			    v[11] *= 2
			    v[12] *= 2
			    
			} .else bl {
			    @if v[11] > v[12] {
				v[11] *= 2
				
			    } .else bl {
				v[12] *= 2
				
			    }
			    
			}
			v[11] = abs(v[11])
			v[12] = abs(v[12])
			v[11..12] += 16
			v[11..12] += 16
			// "############"
			v[355].copy v[341], 2
			@call .cev 2001
			v[22] += 8 - 16 * (v[69] % 2)
			v[23] += 8 - 16 * (v[70] % 2)
			@if s[177] .isOn() {
			    v[22] -= 16
			    
			}
			@if s[178] .isOn() {
			    v[23] -= 16
			    
			}
			v[22].copy v[252], 2
			t[3003] .toNum v[251]
			t[3004] .toNum v[258]
			s[177..180].off
			
		    } .else bl {
			t[3001] .toNum v[341]
			t[3002] .toNum v[342]
			@call .cev 2001
			v[23] += 8
			v[22].copy v[252], 2
			t[3003] .toNum v[251]
			t[3004] .toNum v[258]
			
		    }
		    t[3000] .toNum v[254]
		    v[254] += 800
		    @call .cev v[254]
		    
		}
		
	    }
	    // "#spawnpalisade"
	    @if t[510] .contains "spawn_palisade(" {
		macro_script_split()
		@if v[341] >= 4 {
		    @call .cev 2160
		    @call .cev 835
		    
		}
		@wait 0
		
	    }
	    // "#spawnwall"
	    @if t[510] .contains "spawn_wall(" {
		macro_script_split()
		@if v[341] >= 4 {
		    @call .cev 2160
		    @call .cev 834
		    
		}
		@wait 0
		
	    }
	    @break
	    
	}
	@if t[510] .contains "set_" {
	    // "#set_switch_on(s)"
	    @if t[510] .contains "_switch_on(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .toNum v[11]
		s[v[11]].on
		
	    }
	    // "#set_switch_of(s)"
	    @if t[510] .contains "_switch_off(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .toNum v[11]
		s[v[11]].off
		
	    }

	    //set_last_agent_id_var(*var ptr)
	    @if t[510] .contains "_last_agent_id_var(" {
		t[510] .split "(", t[2999], v[341]
		t[3000] .toNum v[341]
		v[v[341]] = v[21]
		
		
	    }


	    // "#set_last_agent_id_mapvar"
	    @if t[510] .contains "_last_agent_id_mapvar(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		@if v[341] >= 1 {
		    t[3000] .toNum v[341]
		    v[2000 + v[341]] = v[21]
		    
		}
		
	    }

	    @break
	    
	}
	// "#cohort_register"
	@if t[510] .contains "cohort_register(" {
	    macro_script_split()
	    @wait 0
	    @call .cev 1907
	    @break
	    
	}
	// "#make_height"
	@if t[510] .contains "make_height(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ")", t[3000], v[341]
	    t[3000] .split ",", t[3000], v[341]
	    @if v[341] >= 4 {
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		t[3003] .toNum v[14]
		@call .cev 1802
		
	    }
	    @break
	    
	}
	// "#make_basin"
	@if t[510] .contains "make_basin(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ")", t[3000], v[341]
	    t[3000] .split ",", t[3000], v[341]
	    @if v[341] >= 4 {
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		t[3003] .toNum v[14]
		@call .cev 1803
		
	    }
	    @break
	    
	}
	// "#reveal_map"
	@if t[510] .contains "reveal_" {
	    @if t[510] .contains "reveal_map(" {
		v[562447..572446] ^= 2
		s[299].on
		@break
		
	    }
	    @if t[510] .contains "reveal_area(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[11..12] /= 5
		t[3002] .toNum v[350]
		v[341] = v[4527] + v[11] + v[12] * v[2927]
		// "v[350]=sight?"
		v[341] -= v[350] * v[2927]
		v[341] -= v[350]
		v[351] = v[350] * 2 + 1
		v[352] = v[350] * 2 + 1
		@if v[341] < v[4527] {
		    v[352] -= 1
		    v[341] += v[2927]
		    
		}
		// "hori"
		@loop v[351] .dst v[343] {
		    @if `between(v[626] - v[350] + v[343], 0, v[2927]) {
			// "vert"
			@loop v[352] .dst v[342] {
			    v[v[341] + v[342] * v[2927]] |= 7
			    
			}
			
			
		    }
		    v[341] += 1
		    
		}
		
		s[237].on
		s[236].on
		@break
		
	    }
	    
	}
	// "#show_msg_dialog(strv)"
	@if t[510] .contains "show_msg_dialog(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ")", t[3000], v[341]
	    @if t[3000] .contains "T:" {
		t[3000] .split "T:", t[2999], v[341]
		
	    } .else bl {
		@if t[3000] .contains """" {
		    t[3000] .split """", t[2999], v[341]
		    
		} .else bl {
		    t[3000] .toNum v[11]
		    v[11] = v[1218] + v[11]
		    t[3000] .asg t[v[11]]
		    
		}
		
	    }
	    // "#######################"
	    @call .cev 1924
	    v[12] = 2
	    v[601] = 1
	    @pic[v[1155]].strpic {
		t[3000]
		.pos v[12], v[1126] .bottomLeft
		.size 0, 0                .chromakey 1
		.scale 100
		.trans 30
		.rgbs 100, 100, 100, 100
		.font Font_UI, Font_UI_size
		.spacing 0, 4
		.skin "" .nobg .noframe .noPadding
		.mapLayer 8
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	    }
	    @call .cev 1925
	    // "#######################"
	    @break
	    
	}
	// "#show_radio_dialog(str)"
	@if t[510] .contains "show_radio_dialog(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ")", t[3000], v[341]
	    t[3000] .toNum v[11]
	    @call .cev 1889
	    @call .cev 2088
	    // "#########################"
	    @loop .inf() {
		@if v[367] <= v[4570] {
		    @break
		    
		}
		@wait 0
		
	    }
	    
	    @break
	    
	}
	// "#show_dialog_icon(str,gridx,gridy,cell)"
	@if t[510] .contains "show_dialog_icon(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ",", t[3000], v[341]
	    t[3001] .toNum v[11]
	    t[3002] .toNum v[12]
	    t[3003] .toNum v[13]
	    v[341] = muldiv(v[1115], 3, 5)
	    v[342] = 32
	    @pic[1769].show {
		t[3000]
		.pos v[341], v[342] .center
		.chromakey 1
		.scale 100
		.trans 0
		.rgbs 100, 100, 100, 100
		.grid v[11], v[12] .cell v[13]
		.mapLayer 9
		.eraseWhenTransfer
		.affectedByFlash
		.affectedByShake
	    }
	    // "#########################"
	    
	}
	// "#play_global_sound(soundfilename,v1,v2,v3)"
	@if t[510] .contains "play_global_sound(" {
	    t[510] .split "play_global_sound(", t[3000], v[341]
	    t[3001] .split ",", t[3001], v[341]
	    t[3002] .toNum v[472]
	    v[472] = divmul(v[472], 100, v[2216])
	    t[3003] .toNum v[473]
	    t[3004] .toNum v[474]
	    t[3001] .split """", t[3000], v[341]
	    @cmd 11550, t[3001], .args v[472], 3
	    @break
	    
	}
	// "#play_global_music(soundfilename,v1,v2,v3)"
	@if t[510] .contains "play_global_music(" {
	    t[510] .split "play_global_music(", t[3000], v[341]
	    t[3001] .split ",", t[3001], v[341]
	    t[3002] .toNum v[472]
	    t[3003] .toNum v[473]
	    t[3004] .toNum v[474]
	    t[3001] .split """", t[3000], v[341]
	    v[472] = divmul(v[472], 100, v[2217])
	    @bgm.play t[3001] .opt 0, v[472], v[473], v[474]
	    t[760] .asg t[3001]
	    @break
	    
	}
	// "#wait(sec)"
	@if t[510] .contains "wait(" {
	    t[510] .split "(", t[3000], v[341]
	    t[3001] .split ")", t[3000], v[341]
	    t[3000] .toNum v[11]
	    @wait v[11]
	    @break
	    
	}
	@if t[510] .contains "call_" {
	    // "#call_cev(commonevID)"
	    @if t[510] .contains "call_cev(" {
		macro_script_split()
		t[3000] .toNum v[11]
		@if v[11] >= 1 {
		    @call .cev v[11]
		    
		}
		
	    }
	    // "#call_mev(evID,page)"
	    @if t[510] .contains "call_mev(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		@if v[11] >= 1 {
		    @call .mev v[11], v[12]
		    
		}
		
	    }
	    // "#call_mev(evID,page)"
	    @if t[510] .contains "call_script(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		@if v[11] >= 1 {
		    @call .mev v[11], v[12]
		    
		}
		
	    }
	    @break
	    
	}
}

__fn scripts_cond{
	@loop 1 {
	    // "cond_ck_team_cp_lower_than(team,var)"
	    @if t[510] .contains "_ck_team_cp_lower_than(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		@if v[11] == 0 {
		    v[2812] = 0
		    // "Check P Team List"
		    @doWhile v[v[300]] >= 1 .dst v[301] {
			// "Check P Team List"
			v[300] = v[301] + v[1145]
			@if v[v[300]] >= 1 {
			    v[299] = v[v[300]] * 300
			    v[299] += 4701
			    // "死体はリストから外れていることを信じて……！"
			    @if v[v[299]] <= 10 {
				v[11] = v[v[300]]
				@call .cev 2009
				v[2812] += v[21]
				
			    }
			    
			}
			
		    }
		    
		    v[11] = v[2812]
		    
		} .else bl {
		    v[2813] = 0
		    // "Check Enemy Team List"
		    @doWhile v[v[300]] >= 1 .dst v[301] {
			// "Check Enemy Team List"
			v[300] = v[301] + v[1146]
			@if v[v[300]] >= 1 {
			    v[299] = v[v[300]] * 300
			    v[299] += 4701
			    // "except Cohort 10 "
			    @if `v[v[299]] <= 10 {
				v[11] = v[v[300]]
				@call .cev 2009
				v[2813] += v[21]
				
			    }
			    
			}
			
		    }
		    
		    v[11] = v[2813]
		    
		}
		t[3001] .toNum v[12]
		v[0] = v[11] <= v[12] ? 0 : (s[291] = 1)
		@break
		
	    }
	    // "cond_chance(var chance)"
	    @if t[510] .contains "_chance(" {
		t[510] .split "(", t[2999], v[341]
		t[3000] .toNum v[11]
		v[0] = v[11] >= rnd(1, 100) ? (s[291] = 1) : 0
		@break
		
	    }
	    @if t[510] .contains "_obj_" {
		// "Underconstruction"
		// "cond_obj_in_area(num,x1,y1,x2,y2)"
		@if t[510] .contains "_in_area(" {
		    t[510] .split "(", t[2999], v[341]
		    @if t[3000] .contains "MV:" {
			t[3000] .split "MV:", t[2999], v[341]
			t[3000] .toNum v[11]
			v[11] = v[v[11] + 2000]
			
		    } .else bl {
			t[3000] .toNum v[11]
			
		    }
		    v[0] = v[21] != 1 ? (s[291] = 1) : 0
		    @break
		    
		}
		// "cond_obj_in_area_any(team,x1,y1,x2,y2)"
		@if t[510] .contains "_in_area_any(" {
		    macro_script_split()
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    t[3002] .toNum v[13]
		    t[3003] .toNum v[14]
		    t[3004] .toNum v[15]
		    // "v1=UnitID v2=Team, 0/1 v3=ifStatic 0/1"
		    v[21] = 0
		    @loop v[1012] .dst v[301] {
			// "Check Team List"
			v[300] = v[301] + v[1145 + v[11] % 3]
			@if v[v[300]] >= 1 {
			    v[299] = v[v[300]] * 300
			    v[299] += 4726
			    v[v[299]].copy v[626], 2
			    // "has same id"
			    @if `between(v[626], v[12], v[14]) {
				@if `between(v[627], v[13], v[15]) {
				    v[21] = 1
				    @break
				    
				}
				
			    }
			    
			} .else bl {
			    @break
			    
			}
			
		    }
		    
		    v[0] = v[21] != 1 ? (s[291] = 1) : 0
		    @break
		    
		}
		// cond_obj_destroyed(var agent_id)
		@if t[510] .contains "_destroyed(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    /*@if t[3000] .contains "MV:" {
			t[3000] .split "MV:", t[2999], v[341]
			t[3000] .toNum v[11]
			v[11] = v[v[11] + 2000]
			
		    } .else bl {
			t[3000] .toNum v[11]
			
		    }*/
		    t[3000] .toNum var1 .extract
		    //@call .cev 1919
		    macro_check_agent_is_killed(var1)
		    //v[0] = v[21] != 1 ? (s[291] = 1) : 0
		    v[0] = s[291] = (v[21] != 1)
		    @break
		    
		}
		
	    }
	    @if t[510] .contains "_switch_" {
		// "cond_switch_on(v1)"
		@if t[510] .contains "on(" {
		    t[510] .split "(", t[2999], v[341]
		    t[3000] .toNum v[11]
		    v[0] = s[291] = s[v[11]] == 0
		    @break
		    
		}
		// "cond_switch_off(v1)"
		@if t[510] .contains "off(" {
		    t[510] .split "(", t[2999], v[341]
		    t[3000] .toNum v[11]
		    v[0] = s[291] = s[v[11]] == 1
		    @break
		    
		}
		@break
		
	    }
	    @if t[510] .contains "_cf(" {
		@loop 1 {
		    // "cond_cf(v1?v2)"
		    @if t[510] .contains "==" {
			t[510] .split "(", t[3000], v[341]
			t[3001] .split ")", t[3000], v[341]
			t[3000] .split "==", t[3000], v[341]
			t[3000] .toNum v[11]
			t[3001] .toNum v[12]
			v[0] = v[11] == v[12] ? 0 : (s[291] = 1)
			@break
			
		    }
		    @if t[510] .contains ">=" {
			t[510] .split "(", t[3000], v[341]
			t[3001] .split ")", t[3000], v[341]
			t[3000] .split ">=", t[3000], v[341]
			t[3000] .toNum v[11]
			t[3001] .toNum v[12]
			v[0] = v[11] >= v[12] ? 0 : (s[291] = 1)
			@break
			
		    }
		    @if t[510] .contains ">" {
			t[510] .split "(", t[3000], v[341]
			t[3001] .split ")", t[3000], v[341]
			t[3000] .split ">", t[3000], v[341]
			t[3000] .toNum v[11]
			t[3001] .toNum v[12]
			v[0] = v[11] > v[12] ? 0 : (s[291] = 1)
			@break
			
		    }
		    @if t[510] .contains "<=" {
			t[510] .split "(", t[3000], v[341]
			t[3001] .split ")", t[3000], v[341]
			t[3000] .split "<=", t[3000], v[341]
			t[3000] .toNum v[11]
			t[3001] .toNum v[12]
			v[0] = v[11] <= v[12] ? 0 : (s[291] = 1)
			@break
			
		    }
		    @if t[510] .contains "<" {
			t[510] .split "(", t[3000], v[341]
			t[3001] .split ")", t[3000], v[341]
			t[3000] .split "<", t[3000], v[341]
			t[3000] .toNum v[11]
			t[3001] .toNum v[12]
			v[0] = v[11] < v[12] ? 0 : (s[291] = 1)
			@break
			
		    }
		    
		}
		
		@break
		
	    }
	    
	}

}

__fn scripts_map{
	@loop 1 {
	    // "map_set_nodeWP(x,y)"
	    @if t[510] .contains "map_set_nodeway(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		@call .cev 2017
		@break
		
	    }
	    // "map_randomise_height(xmin,ymin,xmax,ymax,Tryamount)"
	    @if t[510] .contains "map_randomise_height(" {
		macro_script_split()
		t[3004] .toNum v[15]
		@loop v[15] {
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    t[3002] .toNum v[13]
		    t[3003] .toNum v[14]
		    v[11] = rnd(v[11], v[13])
		    v[12] = rnd(v[12], v[14])
		    v[13] = v[11] + rnd(12, 18)
		    v[14] = v[12] + rnd(10, 16)
		    @call .cev 1802
		    
		}
		
		@break
		
	    }
	    
	}

}

__fn scripts_AI{
	@loop 1 {
	    // "AI_get_"
	    @if t[510] .contains "_get_" {
		// "AI_get_selected_SP()"
		@if t[510] .contains "selected_SP(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    @call .cev 1761
		    v[21].copy v[2853], 2
		    @break
		    
		}
		
	    }
	    @if t[510] .contains "_select_" {
		// "AI_select_cohort(team,cohort)"
		@if t[510] .contains "_cohort(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[12]
		    t[3001] .toNum v[11]
		    @call .cev 1746
		    @break
		    
		}
		// "AI_select_idle_units(team,amount,[cohort],[civflag],[alert stance flag])"
		@if t[510] .contains "_idle_units(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    t[3002] .toNum v[13]
		    t[3003] .toNum v[14]
		    t[3004] .toNum v[15]
		    // "#"
		    v[12] = v[12] <= 0 ? v[1004] : v[12]
		    @call .cev 1748
		    @loop v[1012] .dst v[301] {
			v[2821] = v[301] + v[1145 + v[20] % 3]
			@if v[v[2821]] >= 1 {
			    v[342] = v[v[2821]] * 300 + 4701
			    v[343] = v[v[342]] <= 0 ? 1 : 0
			    v[342] += 101
			    // "Civflag"
			    @if v[14] != 1 {
				v[343] += v[v[342]] > 6 ? 1 : 0
				
			    } .else bl {
				v[343] += v[v[342]] != 9 ? 1 : 0
				
			    }
			    // "Cohort"
			    @if v[13] > 0 {
				v[344] = v[v[2821]] * 300 + 4735
				v[343] += v[13] != v[v[344]] ? 1 : 0
				
			    }
			    v[342] -= 101
			    @if v[343] == 0 {
				// "Not otherteam"
				@if `v[v[342] + 99] == v[11] % 3 {
				    v[342] += 241
				    // "Free"
				    @if v[v[342]] <= 0 {
					v[342] += 1
					@if v[v[342]] == 0 {
					    v[11] = v[v[2821]]
					    @call .cev 1747
					    @if v[2841] >= v[12] {
						@break
						
					    }
					    
					}
					
				    }
				    
				}
				
			    }
			    
			} .else bl {
			    // "assigned unit not found"
			    v[21] = -1
			    
			}
			
		    }
		    
		    @break
		    
		}
		// "AI_select_all_combat_units(team)"
		@if t[510] .contains "_all_combat_units(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .toNum v[20]
		    @call .cev 1748
		    @loop v[1012] .dst v[301] {
			// "Check AllyTeam List"
			v[2821] = v[301] + v[1145 + v[20] % 3]
			@if v[v[2821]] >= 1 {
			    v[2822] = v[v[2821]] * 300 + 4802
			    // "#FIGHTING UNITS ONLY"
			    @if v[v[2822]] <= 7 {
				v[2822] -= 1
				@if `v[v[2822] - 1] == v[20] {
				    v[11] = v[v[2821]]
				    @call .cev 1747
				    
				}
				
			    }
			    
			} .else bl {
			    @break
			    
			}
			
		    }
		    
		    @break
		    
		}
		// "AI_select_obj(team,id,staticornot,[amount])"
		@if t[510] .contains "select_obj(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[12]
		    t[3001] .toNum v[11]
		    t[3002] .toNum v[13]
		    t[3003] .toNum v[14]
		    // "#"
		    v[14] = v[14] <= 0 ? v[1004] : v[14]
		    @call .cev 1745
		    @break
		    
		}
		
	    }
	    @if t[510] .contains "_cmd_" {
		// "AI_cmd_get_mapcord(mapx,mapy)"
		@if t[510] .contains "_get_mapcord(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    @map[v[501]].setVehiclePos .boat .pos v[11], v[12] .retain
		    v[2853] = boat.scrx
		    v[2854] = boat.scry
		    v[2854] -= 8
		    @break
		    
		}
		// "AI_cmd_add_waypoint_simple()"
		@if t[510] .contains "_add_waypoint_simple(" {
		    v[2853].copy v[2851], 2
		    @call .cev 1749
		    @break
		    
		}
		// "AI_cmd_add_waypoint_mev(mevid)"
		@if t[510] .contains "_add_waypoint_mev(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[11]
		    v[12] = 1
		    @call .mev v[11], v[12]
		    @call .cev 1749
		    @break
		    
		}
		// "AI_cmd_move_simple([Attackmove],[pathfinding])"
		@if t[510] .contains "_move_simple(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    v[0] = s[241] = v[11]
		    v[0] = s[242] = v[12]
		    @call .cev 1750
		    s[241].off
		    s[242].off
		    @break
		    
		}
		// "AI_cmd_move_line(var [Attackmove],[pathfinding])"
		@if t[510] .contains "_move_line(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    @call .cev 1761
		    v[2853].copy v[2851], 2
		    v[2851].copy v[17], 2
		    v[17] .sub v[21], 2
		    v[17..18] *= 2
		    v[2851].copy v[15], 2
		    t[3000] .toNum v[11]
		    t[3001] .toNum v[12]
		    v[0] = s[241] = v[11]
		    v[0] = s[242] = v[12]
		    @call .cev 1751
		    s[241].off
		    s[242].off
		    @break
		    
		}
		
	    }
	    @if t[510] .contains "_cohort_" {
		// "AI_cohort_simple_reassign(team)"
		@if t[510] .contains "simple_reassign(" {
		    t[510] .split "(", t[3000], v[341]
		    t[3001] .split ")", t[3000], v[341]
		    t[3000] .split ",", t[3000], v[341]
		    t[3000] .toNum v[11]
		    @if v[11] >= 1 {
			@loop v[1012] .dst v[301] {
			    // "Check AllyTeam List"
			    v[2821] = v[301] + v[1145 + v[11] % 3]
			    @if v[v[2821]] >= 1 {
				v[2822] = v[v[2821]] * 300 + 4802
				// "#FIGHTING UNITS ONLY"
				@if v[v[2822]] <= 7 {
				    v[2823] = v[2822] - 67
				    @if `v[v[2823]] == 0 {
					@if v[v[2822]] == 0 {
					    v[v[2823]] = 11
					    
					}
					@if v[v[2822]] == 1 {
					    v[v[2823]] = 12
					    
					}
					@if v[v[2822]] == 3 {
					    v[v[2823]] = 12
					    
					}
					@if v[v[2822]] == 2 {
					    v[v[2823]] = 13
					    
					}
					@if v[v[2822]] == 4 {
					    v[v[2823]] = 14
					    
					}
					@if v[v[2822]] == 5 {
					    v[v[2823]] = 15
					    
					}
					
				    }
				    
				}
				
			    } .else bl {
				@break
				
			    }
			    
			}
			
			
		    }
		    @break
		    
		}
		
	    }
	    @if t[510] .contains "_order_" {
		// "AI_order_produce(order)"
		@if t[510] .contains "_produce(" {
		    macro_script_split()
		    t[3000] .toNum v[11]
		    @call .cev 1730
		    @break
		    
		}
		// "AI_order_aggressive()"
		@if t[510] .contains "_aggressive(" {
		    @call .cev 1739
		    @break
		    
		}
		// "AI_order_deffensive()"
		@if t[510] .contains "_defensive(" {
		    @call .cev 1741
		    @break
		    
		}
		
	    }
	    
	}
}

__fn scripts_team{
	@loop 1 {
	    //@comment "unco(team,[seen_or_not],[cohort])"
	    //@comment "team_get_SP(team,[seen_or_not],[cohort]) reg3 = amount"
	    @if t[510] .contains "team_get_SP(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		v[2881] = v[11]
		v[2806..2808] = 0
		v[23] = 0
		@loop v[1012] .dst v[301] {
		    //@comment "Check Player Team List"
		    //@comment "Check AllyTeam List"
		    v[2821] = v[301] + v[1145 + v[2881] % 3]
		    @if v[v[2821]] >= 1 {
			v[2822] = v[v[2821]] * 300
			v[2822] += 4701
			@if v[v[2822]] <= 9 {
			    @if `v[v[2822] + 99] == v[2881] {
				v[11] = v[v[2821]]
				@call .cev 2009
				@if v[21] >= 1 {
				    v[23] += 1
				    
				}
				v[2808] += v[21]
				v[v[2822]].copy v[601], 9
				v[607..608] *= v[21]
				v[2806] .add v[607], 2
				
			    }
			    
			}
			
		    } .else bl {
			@break
			
		    }
		    
		}
		
		v[2812 + v[2881] % 3] = v[2808]
		v[2806..2807] /= v[2808]
		v[2806].copy v[2853], 2
		@break
		
	    }
	    @comment "UNCO"
	    @comment "team_countup_troops(team,ID,[cohort])"
	    @if t[510] .contains "team_countup_troops(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		@comment "safety"
		v[11] = max(v[11], 0)
		v[11] = min(v[11], 4)
		v[14] = v[4575] + min(v[12], 4) + 40 * v[11]
		v[v[14]] = max(v[v[14]] + v[13], 0)
		@comment "return reg1"
		@break
		
	    }
	    @comment "team_set_pop_limit(team,amount)"
	    @if t[510] .contains "team_set_pop_limit(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[4580] + v[11]] = v[12]
		@break
		
	    }
	    @comment "team_set_faction(team,faction)"
	    @if t[510] .contains "team_set_faction(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[2403 + v[11]] = v[12]
		@break
		
	    }
	    @comment "team_give_resource(team,resource,amount)"
	    @if t[510] .contains "team_give_resource(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		@comment "safety"
		v[11] = max(v[11], 0)
		v[11] = min(v[11], 4)
		v[14] = v[4575] + min(v[12], 4) + 40 * v[11]
		v[v[14]] = max(v[v[14]] + v[13], 0)
		@break
		
	    }
	    @comment "team_give_tech_flag(team,techgroup,flag)"
	    @if t[510] .contains "_give_tech_flag(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		t[3002] .toNum v[13]
		@comment "safety"
		v[11] = max(v[11], 0)
		v[11] = min(v[11], 3)
		v[12] = max(v[12], 1)
		v[12] = min(v[12], 3)
		v[12] -= 1
		v[2406 + v[11] + 3 * v[12]] |= pow(2, v[13] - 1)
		@break
		
	    }
	    
	}


}

__fn scripts_player{
	@loop 1 {
	    @comment "player_change_view(x,y)"
	    @if t[510] .contains "_change_view(" {
		macro_script_split()
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		@map[v[501]].setVehiclePos .boat .pos v[11], v[12] .retain
		v[66] = boat.x
		v[67] = boat.y
		s[44].on
		@break
		
	    }
	    @if t[510] .contains "_victory(" {
		v[2820] = 1
		@call .cev 2135
		@break
		
	    }
	    @if t[510] .contains "_defeat(" {
		v[2820] = 2
		@call .cev 2135
		@break
		
	    }
	    @if t[510] .contains "_end_flag(" {
		@pic[1760].move {
		    .pos v[1115], v[1116] .center
		    .scale 100
		    .trans 100
		    .time 15
		    .rgbs 100, 100, 100, 100
		}
		s[461].on
		@break
		
	    }
	    
	}

}

__fn scripts_var{
	@loop 1 {
	    @comment "var_add(var,n)"
	    @if t[510] .contains "_add(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split "v", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[11]] += v[12]
		@break
		
	    }
	    @comment "var_sub(var,n)"
	    @if t[510] .contains "_sub(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split "v", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[11]] -= v[12]
		@break
		
	    }
	    @comment "var_mul(var,n)"
	    @if t[510] .contains "_mul(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split "v", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[11]] *= v[12]
		@break
		
	    }
	    @comment "var_div(var,n)"
	    @if t[510] .contains "_div(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split "v", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[11]] /= v[12]
		@break
		
	    }
	    @comment "var_asg(var,n)"
	    @if t[510] .contains "_asg(" {
		t[510] .split "(", t[3000], v[341]
		t[3001] .split "v", t[3000], v[341]
		t[3001] .split ")", t[3000], v[341]
		t[3000] .split ",", t[3000], v[341]
		t[3000] .toNum v[11]
		t[3001] .toNum v[12]
		v[v[11]] = v[12]
		@break
		
	    }
	    
	}


}



