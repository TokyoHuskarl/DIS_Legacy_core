#include "./../MAKE_CONFIG"
#include "./../PSEUDO_ARG" 
//You have to put Append directory in the game directory to compile DraCore and etc into .ldb
//And you need to put tpc.exe and its blueprint txt files in Append directory.

//YOU HAVE TO CHANGE HERE TO BUILD ALL LDB AT ONCE
__if PSEUDO_ARG_SET == 0{
	//def MAKE_TYPE = 0
}

def DEBUG_BUILD = 0 //0 = release, 1 = debug

__if MAKE_TYPE == 0{
#apply
#directory "./../../.."
#blueprint.db("./../../def_ldb.txt")
#blueprint.map("./../../def_lmu.txt")
#blueprint.tree("./../../def_lmt.txt")

}.elif MAKE_TYPE == 1 {
#apply
#directory "./../.."
#blueprint.db("./../def_ldb.txt")
#blueprint.map("./../def_lmu.txt")
#blueprint.tree("./../def_lmt.txt")
}

//Backup is for faggots
#copyMode .force

def DIS_DEBUG_BUILD = DEBUG_BUILD



__if DEBUG_BUILD ==1 {
#optimize 0
}.else bl {
#optimize 1 //eggsperimental, can cause some problems
}



def DIS_EXPERIMENTAL = 1 //0=nah 1=compile experimental features

//Set basic FPS - 60 in Maniacs patch default setting, 45 in DIS:Classic, 48 in DIS:Legacy.  
def {
	DIS_Game_FPS = 48
	g_perFPS = 2041 //98000 / 48 - gravitational acceleration
	g_perFPS_half = 1020

	AA_WAIT_FPSx1= 4800
	AA_WAIT_FPSx2= 10000
}


//Entity General Const Setting
def {

	//Array_Head = Array[0] has element, Array_Start = Array[0] doesn't have actual element (design flaw!)

	Team_Variables_Array_Size = 40
	Const_Team_Address_FactionID_Array_Head = 2403


	Team_Tech_Array_Size = 3
	Const_Team_Address_Tech_Array_Head = 2406

	Const_Team_Address_CombatPower_Array_Head = 2812


	Const_Massive_Battle_Amount = 250

    	Const_Map_Allocate_Limit = 160000
	//ObjLimit = 845
	Agents_Limit = 845
	Effects_Limit = 120
	Effects_Additional_Cap = 65
	PicID_Effects_Begin = 801

	Projectiles_Limit = 180

}
defv {
	Const_save_var_Agents_Limit = 1004


	Const_save_var_Effects_Limit = 1017
	Const_save_var_Effects_PicID_Begin = 1220
	//Const_save_var_Address_Effects_Array_PlusOne = 4840 No need, remove this from init
	Const_save_var_Address_Effects_Array_Begin=1018
	Const_save_var_Projefctiles_Limit = 4559


}

//load old switches and variables name as defv or defs 
#include "./id_project_defs.tpc"
#include "./id_project_defv.tpc"


#include "./header_log.tpc"

//common macros
__fn file_output_cooldown(){
	@loop .inf()  {
			@if  .canOutput() {  
			    @break
			}
			@wait 0
		    }
}

//Const Addresses
def Address_Agent_HitCollisionArrayStart = 746949

__fn func_force_crash $str{
	@pic[1].show {
	    $str
	    .pos 160, 120 .center
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .mapLayer 7
	    .eraseWhenTransfer
	    .affectedByFlash
	    .affectedByShake
	}
}

/*
__fn macro_get_agent_slot_ptr $pointer $agent $slot{
	def consttoslot = 4700+$slot //idk if this def is possible
	$pointer = $agent * 300 + consttoslot
}*/

//basic structures definitions
#include "./define_structures_agent.tpc"

//cev 2004 GetParaNow v1v2 r1
def {


	Const_var_bit_maniacs = 32
	Const_AgentMetaTeam_begin = 460318
	
	Memory_MapInfo=300317

	//0 = inf, 1 = archer, 2 = cav, 3 = magician, 4 = healer, 5 = siege, 7 = animals, 8=decayable, 9 = civilians, 11 = flying, 21 = ship, 101 = barrack, 102 = no_col_static, 103 = decoy, 104 = basement, 105 = resource, 106 = turret, 107 = terrainchange
	UNIT_CLASS_INF=0
	UNIT_CLASS_ARCHER=1
	UNIT_CLASS_CAV=2

	UNIT_CLASS_STATIC=11
	
	UNIT_CLASS_STATIC_TURRET = 106

    //Maptile Flags 
    	FLAG_Maptile_Occupied = 1
	FLAG_Maptile_Crowded = 2

	FLAG_Maptile_ShieldCoverTeam0 = 32
	FLAG_Maptile_ShieldCoverTeam1 = 64
	FLAG_Maptile_ShieldCoverTeam2 = 128
	FLAG_Maptile_PikeWallTeam0 = 256
	FLAG_Maptile_PikeWallTeam1 = 512
	FLAG_Maptile_PikeWallTeam2 = 1024
	
	Const_Melee_Fight_Time_by_Melee_Attack = 170


	AGENT_SLOT_CURRENT_AD=261
	AGENT_SLOT_CURRENT_AP=262
	AGENT_SLOT_CURRENT_AR=263
	AGENT_SLOT_CURRENT_MR=264
	AGENT_SLOT_CURRENT_HIT=265
	AGENT_SLOT_CURRENT_EVA=266
	AGENT_SLOT_CURRENT_CRIT=267
	AGENT_SLOT_CURRENT_MS=268


	AGENT_STATIC_SLOT_MINIMAP_X=258
	AGENT_STATIC_SLOT_MINIMAP_Y=259

	//Legacy
	SLOT_CURRENT_AD=261
	SLOT_CURRENT_AP=262
	SLOT_CURRENT_AR=263
	SLOT_CURRENT_MR=264
	SLOT_CURRENT_HIT=265
	SLOT_CURRENT_EVA=266
	SLOT_CURRENT_CRIT=267
	SLOT_CURRENT_MS=268




	//














}
#include "./const_picture_ids.tpc"


__fn macro_get_agent_slot_to_r1 $agent $slot{
	
	/*@comment "Var1 = Obj 1~ Var2 = パラメータ番号# 1~9 AD~MS Reg1 = 取得した数値(Process)"*/
	v[21] = v[$agent * 300 + 4700 + $slot]
}
__fn macro_set_agent_slot $agent $slot $setpar{
	v[$agent * 300 + 4700 + $slot] = $setpar
}

deft Str_MapDirectory = 750
deft Str_MapID = 751
deft Str_MapName = 752

deft Font_Common = 529
defv Font_Common_size = 4510 
deft Font_UI = 530
defv Font_UI_size = 4511
//deft Font_Imperial =


deft Current_BGMFile = 760

deft StrConst_LF = 525
deft LF = 525
//Fundamental Switches
def Const_Is_RTS_Mode = 20
defs Is_RTS_Mode = 20
defs Is_Paused = 2

//What da fugg is this confusing naming rule lmao
def Const_Is_SightSystem_On = 300
defs Is_SightSystem_On = 300
def Const_Is_Drawing_Units = 35
def Const_Is_Minimap_Set = 78

defs Bool_Refresh_Static_Minimap = 75

//vars
defv{
    
    AllFrameCount = 2501
    ConstPtr_ObjPicSort_begin = 1112
    ConstPtr_ObjDrawnList_begin =1184

//map vars
	var_Map_Width = 2061
	var_Map_Height = 2062

	zeroArray100 = 1301 // only used for cleanup

    //vars and regs
    //they are usually used as ARG and REG in common events
    //vars
	var1=11
	var2=12
	var3=13
	var4=14
	var5=15
	var6=16
	var7=17
	var8=18
	var9=19
	var10=20
    //regs
	reg1=21
	reg2=22
	reg3=23
	reg4=24
	reg5=25
	reg6=26
	reg7=27
	reg8=28
	reg9=29
	reg10=30
    //Temporary variables begin
    //I know it's freaking terrible but you cannot avoid using them; DIS project started in 2019 - it's before the maniacs patch implements common event self variables and etc.

    //temporary Ptrs
	Ptr1=281
	Ptr2=282
	Ptr3=283
	Ptr4=284
	Ptr5=285
	Ptr6=286
	Ptr7=287
	Ptr8=288
	Ptr9=289
	Ptr10=290
	Ptr11=291
	Ptr12=292
	Ptr13=293
	Ptr14=294
	Ptr15=295
	Ptr16=296
	Ptr17=297
	Ptr18=298
	Ptr19=299
	Ptr20=300


    //TEMP vars
	Temp1=301
	Temp2=302
	Temp3=303
	Temp4=304
	Temp5=305
	Temp6=306
	Temp7=307
	Temp8=308
	Temp9=309
	Temp10=310
	Temp11=311
	Temp12=312
	Temp13=313
	Temp14=314
	Temp15=315
	Temp16=316
	Temp17=317
	Temp18=318
	Temp19=319
	Temp20=320
	Temp21=321
	Temp22=322
	Temp23=323
	Temp32=332
	Temp35=335
	Temp37=337
    //TEMPTEMPS
    //They are more temporary than regular TEMPS... what?
	TT1=341
	TT2=342
	TT3=343
	TT4=344
	TT5=345
	TT6=346
	TT7=347
	TT8=348
	TT9=349
	TT10=350
	TT11=351
	TT12=352
	TT13=353
	TT14=354
	TT15=355
	TT16=356
	TT17=357
	TT18=358
	TT19=359
	TT20=360

	TempFlag1 = 371

	var_allocatedmapsize=2063
    //Consts for allocating memories
    	Const_save_var_UnitAISightRoot = 4806
	Const_save_var_TileFlags = 4805 
	Const_var_save_all_morton_memories = 4825
	ptr_null =  4824
	Const_2_combi = 4826
}

//strs
deft{
	str1=501
	str2=502
	str3=503
	str4=504
	str5=505
	str6=506
	str7=507
	str8=508
	str9=509
	
	strreg1=1 // are you serious?

}


def EXTRACT_FLAG_Data_extracted = 0x1
__fn func_extract_agent_vars $agent {
	    Ptr1 = $agent*300
	    Ptr1 += 4701
	    v[Ptr1].copy v[601], agent_Basic_Array_size
	    __if AGENT_DATA_EXTRACTED == 0 {
	    	def AGENT_DATA_EXTRACTED = 1
	    }
}

__fn func_save_extracted_agent_vars {
	    __if AGENT_DATA_EXTRACTED == 0 {
		ERROR_AGENT_DATA_EXTRACTED_not_defined
	    }.else bl{
		agent_ObjectType.copy v[Ptr1], agent_Basic_Array_size
	    }
}


__fn macro_check_agent_is_killed $agentid{
	//v[341] = 300 * v[11] + 4701
	//v[21] = v[v[341]] <= 0 ? 1 : 0
	//v[21] = v[11] >= 1 ? v[21] : 0
	reg1 = $agentid >= 1 ? (v[(300 * $agentid + 4701)] <= 0 ? 1 : 0) : 0
}

__fn func_init_array $ptr $amount{
	v[ptr_null].copy $ptr, $amount
}



#include "./define_structures_effect.tpc"

defv effect_set_ptr = __id(Temp1)
__fn macro_effect_array_increment_ptr{
	v[242] %= v[1017]
	effect_set_ptr = v[242] * EffectArraySize
	effect_set_ptr += v[1018]
}

#include "./define_structures_particle.tpc"

__fn func_export_deblog_array $name $ptr $amount {
	__if DEBUG_BUILD ==1{
		str2.asg $name
		str1.asg"DIS DEBUG SYSTEM: EXPORT ARRAY"
		str1.cat StrConst_LF
		str1.cat "Address:"
		str1.cat $ptr
		str1.cat StrConst_LF
		str1.cat "Amount:"
		str1.cat $amount
		str1.cat StrConst_LF
		str1.cat StrConst_LF
		@loop $amount .dst TT1{
			TT2=$ptr+TT1
			reg1=v[TT2]
			str1.cat "Element["
			str1.cat TT1
			str1.cat "]:"
			str1.cat reg1
			str1.cat LF
		}
		str1.cat "EOF"
		str1.toFile str2 .utf8
		func_devlog("\t[502] Exported.")

	}

}


__fn macro_cord_diff $x $y {
	    
	    //v[__id($x)] = ($x / 10000 + v[53] - v[403])/16
	    //v[__id($y)] = ($y / 10000 + v[54] - v[404])/16
	    
	    //this one was far faster
	    v[__id($x)..__id($y)]/=10000
	    v[__id($x)] .sub v[403], 2
	    v[__id($x)] .add v[53], 2
	    v[__id($x)..__id($y)]/=16
}

#include "./header_common_items.tpc"


//INCLUDE NsLib
defv NsLib_SYSTEM_BGM_VOLUME = 2217
defv NsLib_SYSTEM_SE_VOLUME = 2216
#include "./../NsLib/header_NsLib.tpc"


__fn PROC $block {
	$block
}

//pseud struct
__fn struct $name $block {
	$block
}

#include "./header_macros.tpc"

$DIS_h_common_included = 1
