#include "./../MAKE_CONFIG"
#include "./../PSEUDO_ARG" 
//You have to put Append directory in the game directory to compile DraCore and etc into .ldb
//And you need to put tpc.exe and its blueprint txt files in Append directory.

//YOU HAVE TO CHANGE HERE TO BUILD ALL LDB AT ONCE
__if PSEUDO_ARG_SET == 0 {
	//def MAKE_TYPE = 0
}

def DEBUG_BUILD = 0 //0 = release, 1 = debug

__if MAKE_TYPE == 0 {
#apply
#directory "./../../.."
#blueprint.db("./../../def_ldb.txt")
#blueprint.map("./../../def_lmu.txt")
#blueprint.tree("./../../def_lmt.txt")

}.elif MAKE_TYPE == 1 {
#apply
#directory "./../.."
#blueprint.db("./../def_ldb.txt")
#blueprint.map("./../def_lmu.txt")
#blueprint.tree("./../def_lmt.txt")
}

//Backup is for faggots
#copyMode .force

def DIS_DEBUG_BUILD = DEBUG_BUILD



__if DEBUG_BUILD == 1 {
#optimize 0
}.else bl {
#optimize 1 //eggsperimental, can cause some problems
}



def DIS_EXPERIMENTAL = 1 //0=nah 1=compile experimental features

//Set basic FPS - 60 in Maniacs patch default setting, 45 in DIS:Classic, 48 in DIS:Legacy.  
def {
	DIS_Game_FPS = 48
	g_perFPS = 2041 //98000 / 48 - gravitational acceleration
	g_perFPS_half = 1020

	AA_WAIT_FPSx1= 4800
	AA_WAIT_FPSx2= 10000
}


//Entity General Const Setting
def {

	//Array_Head = Array[0] has element, Array_Start = Array[0] doesn't have actual element (design flaw!)

	Team_Variables_Array_Size = 40
	Const_Team_Address_FactionID_Array_Head = 2403


	Team_Tech_Array_Size = 3
	Const_Team_Address_Tech_Array_Head = 2406

	Const_Team_Address_CombatPower_Array_Head = 2812


	Const_Massive_Battle_Amount = 250

	Const_Map_Allocate_Limit = 160000 // which part of the map mem allocated???

	Agents_Limit = 890 // 845
	Effects_Limit = 120
	Effects_Additional_Cap = 65
	PicID_Effects_Begin = 801

	Projectiles_Limit = 180

}


defv {
	Const_save_var_Agents_Limit = 1004


	Const_save_var_Effects_Limit = 1017
	Const_save_var_Effects_PicID_Begin = 1220
	//Const_save_var_Address_Effects_Array_PlusOne = 4840 No need, remove this from init
	Const_save_var_Address_Effects_Array_Begin=1018
	Const_save_var_AdrTerrainBitsHead = 4505
	Const_save_var_Projefctiles_Limit = 4559


}

//load old switches and variables name as defv or defs 
#include "./id_project_defs.tpc"
#include "./id_project_defv.tpc"


#include "./header_log.tpc"

//common macros
__fn file_output_cooldown(){
	@loop .inf()  {
			@if  .canOutput() {  
			    @break
			}
			@wait 0
		    }
}

//Const Addresses
def Address_Agent_HitCollisionArrayStart = 746949

__fn func_force_crash $str{
	@pic[1].show {
	    $str
	    .pos 160, 120 .center
	    .chromakey 1
	    .scale 100
	    .trans 0
	    .rgbs 100, 100, 100, 100
	    .mapLayer 7
	    .eraseWhenTransfer
	    .affectedByFlash
	    .affectedByShake
	}
}

/*
__fn macro_get_agent_slot_ptr $pointer $agent $slot{
	def consttoslot = 4700+$slot //idk if this def is possible
	$pointer = $agent * 300 + consttoslot
}*/

//cev 2004 GetParaNow v1v2 r1
def {
	RMkey_Lclick = 1005

	Const_var_bit_maniacs = 32
	Const_AgentMetaTeam_begin = 460318
	
	Memory_MapInfo = 300317

	//0 = inf, 1 = archer, 2 = cav, 3 = magician, 4 = healer, 5 = siege, 7 = animals, 8=decayable, 9 = civilians, 11 = flying, 21 = ship, 101 = barrack, 102 = no_col_static, 103 = decoy, 104 = basement, 105 = resource, 106 = turret, 107 = terrainchange
	UNIT_CLASS_INF = 0
	UNIT_CLASS_ARCHER = 1
	UNIT_CLASS_CAV = 2
	UNIT_CLASS_MAGE = 3
	UNIT_CLASS_HEAL = 4
	UNIT_CLASS_SIEGE = 5

	UNIT_CLASS_STATIC=11
	
	UNIT_CLASS_STATIC_TURRET = 106

    //Maptile Flags 
    	FLAG_Maptile_Occupied = 1
	FLAG_Maptile_Crowded = 2

	FLAG_Maptile_ShieldCoverTeam0 = 32
	FLAG_Maptile_ShieldCoverTeam1 = 64
	FLAG_Maptile_ShieldCoverTeam2 = 128
	FLAG_Maptile_PikeWallTeam0 = 256
	FLAG_Maptile_PikeWallTeam1 = 512
	FLAG_Maptile_PikeWallTeam2 = 1024
	
	Const_Melee_Fight_Time_by_Melee_Attack = 170


	AGENT_SLOT_CURRENT_AD=261
	AGENT_SLOT_CURRENT_AP=262
	AGENT_SLOT_CURRENT_AR=263
	AGENT_SLOT_CURRENT_MR=264
	AGENT_SLOT_CURRENT_HIT=265
	AGENT_SLOT_CURRENT_EVA=266
	AGENT_SLOT_CURRENT_CRIT=267
	AGENT_SLOT_CURRENT_MS=268


	AGENT_STATIC_SLOT_MINIMAP_X=258
	AGENT_STATIC_SLOT_MINIMAP_Y=259

	//Legacy
	SLOT_CURRENT_AD=261
	SLOT_CURRENT_AP=262
	SLOT_CURRENT_AR=263
	SLOT_CURRENT_MR=264
	SLOT_CURRENT_HIT=265
	SLOT_CURRENT_EVA=266
	SLOT_CURRENT_CRIT=267
	SLOT_CURRENT_MS=268




	//














}
#include "./const_picture_ids.tpc"


__fn macro_get_agent_slot_to_r1 $agent $slot{
	
	v[21] = v[$agent * 300 + 4700 + $slot]
}
__fn macro_set_agent_slot $agent $slot $setpar{
	v[$agent * 300 + 4700 + $slot] = $setpar
}

deft Str_MapDirectory = 750
deft Str_MapID = 751
deft Str_MapName = 752

deft Font_Common = 529
defv Font_Common_size = 4510 
deft Font_UI = 530
defv Font_UI_size = 4511
//deft Font_Imperial =



deft Current_BGMFile = 760

deft StrConst_LF = 525
deft LF = 525
def RAWSTR_LF = __str("\t[", __id(LF), "]")

deft Str_LanguageToken = 526

deft Str_LanguagePath = 528


//Fundamental Switches
def Const_Is_RTS_Mode = 20
defs Is_RTS_Mode = 20
defs Is_Paused = 2

//What da fugg is this confusing naming rule lmao
def Const_Is_SightSystem_On = 300
defs Is_SightSystem_On = 300
def Const_Is_Drawing_Units = 35
def Const_Is_Minimap_Set = 78

defs Bool_Refresh_Static_Minimap = 75

//vars
defv{

	// control vars
	Common_Control_Ck = 43
	Mouse_x = 49
	Mouse_y = 50
	MousePtr_X = 51
	MousePtr_Y = 52

	AllFrameCount = 2501
	ConstPtr_ObjPicSort_begin = 1112
	ConstPtr_ObjDrawnList_begin = 1184

//map vars
	var_Map_Width = 2061
	var_Map_Height = 2062

	Map_LimitCoordX_min = 69
	Map_LimitCoordX_max = 71

	Map_LimitCoordY_min = 70
	Map_LimitCoordY_max = 72


	zeroArray100 = 1301 // only used for cleanup

    //vars and regs
    //they are usually used as ARG and REG in common events
    //vars
	var1=11
	var2=12
	var3=13
	var4=14
	var5=15
	var6=16
	var7=17
	var8=18
	var9=19
	var10=20
    //regs
	reg1 = 21
	reg2 = 22
	reg3 = 23
	reg4 = 24
	reg5 = 25
	reg6 = 26
	reg7 = 27
	reg8 = 28
	reg9 = 29
	reg10 = 30
    //Temporary variables begin
    //I know it's freaking terrible but you cannot avoid using them; DIS project started in 2019 - it's before the maniacs patch implements common event self variables and etc.

    //temporary Ptrs
	Ptr1 = 281
	Ptr2 = 282
	Ptr3 = 283
	Ptr4 = 284
	Ptr5 = 285
	Ptr6 = 286
	Ptr7 = 287
	Ptr8 = 288
	Ptr9 = 289
	Ptr10 = 290
	Ptr11 = 291
	Ptr12 = 292
	Ptr13 = 293
	Ptr14 = 294
	Ptr15 = 295
	Ptr16 = 296
	Ptr17 = 297
	Ptr18 = 298
	Ptr19 = 299
	Ptr20 = 300


    //TEMP vars
	Temp1 = 301
	Temp2 = 302
	Temp3 = 303
	Temp4 = 304
	Temp5 = 305
	Temp6 = 306
	Temp7 = 307
	Temp8 = 308
	Temp9 = 309
	Temp10 = 310
	Temp11 = 311
	Temp12 = 312
	Temp13 = 313
	Temp14 = 314
	Temp15 = 315
	Temp16 = 316
	Temp17 = 317
	Temp18 = 318
	Temp19 = 319
	Temp20 = 320
	Temp21 = 321
	Temp22 = 322
	Temp23 = 323
	Temp32 = 332
	Temp35 = 335
	Temp37 = 337
    //TEMPTEMPS
    //They are more temporary than regular TEMPS... what?
	TT1 = 341
	TT2 = 342
	TT3 = 343
	TT4 = 344
	TT5 = 345
	TT6 = 346
	TT7 = 347
	TT8 = 348
	TT9 = 349
	TT10 = 350
	TT11 = 351
	TT12 = 352
	TT13 = 353
	TT14 = 354
	TT15 = 355
	TT16 = 356
	TT17 = 357
	TT18 = 358
	TT19 = 359
	TT20 = 360

	InvVar1 = 1951 
	InvVar2
	InvVar3
	InvVar4
	InvVar5
	InvVar6
	InvVar7
	InvVar8
	InvVar9

	TempFlag1 = 371

	var_allocatedmapsize=2063
    //Consts for allocating memories
    	Const_save_var_UnitAISightRoot = 4806
	Const_save_var_TileFlags = 4805 
	Const_var_save_all_morton_memories = 4825
	ptr_null =  4824
	Const_2_combi = 4826
}

//strs
deft{
	str1 = 501
	str2 = 502
	str3 = 503
	str4 = 504
	str5 = 505
	str6 = 506
	str7 = 507
	str8 = 508
	str9 = 509
	inputstr = 510
	strreg1 = 1 // are you serious?
	regs1 = 1


	strAr0 = 3000
	strAr1 = 3001
	strAr2 = 3002
	strAr3 = 3003
	strAr4 = 3004
	strAr5 = 3005
	strAr6 = 3006
	strAr7 = 3007
	strAr8 = 3008
	strAr9 = 3009
	strAr10 = 3010
	strAr11 = 3011
	strAr12 = 3012
	strAr13 = 3013
	strAr14 = 3014
	strAr15 = 3015
	strAr16 = 3016
	strAr17 = 3017
	strAr18 = 3018
	strAr19 = 3019
	strAr20 = 3020
	strAr21 = 3021
	strAr22 = 3022
	strAr23 = 3023
	strAr24 = 3024
	strAr25 = 3025
	strAr26 = 3026
	strAr27 = 3027
	strAr28 = 3028
	strAr29 = 3029
	strAr30 = 3030
	strAr31 = 3031
	strAr32 = 3032
	strAr33 = 3033
	strAr34 = 3034
	strAr35 = 3035
	strAr36 = 3036
	strAr37 = 3037
	strAr38 = 3038
	strAr39 = 3039
	strAr40 = 3040
	strAr41 = 3041
	strAr42 = 3042
	strAr43 = 3043
	strAr44 = 3044
	strAr45 = 3045
	strAr46 = 3046
	strAr47 = 3047
	strAr48 = 3048
	strAr49 = 3049
	strAr50 = 3050
	strAr51 = 3051
	strAr52 = 3052
	strAr53 = 3053
	strAr54 = 3054
	strAr55 = 3055
	strAr56 = 3056
	strAr57 = 3057
	strAr58 = 3058
	strAr59 = 3059
	strAr60 = 3060
	strAr61 = 3061
	strAr62 = 3062
	strAr63 = 3063
	strAr64 = 3064
	strAr65 = 3065
	strAr66 = 3066
	strAr67 = 3067
	strAr68 = 3068
	strAr69 = 3069
	strAr70 = 3070
	strAr71 = 3071
	strAr72 = 3072
	strAr73 = 3073
	strAr74 = 3074
	strAr75 = 3075
	strAr76 = 3076
	strAr77 = 3077
	strAr78 = 3078
	strAr79 = 3079
	strAr80 = 3080
	strAr81 = 3081
	strAr82 = 3082
	strAr83 = 3083
	strAr84 = 3084
	strAr85 = 3085
	strAr86 = 3086
	strAr87 = 3087
	strAr88 = 3088
	strAr89 = 3089
	strAr90 = 3090
	strAr91 = 3091
	strAr92 = 3092
	strAr93 = 3093
	strAr94 = 3094
	strAr95 = 3095
	strAr96 = 3096
	strAr97 = 3097
	strAr98 = 3098
	strAr99 = 3099

}


//basic structures definitions
#include "./define_structures_agent.tpc"
#include "./define_structures_map.tpc"



def EXTRACT_FLAG_Data_extracted = 0x1
__fn func_extract_agent_vars $agent {
	    Ptr1 = $agent*300
	    Ptr1 += 4701
	    v[Ptr1].copy v[601], agent_Basic_Array_size
	    __if AGENT_DATA_EXTRACTED == 0 {
	    	def AGENT_DATA_EXTRACTED = 1
	    }
}

__fn func_save_extracted_agent_vars {
	    __if AGENT_DATA_EXTRACTED == 0 {
		ERROR_AGENT_DATA_EXTRACTED_not_defined
	    }.else bl{
		agent_ObjectType.copy v[Ptr1], agent_Basic_Array_size
	    }
}


__fn macro_check_agent_is_killed $agentid{
	//v[341] = 300 * v[11] + 4701
	//v[21] = v[v[341]] <= 0 ? 1 : 0
	//v[21] = v[11] >= 1 ? v[21] : 0
	reg1 = $agentid >= 1 ? (v[(300 * $agentid + 4701)] <= 0 ? 1 : 0) : 0
}

__fn func_init_array $ptr $amount{
	v[ptr_null].copy $ptr, $amount
}



#include "./define_structures_effect.tpc"

defv effect_set_ptr = __id(Temp1)
__fn macro_effect_array_increment_ptr{
	v[242] %= v[1017]
	effect_set_ptr = v[242] * EffectArraySize
	effect_set_ptr += v[1018]
}

#include "./define_structures_particle.tpc"

__fn func_export_deblog_array $name $ptr $amount {
	__if DEBUG_BUILD ==1{
		str2.asg $name
		str1.asg"DIS DEBUG SYSTEM: EXPORT ARRAY"
		str1.cat StrConst_LF
		str1.cat "Address:"
		str1.cat $ptr
		str1.cat StrConst_LF
		str1.cat "Amount:"
		str1.cat $amount
		str1.cat StrConst_LF
		str1.cat StrConst_LF
		@loop $amount .dst TT1{
			TT2=$ptr+TT1
			reg1=v[TT2]
			str1.cat "Element["
			str1.cat TT1
			str1.cat "]:"
			str1.cat reg1
			str1.cat LF
		}
		str1.cat "EOF"
		str1.toFile str2 .utf8
		func_devlog("\t[502] Exported.")

	}

}


__fn macro_cord_diff $x $y {
	    
	    //v[__id($x)] = ($x / 10000 + v[53] - v[403])/16
	    //v[__id($y)] = ($y / 10000 + v[54] - v[404])/16
	    
	    //this one is far faster
	    v[__id($x)..__id($y)] /= 10000
	    v[__id($x)] .sub v[403], 2
	    v[__id($x)] .add v[53], 2
	    v[__id($x)..__id($y)] /= 16
}

#include "./header_common_items.tpc"


//INCLUDE NsLib
defv NsLib_SYSTEM_BGM_VOLUME = 2217
defv NsLib_SYSTEM_SE_VOLUME = 2216
#include "./../NsLib/header_NsLib.tpc"


__fn PROC $block {
	$block
}

//pseud struct
__fn struct $name $block {
	$block
}

#include "./header_macros.tpc"

#include "./id_project_cev.tpc"

__fn func_general_camera_move $x $y {
	@scr.scroll {
		.set($x,$y),
		.time 0,
		.center,
	}
}


// quick string functions..
def QuickString_Start = 20000
deft string_buffer = 3000
deft string_buffer_array_head = 3001

// return quick string to string_buffer
__fn getQstr $quickstring_id {
	v[1961] = v[1213] + $quickstring_id
	string_buffer .asg .rep(t[v[1961]],"^",LF) .extract
}


// file path setting
def {

	PATH_language = "../Languages/"

	PATH_module = "/Module/Legacy/"
		
		PATH_moduleLang = __str("../",PATH_module,"Languages/")

	PATH_gui_setting = __str("../",PATH_module,"gui/") // new gui setting put in module directory

	PATH_core_data = "..\data\"
	

	PATH_pictureHome = ""

		// UI asset path
		PATH_ui_dir = __str(PATH_pictureHome,"\ui\")

		PATH_Legacy_UI_passive_icon = __str(PATH_pictureHome,"\passive_icon\")


		
		// minions parts path

		PATH_spr_armor = __str(PATH_pictureHome,"parts\armor\spr_armor_0")
		PATH_spr_head = __str(PATH_pictureHome,"parts\bodyset\set\spr_head_0")
		PATH_spr_helm = __str(PATH_pictureHome,"parts\helm\spr_helm_0")
		PATH_spr_weapon = __str(PATH_pictureHome,"parts\weapons\spr_cweapons_1")
		PATH_spr_misc = __str(PATH_pictureHome,"parts\misc\spr_misc_0")
		PATH_spr_minion = __str(PATH_pictureHome,"minions\spr_minions_1")
		PATH_spr_static = __str(PATH_pictureHome,"static\spr_static_1")
		PATH_spr_hair = __str(PATH_pictureHome,"parts\hair\spr_hair_0")
		PATH_spr_armor_damaged = __str(PATH_pictureHome,"parts\armor\damaged\spr_damaged_armor_0")
		PATH_spr_head_damaged = __str(PATH_pictureHome,"parts\bodyset\set\damaged\spr_damaged_head_0")
		PATH_spr_minion_damaged = __str(PATH_pictureHome,"minions\damaged\spr_damaged_minions_0")

		PATH_pic_numdir = __str(PATH_pictureHome,"\num\" )
			PATH_pic_numdir_number = __str(PATH_pic_numdir,"ord" )
			PATH_pic_numdir_block = __str(PATH_pic_numdir,"num_block" )
			PATH_pic_numdir_miss = __str(PATH_pic_numdir,"num_miss" )



}

__fn readLangFile $loadfile $savestr {
	@if Str_LanguageToken.eq "_jp" {
		t[__id($savestr)] .asg  .file $loadfile, .sjis , .extract
		
	}.else bl {
		t[__id($savestr)] .asg  .file $loadfile, .utf8 , .extract
		
	}
}

// Address setting
def {
	Adr_terrainbits_head = 463616

	Adrt_terraindata_head = 18500

}




$DIS_h_common_included = 1
