//functions and macros relate to picture edit


//cev 2011 Stamp pic[EDITPIC] T[501] to pic[v1] v2v3 v4
def heap_for_pixel_information = 550445 // it's not heap. retard
def buffer_for_pixel_information_head = 550445
def buffer_pixel_info_size_max = 100 * 100 // temp
__fn func_stamp_picture_on_pic_id $string_stamp_picture_path $picid $x $y $bool_center{
	//@comment "V4  #0, 1= center"
	@pic[EDITPIC].show {
	    $string_stamp_picture_path
	    .pos -111, -111 .center
	    .chromakey 1
	    .scale 100
	    .trans 100
	    .rgbs 100, 100, 100, 100
	    .mapLayer 7
	    .eraseWhenTransfer
	    .affectedByFlash
	    .affectedByShake
	}
	@pic[EDITPIC].getInfo .cewh .baseRect v[360], v[360], v[355], v[356]
	@pic[EDITPIC].getInfo .pixel 0, 0, v[355], v[356] .dst heap_for_pixel_information
	@if $bool_center == 1 {
	    @pic[$picid].getInfo .cewh .baseRect v[360], v[360], v[19], v[20]
	    v[19..20] /= 2
	    
	} .else bl {
	    v[19..20] = 0
	    
	}
	//pointer for getting pixel info set
	v[18] = buffer_for_pixel_information_head
	//var5, var6 = counter
	//
	@loop v[356] .dst v[15] {
	    @loop v[355] .dst v[16] {
		v[17] = v[v[18]]
		@if `(v[17] & 0xFF000000) == 0xFF000000 { //ignore transparent pixel
		    v[358] = ($x + v[16]) - v[355] / 2
		    v[359] = ($y + v[15]) - v[356] / 2
		    v[358] .add v[19], 2
		    @pic[$picid].setPixel .xywh v[358], v[359], 1, 1 .src v[17]
		    
		}
		v[18] += 1
		
	    }
	    
	    
	}

}



// just a test function, not even practical
__fn bilinear_sizechange_test {

	@pic[30].show {
		"../assets/title"
			.pos 0, 0 .topLeft
			.chromakey 1
			.scale 100
			.trans 0
			.rgbs 100, 100, 100, 100
			.mapLayer 9
			.eraseWhenTransfer
			.affectedByFlash
			.affectedByShake
	}
	@pic[30].getInfo .pixel 0,0,800,450 .dst 5504450
		eval_js("setv(5504450,resizeImage(getv(5504450,800*450),800,450,0.5))")
		@pic[30].setPixel .xywh 0, 0, 400, 225 .src v[5504450] .opaq




}
